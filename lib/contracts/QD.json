{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_usdt",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "reciever",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cost_in_usd",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qd_amt",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINT_QD_PER_DAY_MAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SALE_LENGTH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "final_price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_total_supply_cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "total_supply_cap",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "qd_amt",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost_in_usdt",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "qd_amt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "block_timestamp",
          "type": "uint256"
        }
      ],
      "name": "qd_amt_to_usdt_amt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "usdt_amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sale_start",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "start_price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdt",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/QD.sol",
    "1": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
    "2": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
    "3": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
    "4": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "5": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
    "6": "node_modules/@openzeppelin/contracts/utils/Address.sol",
    "7": "node_modules/@openzeppelin/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/QD.sol",
    "exportedSymbols": {
      "Address": [1662],
      "Context": [1264],
      "ERC20": [1018],
      "IERC20": [1342],
      "IERC20Metadata": [1367],
      "Ownable": [430],
      "QD": [325],
      "SafeERC20": [1242]
    },
    "id": 326,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "0.8", ".3"],
        "nodeType": "PragmaDirective",
        "src": "33:22:0"
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 326,
        "sourceUnit": 431,
        "src": "58:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 326,
        "sourceUnit": 1019,
        "src": "111:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 326,
        "sourceUnit": 1243,
        "src": "167:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 430,
              "src": "249:7:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "249:7:0"
          },
          {
            "baseName": {
              "id": 7,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1018,
              "src": "258:5:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "258:5:0"
          }
        ],
        "contractDependencies": [430, 1018, 1264, 1342, 1367],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 325,
        "linearizedBaseContracts": [325, 1018, 1367, 1342, 430, 1264],
        "name": "QD",
        "nameLocation": "243:2:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 12,
            "libraryName": {
              "id": 9,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1242,
              "src": "276:9:0"
            },
            "nodeType": "UsingForDirective",
            "src": "270:26:0",
            "typeName": {
              "id": 11,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1018,
                "src": "290:5:0"
              },
              "referencedDeclaration": 1018,
              "src": "290:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1018",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": true,
            "id": 15,
            "mutability": "constant",
            "name": "_QD_DECIMALS",
            "nameLocation": "373:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 325,
            "src": "350:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "350:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3234",
              "id": 14,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "388:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_24_by_1",
                "typeString": "int_const 24"
              },
              "value": "24"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 18,
            "mutability": "constant",
            "name": "_USDT_DECIMALS",
            "nameLocation": "419:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 325,
            "src": "396:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "396:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "36",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "436:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_6_by_1",
                "typeString": "int_const 6"
              },
              "value": "6"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "676e4cba",
            "id": 21,
            "mutability": "constant",
            "name": "MINT_QD_PER_DAY_MAX",
            "nameLocation": "465:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 325,
            "src": "444:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "444:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530305f303030",
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "487:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500000_by_1",
                "typeString": "int_const 500000"
              },
              "value": "500_000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "bbc56cc8",
            "id": 24,
            "mutability": "constant",
            "name": "SALE_LENGTH",
            "nameLocation": "535:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 325,
            "src": "514:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "514:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3534",
              "id": 23,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "549:7:0",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4665600_by_1",
                "typeString": "int_const 4665600"
              },
              "value": "54"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "bf2b52bf",
            "id": 27,
            "mutability": "constant",
            "name": "start_price",
            "nameLocation": "606:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 325,
            "src": "585:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "585:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3232",
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "620:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_22_by_1",
                "typeString": "int_const 22"
              },
              "value": "22"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "08b309e3",
            "id": 30,
            "mutability": "constant",
            "name": "final_price",
            "nameLocation": "661:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 325,
            "src": "640:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "640:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3936",
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "675:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_96_by_1",
                "typeString": "int_const 96"
              },
              "value": "96"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "private_price",
            "nameLocation": "700:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 325,
            "src": "695:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "695:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 34,
            "mutability": "mutable",
            "name": "private_mint",
            "nameLocation": "720:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 325,
            "src": "715:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "715:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "2e5c0fe7",
            "id": 36,
            "mutability": "immutable",
            "name": "sale_start",
            "nameLocation": "806:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 325,
            "src": "783:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "783:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2f48ab7d",
            "id": 39,
            "mutability": "immutable",
            "name": "usdt",
            "nameLocation": "845:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 325,
            "src": "822:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$1018",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 38,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1018,
                "src": "822:5:0"
              },
              "referencedDeclaration": 1018,
              "src": "822:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1018",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 47,
            "name": "Mint",
            "nameLocation": "862:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "reciever",
                  "nameLocation": "884:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "868:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "868:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cost_in_usd",
                  "nameLocation": "899:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "894:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "894:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "qd_amt",
                  "nameLocation": "917:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "912:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "867:57:0"
            },
            "src": "856:69:0"
          },
          {
            "anonymous": false,
            "id": 53,
            "name": "Withdrawal",
            "nameLocation": "936:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "964:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "948:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "976:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "971:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "971:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "947:36:0"
            },
            "src": "930:54:0"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "1035:251:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 67,
                                      "name": "_usdt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 56,
                                      "src": "1093:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$1018",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 68,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "symbol",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 495,
                                    "src": "1093:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                      "typeString": "function () view external returns (string memory)"
                                    }
                                  },
                                  "id": 69,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1093:14:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 65,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1076:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 66,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1076:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 70,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1076:32:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 64,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1066:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1066:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "55534454",
                                  "id": 75,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1152:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
                                    "typeString": "literal_string \"USDT\""
                                  },
                                  "value": "USDT"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
                                    "typeString": "literal_string \"USDT\""
                                  }
                                ],
                                "expression": {
                                  "id": 73,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1135:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 74,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1135:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1135:24:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 72,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1125:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1125:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1066:94:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "51443a20434f4e5354525543544f525f5231",
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1171:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac8c3f09b04dbdf24cf81b660f3be520a271ae91d258abf11b74b1c24105e161",
                          "typeString": "literal_string \"QD: CONSTRUCTOR_R1\""
                        },
                        "value": "QD: CONSTRUCTOR_R1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac8c3f09b04dbdf24cf81b660f3be520a271ae91d258abf11b74b1c24105e161",
                          "typeString": "literal_string \"QD: CONSTRUCTOR_R1\""
                        }
                      ],
                      "id": 63,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1045:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1045:147:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1045:147:0"
                },
                {
                  "expression": {
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82,
                      "name": "private_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1202:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1218:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1202:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:17:0"
                },
                {
                  "expression": {
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86,
                      "name": "sale_start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1229:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 87,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1242:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1242:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1229:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1229:28:0"
                },
                {
                  "expression": {
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "1267:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1018",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 92,
                      "name": "_usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1274:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1018",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1267:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1018",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1267:12:0"
                }
              ]
            },
            "id": 96,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "51756944",
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1021:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a33036fdbe6348becc409c48b7953a4f4f38ffa17c6adcb41c39a8251066f4ee",
                      "typeString": "literal_string \"QuiD\""
                    },
                    "value": "QuiD"
                  },
                  {
                    "hexValue": "5144",
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1029:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3dd1b1ea75fcff32e97283faa62a290c5ecbd9d2a64097aa0a3d2f3bde21964d",
                      "typeString": "literal_string \"QD\""
                    },
                    "value": "QD"
                  }
                ],
                "id": 61,
                "modifierName": {
                  "id": 58,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1018,
                  "src": "1015:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1015:19:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "_usdt",
                  "nameLocation": "1008:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1002:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1018",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 55,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1018,
                      "src": "1002:5:0"
                    },
                    "referencedDeclaration": 1018,
                    "src": "1002:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1018",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1001:13:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1035:0:0"
            },
            "scope": 325,
            "src": "990:296:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "1377:1237:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 106,
                          "name": "qd_amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "1396:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "3130305f3030305f3030305f3030305f3030305f3030305f3030305f3030305f303030",
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1406:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000000"
                          },
                          "value": "100_000_000_000_000_000_000_000_000"
                        },
                        "src": "1396:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "51443a204d494e545f5231",
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1443:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6404d4dab2e28b43efaca1b56ff90a859328a5b8309fd59f7772b42845b7d328",
                          "typeString": "literal_string \"QD: MINT_R1\""
                        },
                        "value": "QD: MINT_R1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6404d4dab2e28b43efaca1b56ff90a859328a5b8309fd59f7772b42845b7d328",
                          "typeString": "literal_string \"QD: MINT_R1\""
                        }
                      ],
                      "id": 105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1388:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1388:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 113,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1491:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1491:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 115,
                            "name": "sale_start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "1509:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 116,
                            "name": "SALE_LENGTH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "1522:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1509:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1491:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "51443a204d494e545f5232",
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1535:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_569951c1b7a7012d1a7ed1519503089d59c75e72e94e4b7f48ac112d4950ed9d",
                          "typeString": "literal_string \"QD: MINT_R2\""
                        },
                        "value": "QD: MINT_R2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_569951c1b7a7012d1a7ed1519503089d59c75e72e94e4b7f48ac112d4950ed9d",
                          "typeString": "literal_string \"QD: MINT_R2\""
                        }
                      ],
                      "id": 112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1483:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:66:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 122,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "1590:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1590:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 124,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "1606:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1606:7:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1590:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 171,
                    "nodeType": "Block",
                    "src": "2088:144:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 163,
                            "name": "cost_in_usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "2163:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 165,
                                "name": "qd_amt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98,
                                "src": "2197:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 166,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2205:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "2205:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 164,
                              "name": "qd_amt_to_usdt_amt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 324,
                              "src": "2178:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) view returns (uint256)"
                              }
                            },
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2178:43:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2163:58:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 170,
                        "nodeType": "ExpressionStatement",
                        "src": "2163:58:0"
                      }
                    ]
                  },
                  "id": 172,
                  "nodeType": "IfStatement",
                  "src": "1586:646:0",
                  "trueBody": {
                    "id": 162,
                    "nodeType": "Block",
                    "src": "1615:458:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 128,
                                "name": "private_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "1637:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 129,
                                "name": "start_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "1653:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1637:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e277420616c6c6f6361746520616e79206d6f7265",
                              "id": 131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1666:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_47bdac9404aa8d5829a151a75e7590d9162eb550f6f60168c363187d8d66aa44",
                                "typeString": "literal_string \"Can't allocate any more\""
                              },
                              "value": "Can't allocate any more"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_47bdac9404aa8d5829a151a75e7590d9162eb550f6f60168c363187d8d66aa44",
                                "typeString": "literal_string \"Can't allocate any more\""
                              }
                            ],
                            "id": 127,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "1629:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1629:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 133,
                        "nodeType": "ExpressionStatement",
                        "src": "1629:63:0"
                      },
                      {
                        "assignments": [135],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 135,
                            "mutability": "mutable",
                            "name": "minting",
                            "nameLocation": "1711:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 162,
                            "src": "1706:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 134,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1706:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 137,
                        "initialValue": {
                          "hexValue": "325f3730305f3030305f3030305f3030305f3030305f3030305f3030305f3030305f3030305f303030",
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1721:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2700000000000000000000000000000_by_1",
                            "typeString": "int_const 2700000000000000000000000000000"
                          },
                          "value": "2_700_000_000_000_000_000_000_000_000_000"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1706:56:0"
                      },
                      {
                        "expression": {
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 138,
                            "name": "cost_in_usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "1904:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 139,
                                    "name": "minting",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 135,
                                    "src": "1919:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 142,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3130",
                                      "id": 140,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1929:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "id": 141,
                                      "name": "_USDT_DECIMALS",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 18,
                                      "src": "1935:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1929:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1919:30:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 144,
                                  "name": "private_price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "1952:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1919:46:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1968:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "id": 147,
                                  "name": "_QD_DECIMALS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15,
                                  "src": "1974:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1968:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1919:67:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1989:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "1919:73:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1904:88:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 153,
                        "nodeType": "ExpressionStatement",
                        "src": "1904:88:0"
                      },
                      {
                        "expression": {
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 154,
                            "name": "private_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "2007:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 155,
                            "name": "minting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "2023:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2007:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 157,
                        "nodeType": "ExpressionStatement",
                        "src": "2007:23:0"
                      },
                      {
                        "expression": {
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 158,
                            "name": "private_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2044:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "32",
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2061:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "2044:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 161,
                        "nodeType": "ExpressionStatement",
                        "src": "2044:18:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 174,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "2278:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 175,
                        "name": "qd_amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "2291:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 173,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 835,
                      "src": "2272:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2272:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "2272:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 179,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 515,
                              "src": "2340:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2340:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 181,
                            "name": "private_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "2356:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2340:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 183,
                            "name": "get_total_supply_cap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "2372:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2372:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2340:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "51443a204d494e545f5233",
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2396:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_401028b162d4c73195158ec85df81258fc2d06a40c711777723594cf34b476e4",
                          "typeString": "literal_string \"QD: MINT_R3\""
                        },
                        "value": "QD: MINT_R3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_401028b162d4c73195158ec85df81258fc2d06a40c711777723594cf34b476e4",
                          "typeString": "literal_string \"QD: MINT_R3\""
                        }
                      ],
                      "id": 178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2332:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2332:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "2332:78:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 192,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1254,
                          "src": "2509:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2509:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 196,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2531:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QD_$325",
                              "typeString": "contract QD"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_QD_$325",
                              "typeString": "contract QD"
                            }
                          ],
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2523:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 194,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2523:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2523:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 198,
                        "name": "cost_in_usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "2538:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 189,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "2487:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1018",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1075,
                      "src": "2487:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1342_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1342_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2487:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2487:64:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 202,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1254,
                          "src": "2572:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2572:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 204,
                        "name": "cost_in_usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "2586:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 205,
                        "name": "qd_amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "2600:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 201,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "2567:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2567:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "EmitStatement",
                  "src": "2562:45:0"
                }
              ]
            },
            "functionSelector": "94bf804d",
            "id": 209,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1301:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "qd_amt",
                  "nameLocation": "1311:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "1306:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1306:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "1327:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "1319:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1319:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1305:34:0"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "cost_in_usdt",
                  "nameLocation": "1363:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "1358:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1358:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1357:19:0"
            },
            "scope": 325,
            "src": "1292:1322:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "2670:169:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 217,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2688:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2688:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 219,
                            "name": "sale_start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "2706:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 220,
                            "name": "SALE_LENGTH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "2719:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2706:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2688:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "51443a204d494e545f5232",
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2732:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_569951c1b7a7012d1a7ed1519503089d59c75e72e94e4b7f48ac112d4950ed9d",
                          "typeString": "literal_string \"QD: MINT_R2\""
                        },
                        "value": "QD: MINT_R2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_569951c1b7a7012d1a7ed1519503089d59c75e72e94e4b7f48ac112d4950ed9d",
                          "typeString": "literal_string \"QD: MINT_R2\""
                        }
                      ],
                      "id": 216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2680:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2680:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "2680:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 229,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "2774:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2774:7:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 231,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "2783:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 226,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "2756:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1018",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1049,
                      "src": "2756:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1342_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1342_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2756:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "2756:34:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 235,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "2816:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2816:7:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 237,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "2825:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 234,
                      "name": "Withdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "2805:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2805:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 239,
                  "nodeType": "EmitStatement",
                  "src": "2800:32:0"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 214,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 213,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 372,
                  "src": "2660:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2660:9:0"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2629:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2643:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "2638:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2638:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2637:13:0"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2670:0:0"
            },
            "scope": 325,
            "src": "2620:219:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [505],
            "body": {
              "id": 253,
              "nodeType": "Block",
              "src": "2909:43:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 250,
                        "name": "_QD_DECIMALS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "2932:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2926:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 248,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2926:5:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2926:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 247,
                  "id": 252,
                  "nodeType": "Return",
                  "src": "2919:26:0"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 254,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "2854:8:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 244,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 243,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1018,
                  "src": "2886:5:0"
                }
              ],
              "src": "2877:15:0"
            },
            "parameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2862:2:0"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 254,
                  "src": "2902:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2902:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2901:7:0"
            },
            "scope": 325,
            "src": "2845:107:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "3034:158:0",
              "statements": [
                {
                  "assignments": [260],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 260,
                      "mutability": "mutable",
                      "name": "time_elapsed",
                      "nameLocation": "3049:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "3044:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 259,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3044:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 265,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 261,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3064:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3064:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 263,
                      "name": "sale_start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "3082:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3064:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3044:48:0"
                },
                {
                  "expression": {
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 266,
                      "name": "total_supply_cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "3102:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 267,
                            "name": "MINT_QD_PER_DAY_MAX",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "3121:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3143:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "id": 269,
                              "name": "_QD_DECIMALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "3149:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3143:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3121:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 272,
                          "name": "time_elapsed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 260,
                          "src": "3164:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3121:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3179:6:0",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      },
                      "src": "3121:64:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3102:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "3102:83:0"
                }
              ]
            },
            "functionSelector": "24344088",
            "id": 279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_total_supply_cap",
            "nameLocation": "2967:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2987:2:0"
            },
            "returnParameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "total_supply_cap",
                  "nameLocation": "3016:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "3011:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3011:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3010:23:0"
            },
            "scope": 325,
            "src": "2958:234:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "3327:419:0",
              "statements": [
                {
                  "assignments": [289],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 289,
                      "mutability": "mutable",
                      "name": "time_elapsed",
                      "nameLocation": "3342:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "3337:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 288,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3337:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 293,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 290,
                      "name": "block_timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "3357:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 291,
                      "name": "sale_start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "3375:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3357:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3337:48:0"
                },
                {
                  "assignments": [295],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 295,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "3500:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "3495:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 294,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3495:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 306,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 296,
                                "name": "final_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30,
                                "src": "3509:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 297,
                                "name": "start_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "3523:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3509:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 299,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3508:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 300,
                          "name": "time_elapsed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 289,
                          "src": "3538:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3508:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 302,
                        "name": "SALE_LENGTH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "3553:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3508:56:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 304,
                      "name": "start_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3567:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3508:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3495:83:0"
                },
                {
                  "expression": {
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 307,
                      "name": "usdt_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "3661:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 308,
                              "name": "qd_amt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "3675:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3684:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 310,
                                "name": "_USDT_DECIMALS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "3690:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3684:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3675:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 313,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 295,
                            "src": "3707:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3675:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3715:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "id": 316,
                            "name": "_QD_DECIMALS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "3721:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3715:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3675:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3736:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "3675:64:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3661:78:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "3661:78:0"
                }
              ]
            },
            "functionSelector": "98b9cc6e",
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "qd_amt_to_usdt_amt",
            "nameLocation": "3207:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "qd_amt",
                  "nameLocation": "3240:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "3235:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3235:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "block_timestamp",
                  "nameLocation": "3261:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "3256:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3256:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3225:57:0"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "usdt_amount",
                  "nameLocation": "3309:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "3304:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3304:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3303:18:0"
            },
            "scope": 325,
            "src": "3198:548:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 326,
        "src": "234:3514:0"
      }
    ],
    "src": "33:3715:0"
  },
  "bytecode": "",
  "bytecodeSha1": "408fa9150c6e830ee9a648837c3759d9601c9ab5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "QD",
  "coverageMap": {
    "branches": {
      "0": {
        "QD.mint": {
          "66": [1396, 1441, true],
          "67": [1491, 1533, true],
          "68": [1590, 1613, false],
          "69": [1637, 1664, true],
          "70": [2340, 2394, true]
        },
        "QD.withdraw": {
          "65": [2688, 2730, true]
        }
      },
      "1": {
        "Ownable.transferOwnership": {
          "83": [2006, 2028, true]
        }
      },
      "2": {
        "ERC20._approve": {
          "75": [10254, 10273, true],
          "76": [10332, 10353, true]
        },
        "ERC20._mint": {
          "82": [8498, 8519, true]
        },
        "ERC20._spendAllowance": {
          "77": [10966, 11003, false],
          "78": [11027, 11053, true]
        },
        "ERC20._transfer": {
          "79": [7614, 7632, true],
          "80": [7692, 7708, true],
          "81": [7863, 7884, true]
        },
        "ERC20.decreaseAllowance": {
          "74": [6815, 6850, true]
        }
      },
      "3": {},
      "4": {},
      "5": {
        "SafeERC20._callOptionalReturn": {
          "84": [3735, 3756, false],
          "85": [3819, 3849, true]
        }
      },
      "6": {
        "Address.functionCallWithValue": {
          "71": [5145, 5175, true]
        },
        "Address.verifyCallResult": {
          "72": [7735, 7742, false],
          "73": [7876, 7897, false]
        }
      },
      "7": {}
    },
    "statements": {
      "0": {
        "QD.get_total_supply_cap": {
          "10": [3102, 3185]
        },
        "QD.mint": {
          "17": [1388, 1457],
          "18": [1483, 1549],
          "19": [1629, 1692],
          "20": [1904, 1992],
          "21": [2007, 2030],
          "22": [2044, 2062],
          "23": [2163, 2221],
          "24": [2272, 2298],
          "25": [2332, 2410],
          "26": [2487, 2551],
          "27": [2562, 2607]
        },
        "QD.qd_amt_to_usdt_amt": {
          "29": [3661, 3739]
        },
        "QD.withdraw": {
          "11": [2680, 2746],
          "12": [2756, 2790],
          "13": [2800, 2832]
        }
      },
      "1": {
        "Ownable._transferOwnership": {
          "50": [2378, 2395],
          "51": [2405, 2450]
        },
        "Ownable.owner": {
          "1": [1101, 1114]
        },
        "Ownable.renounceOwnership": {
          "16": [1732, 1762]
        },
        "Ownable.transferOwnership": {
          "34": [1998, 2071],
          "35": [2081, 2109]
        }
      },
      "2": {
        "ERC20._approve": {
          "36": [10246, 10314],
          "37": [10324, 10392],
          "38": [10403, 10439],
          "39": [10449, 10486]
        },
        "ERC20._mint": {
          "52": [8490, 8555],
          "53": [8626, 8648],
          "54": [8658, 8686],
          "55": [8696, 8738]
        },
        "ERC20._spendAllowance": {
          "40": [11019, 11087],
          "41": [11129, 11180]
        },
        "ERC20._transfer": {
          "42": [7606, 7674],
          "43": [7684, 7748],
          "44": [7855, 7927],
          "45": [7961, 7999],
          "46": [8019, 8042],
          "47": [8053, 8084],
          "48": [8095, 8132]
        },
        "ERC20.allowance": {
          "2": [4084, 4118]
        },
        "ERC20.approve": {
          "5": [4570, 4602],
          "6": [4612, 4623]
        },
        "ERC20.balanceOf": {
          "15": [3501, 3526]
        },
        "ERC20.decreaseAllowance": {
          "30": [6807, 6892],
          "31": [6926, 6986],
          "32": [7007, 7018]
        },
        "ERC20.increaseAllowance": {
          "14": [6015, 6081]
        },
        "ERC20.name": {
          "3": [2235, 2247]
        },
        "ERC20.symbol": {
          "28": [2448, 2462]
        },
        "ERC20.totalSupply": {
          "0": [3324, 3343]
        },
        "ERC20.transfer": {
          "33": [3862, 3890]
        },
        "ERC20.transferFrom": {
          "7": [5375, 5413],
          "8": [5423, 5450],
          "9": [5460, 5471]
        }
      },
      "3": {},
      "4": {},
      "5": {
        "SafeERC20._callOptionalReturn": {
          "57": [3811, 3896]
        },
        "SafeERC20.safeTransfer": {
          "49": [813, 899]
        },
        "SafeERC20.safeTransferFrom": {
          "56": [1050, 1146]
        }
      },
      "6": {
        "Address.functionCall": {
          "58": [4018, 4077]
        },
        "Address.functionCallWithValue": {
          "59": [5137, 5218],
          "61": [5228, 5288],
          "62": [5382, 5440]
        },
        "Address.isContract": {
          "60": [1458, 1488]
        },
        "Address.verifyCallResult": {
          "63": [7758, 7775],
          "64": [8202, 8222]
        }
      },
      "7": {
        "Context._msgSender": {
          "4": [712, 729]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC20",
    "IERC20",
    "IERC20Metadata",
    "Ownable",
    "SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063a457c2d71161007c578063a457c2d7146102d8578063a9059cbb146102eb578063bbc56cc8146102fe578063bf2b52bf14610308578063dd62ed3e14610310578063f2fde38b1461034957610158565b806370a082311461027e578063715018a6146102915780638da5cb5b1461029957806394bf804d146102aa57806395d89b41146102bd57806398b9cc6e146102c557610158565b80632e1a7d4d116101155780632e1a7d4d146101d75780632e5c0fe7146101ec5780632f48ab7d14610213578063313ce567146102525780633950935114610261578063676e4cba1461027457610158565b806306fdde031461015d57806308b309e31461017b578063095ea7b31461019157806318160ddd146101b457806323b872dd146101bc57806324344088146101cf575b600080fd5b61016561035c565b60405161017291906113eb565b60405180910390f35b610183606081565b604051908152602001610172565b6101a461019f36600461132b565b6103ee565b6040519015158152602001610172565b600354610183565b6101a46101ca3660046112f0565b610406565b61018361042c565b6101ea6101e5366004611374565b610493565b005b6101837f000000000000000000000000000000000000000000000000000000000000000081565b61023a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610172565b60405160188152602001610172565b6101a461026f36600461132b565b6105c6565b6101836207a12081565b61018361028c3660046112a4565b610605565b6101ea610624565b6000546001600160a01b031661023a565b6101836102b836600461138c565b61065a565b6101656108e3565b6101836102d33660046113ae565b6108f2565b6101a46102e636600461132b565b6109a1565b6101a46102f936600461132b565b610a3e565b6101836247310081565b610183601681565b61018361031e3660046112be565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101ea6103573660046112a4565b610a4c565b60606004805461036b90611601565b80601f016020809104026020016040519081016040528092919081815260200182805461039790611601565b80156103e45780601f106103b9576101008083540402835291602001916103e4565b820191906000526020600020905b8154815290600101906020018083116103c757829003601f168201915b5050505050905090565b6000336103fc818585610ae7565b5060019392505050565b600033610414858285610c0b565b61041f858585610c9d565b60019150505b9392505050565b6000806104597f0000000000000000000000000000000000000000000000000000000000000000426115be565b9050620151808161046c6018600a6114d1565b610479906207a12061159f565b610483919061159f565b61048d919061146b565b91505090565b6000546001600160a01b031633146104c65760405162461bcd60e51b81526004016104bd9061141e565b60405180910390fd5b6104f3624731007f0000000000000000000000000000000000000000000000000000000000000000611453565b421161052f5760405162461bcd60e51b815260206004820152600b60248201526a28a21d1026a4a72a2fa91960a91b60448201526064016104bd565b6105756105446000546001600160a01b031690565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169083610e6b565b6000546001600160a01b03166001600160a01b03167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040516105bb91815260200190565b60405180910390a250565b3360008181526002602090815260408083206001600160a01b03871684529091528120549091906103fc9082908690610600908790611453565b610ae7565b6001600160a01b0381166000908152600160205260409020545b919050565b6000546001600160a01b0316331461064e5760405162461bcd60e51b81526004016104bd9061141e565b6106586000610ed3565b565b60006a52b7d2dcc80cd2e40000008310156106a55760405162461bcd60e51b815260206004820152600b60248201526a51443a204d494e545f523160a81b60448201526064016104bd565b6106d2624731007f0000000000000000000000000000000000000000000000000000000000000000611453565b421061070e5760405162461bcd60e51b815260206004820152600b60248201526a28a21d1026a4a72a2fa91960a91b60448201526064016104bd565b6000546001600160a01b0316331415610802576016600654106107735760405162461bcd60e51b815260206004820152601760248201527f43616e277420616c6c6f6361746520616e79206d6f726500000000000000000060448201526064016104bd565b6c22142ba7658b08825ee0000000606461078f6018600a6114d1565b6006546006600a6107a091906114d1565b6107aa908561159f565b6107b4919061159f565b6107be919061146b565b6107c8919061146b565b915080600760008282546107dc9190611453565b925050819055506002600660008282546107f69190611453565b9091555061080f915050565b61080c83426108f2565b90505b6108198284610f23565b61082161042c565b60075460035461083191906115be565b111561086d5760405162461bcd60e51b815260206004820152600b60248201526a51443a204d494e545f523360a81b60448201526064016104bd565b6108a27f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316333084611002565b604080518281526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a292915050565b60606005805461036b90611601565b60008061091f7f0000000000000000000000000000000000000000000000000000000000000000846115be565b90506000601662473100836109358360606115be565b61093f919061159f565b610949919061146b565b6109539190611453565b905060646109636018600a6114d1565b826109706006600a6114d1565b61097a908961159f565b610984919061159f565b61098e919061146b565b610998919061146b565b95945050505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490919083811015610a265760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104bd565b610a338286868403610ae7565b506001949350505050565b6000336103fc818585610c9d565b6000546001600160a01b03163314610a765760405162461bcd60e51b81526004016104bd9061141e565b6001600160a01b038116610adb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104bd565b610ae481610ed3565b50565b6001600160a01b038316610b495760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104bd565b6001600160a01b038216610baa5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104bd565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600260209081526040808320938616835292905220546000198114610c975781811015610c8a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104bd565b610c978484848403610ae7565b50505050565b6001600160a01b038316610d015760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104bd565b6001600160a01b038216610d635760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104bd565b6001600160a01b03831660009081526001602052604090205481811015610ddb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104bd565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610e12908490611453565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e5e91815260200190565b60405180910390a3610c97565b6040516001600160a01b038316602482015260448101829052610ece90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261103a565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610f795760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104bd565b8060036000828254610f8b9190611453565b90915550506001600160a01b03821660009081526001602052604081208054839290610fb8908490611453565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052610c979085906323b872dd60e01b90608401610e97565b600061108f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661110c9092919063ffffffff16565b805190915015610ece57808060200190518101906110ad9190611354565b610ece5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104bd565b606061111b8484600085611123565b949350505050565b6060824710156111845760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104bd565b6001600160a01b0385163b6111db5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104bd565b600080866001600160a01b031685876040516111f791906113cf565b60006040518083038185875af1925050503d8060008114611234576040519150601f19603f3d011682016040523d82523d6000602084013e611239565b606091505b5091509150611249828286611254565b979650505050505050565b60608315611263575081610425565b8251156112735782518084602001fd5b8160405162461bcd60e51b81526004016104bd91906113eb565b80356001600160a01b038116811461061f57600080fd5b6000602082840312156112b5578081fd5b6104258261128d565b600080604083850312156112d0578081fd5b6112d98361128d565b91506112e76020840161128d565b90509250929050565b600080600060608486031215611304578081fd5b61130d8461128d565b925061131b6020850161128d565b9150604084013590509250925092565b6000806040838503121561133d578182fd5b6113468361128d565b946020939093013593505050565b600060208284031215611365578081fd5b81518015158114610425578182fd5b600060208284031215611385578081fd5b5035919050565b6000806040838503121561139e578182fd5b823591506112e76020840161128d565b600080604083850312156113c0578182fd5b50508035926020909101359150565b600082516113e18184602087016115d5565b9190910192915050565b600060208252825180602084015261140a8160408501602087016115d5565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156114665761146661163c565b500190565b60008261148657634e487b7160e01b81526012600452602481fd5b500490565b80825b600180861161149d57506114c8565b8187048211156114af576114af61163c565b808616156114bc57918102915b9490941c93800261148e565b94509492505050565b600061042560001984846000826114ea57506001610425565b816114f757506000610425565b816001811461150d576002811461151757611544565b6001915050610425565b60ff8411156115285761152861163c565b6001841b91508482111561153e5761153e61163c565b50610425565b5060208310610133831016604e8410600b8410161715611577575081810a838111156115725761157261163c565b610425565b611584848484600161148b565b8086048211156115965761159661163c565b02949350505050565b60008160001904831182151516156115b9576115b961163c565b500290565b6000828210156115d0576115d061163c565b500390565b60005b838110156115f05781810151838201526020016115d8565b83811115610c975750506000910152565b600181811c9082168061161557607f821691505b6020821081141561163657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220deb0eae1e17b1d87108686eae61b8c57854bb5d8a877f12f79eea6514c6aacde64736f6c63430008030033",
  "deployedSourceMap": "234:3514:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;640:37:0;;675:2;640:37;;;;;10868:25:8;;;10856:2;10841:18;640:37:0;10823:76:8;4433:197:2;;;;;;:::i;:::-;;:::i;:::-;;;3620:14:8;;3613:22;3595:41;;3583:2;3568:18;4433:197:2;3550:92:8;3244:106:2;3331:12;;3244:106;;5192:286;;;;;;:::i;:::-;;:::i;2958:234:0:-;;;:::i;2620:219::-;;;;;;:::i;:::-;;:::i;:::-;;783:33;;;;;822:27;;;;;;;;-1:-1:-1;;;;;2752:32:8;;;2734:51;;2722:2;2707:18;822:27:0;2689:102:8;2845:107:0;;;388:2;11299:36:8;;11287:2;11272:18;2845:107:0;11254:87:8;5873:236:2;;;;;;:::i;:::-;;:::i;444:50:0:-;;487:7;444:50;;3408:125:2;;;;;;:::i;:::-;;:::i;1668:101:1:-;;;:::i;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;1036:85;;1292:1322:0;;;;;;:::i;:::-;;:::i;2367:102:2:-;;;:::i;3198:548:0:-;;;;;;:::i;:::-;;:::i;6596:429:2:-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;514:42:0:-;;549:7;514:42;;585:37;;620:2;585:37;;3976:149:2;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:2;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;1918:198:1;;;;;;:::i;:::-;;:::i;2156:98:2:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:7;4570:32:2;719:10:7;4586:7:2;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:2;;4433:197;-1:-1:-1;;;4433:197:2:o;5192:286::-;5319:4;719:10:7;5375:38:2;5391:4;719:10:7;5406:6:2;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;;:::o;2958:234:0:-;3011:21;;3064:28;3082:10;3064:15;:28;:::i;:::-;3044:48;-1:-1:-1;3179:6:0;3044:48;3143:18;388:2;3143;:18;:::i;:::-;3121:40;;487:7;3121:40;:::i;:::-;:55;;;;:::i;:::-;:64;;;;:::i;:::-;3102:83;;2958:234;;:::o;2620:219::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:7;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;;;;;;;;;2706:24:0::1;549:7;2706:10;:24;:::i;:::-;2688:15;:42;2680:66;;;::::0;-1:-1:-1;;;2680:66:0;;7537:2:8;2680:66:0::1;::::0;::::1;7519:21:8::0;7576:2;7556:18;;;7549:30;-1:-1:-1;;;7595:18:8;;;7588:41;7646:18;;2680:66:0::1;7509:161:8::0;2680:66:0::1;2756:34;2774:7;1082::1::0;1108:6;-1:-1:-1;;;;;1108:6:1;1036:85;;2774:7:0::1;-1:-1:-1::0;;;;;2756:4:0::1;:17;::::0;2783:6;2756:17:::1;:34::i;:::-;1082:7:1::0;1108:6;-1:-1:-1;;;;;1108:6:1;-1:-1:-1;;;;;2805:27:0::1;;2825:6;2805:27;;;;10868:25:8::0;;10856:2;10841:18;;10823:76;2805:27:0::1;;;;;;;;2620:219:::0;:::o;5873:236:2:-;719:10:7;5961:4:2;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:2;;;;;;;;;;5961:4;;719:10:7;6015:66:2;;719:10:7;;6040:27:2;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;3408:125::-;-1:-1:-1;;;;;3508:18:2;;3482:7;3508:18;;;:9;:18;;;;;;3408:125;;;;:::o;1668:101:1:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:7;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1292:1322:0:-;1358:17;1406:35;1396:6;:45;;1388:69;;;;-1:-1:-1;;;1388:69:0;;7877:2:8;1388:69:0;;;7859:21:8;7916:2;7896:18;;;7889:30;-1:-1:-1;;;7935:18:8;;;7928:41;7986:18;;1388:69:0;7849:161:8;1388:69:0;1509:24;549:7;1509:10;:24;:::i;:::-;1491:15;:42;1483:66;;;;-1:-1:-1;;;1483:66:0;;7537:2:8;1483:66:0;;;7519:21:8;7576:2;7556:18;;;7549:30;-1:-1:-1;;;7595:18:8;;;7588:41;7646:18;;1483:66:0;7509:161:8;1483:66:0;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:7;1590:23:0;1586:646;;;620:2;1637:13;;:27;1629:63;;;;-1:-1:-1;;;1629:63:0;;6778:2:8;1629:63:0;;;6760:21:8;6817:2;6797:18;;;6790:30;6856:25;6836:18;;;6829:53;6899:18;;1629:63:0;6750:173:8;1629:63:0;1721:41;1989:3;1968:18;388:2;1968;:18;:::i;:::-;1952:13;;436:1;1929:2;:20;;;;:::i;:::-;1919:30;;:7;:30;:::i;:::-;:46;;;;:::i;:::-;:67;;;;:::i;:::-;:73;;;;:::i;:::-;1904:88;;2023:7;2007:12;;:23;;;;;;;:::i;:::-;;;;;;;;2061:1;2044:13;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;1586:646:0;;-1:-1:-1;;1586:646:0;;2178:43;2197:6;2205:15;2178:18;:43::i;:::-;2163:58;;1586:646;2272:26;2278:11;2291:6;2272:5;:26::i;:::-;2372:22;:20;:22::i;:::-;2356:12;;3331::2;;2340:28:0;;;;:::i;:::-;:54;;2332:78;;;;-1:-1:-1;;;2332:78:0;;6031:2:8;2332:78:0;;;6013:21:8;6070:2;6050:18;;;6043:30;-1:-1:-1;;;6089:18:8;;;6082:41;6140:18;;2332:78:0;6003:161:8;2332:78:0;2487:64;:4;-1:-1:-1;;;;;2487:21:0;719:10:7;2531:4:0;2538:12;2487:21;:64::i;:::-;2567:40;;;11078:25:8;;;11134:2;11119:18;;11112:34;;;719:10:7;;2567:40:0;;11051:18:8;2567:40:0;;;;;;;1292:1322;;;;:::o;2367:102:2:-;2423:13;2455:7;2448:14;;;;;:::i;3198:548:0:-;3304:16;;3357:28;3375:10;3357:15;:28;:::i;:::-;3337:48;-1:-1:-1;3495:10:0;620:2;549:7;3337:48;3509:25;620:2;675;3509:25;:::i;:::-;3508:42;;;;:::i;:::-;:56;;;;:::i;:::-;:70;;;;:::i;:::-;3495:83;-1:-1:-1;3736:3:0;3715:18;388:2;3715;:18;:::i;:::-;3707:5;3684:20;436:1;3684:2;:20;:::i;:::-;3675:29;;:6;:29;:::i;:::-;:37;;;;:::i;:::-;:58;;;;:::i;:::-;:64;;;;:::i;:::-;3661:78;3198:548;-1:-1:-1;;;;;3198:548:0:o;6596:429:2:-;719:10:7;6689:4:2;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:2;;;;;;;;;;6689:4;;719:10:7;6815:35:2;;;;6807:85;;;;-1:-1:-1;;;6807:85:2;;10158:2:8;6807:85:2;;;10140:21:8;10197:2;10177:18;;;10170:30;10236:34;10216:18;;;10209:62;-1:-1:-1;;;10287:18:8;;;10280:35;10332:19;;6807:85:2;10130:227:8;6807:85:2;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;:::-;-1:-1:-1;7014:4:2;;6596:429;-1:-1:-1;;;;6596:429:2:o;3729:189::-;3808:4;719:10:7;3862:28:2;719:10:7;3879:2:2;3883:6;3862:9;:28::i;1918:198:1:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:7;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:1;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:1;;4863:2:8;1998:73:1::1;::::0;::::1;4845:21:8::0;4902:2;4882:18;;;4875:30;4941:34;4921:18;;;4914:62;-1:-1:-1;;;4992:18:8;;;4985:36;5038:19;;1998:73:1::1;4835:228:8::0;1998:73:1::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;10123:370:2:-;-1:-1:-1;;;;;10254:19:2;;10246:68;;;;-1:-1:-1;;;10246:68:2;;8984:2:8;10246:68:2;;;8966:21:8;9023:2;9003:18;;;8996:30;9062:34;9042:18;;;9035:62;-1:-1:-1;;;9113:18:8;;;9106:34;9157:19;;10246:68:2;8956:226:8;10246:68:2;-1:-1:-1;;;;;10332:21:2;;10324:68;;;;-1:-1:-1;;;10324:68:2;;5270:2:8;10324:68:2;;;5252:21:8;5309:2;5289:18;;;5282:30;5348:34;5328:18;;;5321:62;-1:-1:-1;;;5399:18:8;;;5392:32;5441:19;;10324:68:2;5242:224:8;10324:68:2;-1:-1:-1;;;;;10403:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;10868:25:8;;;10454:32:2;;10841:18:8;10454:32:2;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:2;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:2;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:2;;5673:2:8;11019:68:2;;;5655:21:8;5712:2;5692:18;;;5685:30;5751:31;5731:18;;;5724:59;5800:18;;11019:68:2;5645:179:8;11019:68:2;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10770:441;;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:2;;7606:68;;;;-1:-1:-1;;;7606:68:2;;8578:2:8;7606:68:2;;;8560:21:8;8617:2;8597:18;;;8590:30;8656:34;8636:18;;;8629:62;-1:-1:-1;;;8707:18:8;;;8700:35;8752:19;;7606:68:2;8550:227:8;7606:68:2;-1:-1:-1;;;;;7692:16:2;;7684:64;;;;-1:-1:-1;;;7684:64:2;;4459:2:8;7684:64:2;;;4441:21:8;4498:2;4478:18;;;4471:30;4537:34;4517:18;;;4510:62;-1:-1:-1;;;4588:18:8;;;4581:33;4631:19;;7684:64:2;4431:225:8;7684:64:2;-1:-1:-1;;;;;7830:15:2;;7808:19;7830:15;;;:9;:15;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:2;;6371:2:8;7855:72:2;;;6353:21:8;6410:2;6390:18;;;6383:30;6449:34;6429:18;;;6422:62;-1:-1:-1;;;6500:18:8;;;6493:36;6546:19;;7855:72:2;6343:228:8;7855:72:2;-1:-1:-1;;;;;7961:15:2;;;;;;;:9;:15;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:15;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:2;8067:4;-1:-1:-1;;;;;8058:26:2;;8077:6;8058:26;;;;10868:25:8;;10856:2;10841:18;;10823:76;8058:26:2;;;;;;;;8095:37;701:205:5;;840:58;;-1:-1:-1;;;;;3368:32:8;;840:58:5;;;3350:51:8;3417:18;;;3410:34;;;813:86:5;;833:5;;-1:-1:-1;;;863:23:5;3323:18:8;;840:58:5;;;;-1:-1:-1;;840:58:5;;;;;;;;;;;;;;-1:-1:-1;;;;;840:58:5;-1:-1:-1;;;;;;840:58:5;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;2270:187:1:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;8415:389:2:-;-1:-1:-1;;;;;8498:21:2;;8490:65;;;;-1:-1:-1;;;8490:65:2;;10564:2:8;8490:65:2;;;10546:21:8;10603:2;10583:18;;;10576:30;10642:33;10622:18;;;10615:61;10693:18;;8490:65:2;10536:181:8;8490:65:2;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:2;;;;;;:9;:18;;;;;:28;;8680:6;;8658:18;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:2;;10868:25:8;;;-1:-1:-1;;;;;8701:37:2;;;8718:1;;8701:37;;10856:2:8;10841:18;8701:37:2;;;;;;;8415:389;;:::o;912:241:5:-;1077:68;;-1:-1:-1;;;;;3054:15:8;;;1077:68:5;;;3036:34:8;3106:15;;3086:18;;;3079:43;3138:18;;;3131:34;;;1050:96:5;;1070:5;;-1:-1:-1;;;1100:27:5;2971:18:8;;1077:68:5;2953:218:8;3207:706:5;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:5;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:5;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:5;;9747:2:8;3811:85:5;;;9729:21:8;9786:2;9766:18;;;9759:30;9825:34;9805:18;;;9798:62;-1:-1:-1;;;9876:18:8;;;9869:40;9926:19;;3811:85:5;9719:232:8;3861:223:6;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:6:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:6;;7130:2:8;5137:81:6;;;7112:21:8;7169:2;7149:18;;;7142:30;7208:34;7188:18;;;7181:62;-1:-1:-1;;;7259:18:8;;;7252:36;7305:19;;5137:81:6;7102:228:8;5137:81:6;-1:-1:-1;;;;;1465:19:6;;;5228:60;;;;-1:-1:-1;;;5228:60:6;;9389:2:8;5228:60:6;;;9371:21:8;9428:2;9408:18;;;9401:30;9467:31;9447:18;;;9440:59;9516:18;;5228:60:6;9361:179:8;5228:60:6;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:6;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:6:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:6;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;8019:145;8209:12;8202:20;;-1:-1:-1;;;8202:20:6;;;;;;;;:::i;14:173:8:-;82:20;;-1:-1:-1;;;;;131:31:8;;121:42;;111:2;;177:1;174;167:12;192:196;;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:270::-;;;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;;;;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:8:o;1280:297::-;;1400:2;1388:9;1379:7;1375:23;1371:32;1368:2;;;1421:6;1413;1406:22;1368:2;1458:9;1452:16;1511:5;1504:13;1497:21;1490:5;1487:32;1477:2;;1538:6;1530;1523:22;1582:190;;1694:2;1682:9;1673:7;1669:23;1665:32;1662:2;;;1715:6;1707;1700:22;1662:2;-1:-1:-1;1743:23:8;;1652:120;-1:-1:-1;1652:120:8:o;1777:264::-;;;1906:2;1894:9;1885:7;1881:23;1877:32;1874:2;;;1927:6;1919;1912:22;1874:2;1968:9;1955:23;1945:33;;1997:38;2031:2;2020:9;2016:18;1997:38;:::i;2046:258::-;;;2175:2;2163:9;2154:7;2150:23;2146:32;2143:2;;;2196:6;2188;2181:22;2143:2;-1:-1:-1;;2224:23:8;;;2294:2;2279:18;;;2266:32;;-1:-1:-1;2133:171:8:o;2309:274::-;;2476:6;2470:13;2492:53;2538:6;2533:3;2526:4;2518:6;2514:17;2492:53;:::i;:::-;2561:16;;;;;2446:137;-1:-1:-1;;2446:137:8:o;3869:383::-;;4018:2;4007:9;4000:21;4050:6;4044:13;4093:6;4088:2;4077:9;4073:18;4066:34;4109:66;4168:6;4163:2;4152:9;4148:18;4143:2;4135:6;4131:15;4109:66;:::i;:::-;4236:2;4215:15;-1:-1:-1;;4211:29:8;4196:45;;;;4243:2;4192:54;;3990:262;-1:-1:-1;;3990:262:8:o;8015:356::-;8217:2;8199:21;;;8236:18;;;8229:30;8295:34;8290:2;8275:18;;8268:62;8362:2;8347:18;;8189:182::o;11346:128::-;;11417:1;11413:6;11410:1;11407:13;11404:2;;;11423:18;;:::i;:::-;-1:-1:-1;11459:9:8;;11394:80::o;11479:217::-;;11545:1;11535:2;;-1:-1:-1;;;11570:31:8;;11624:4;11621:1;11614:15;11652:4;11577:1;11642:15;11535:2;-1:-1:-1;11681:9:8;;11525:171::o;11701:453::-;11797:6;11820:5;11834:314;11883:1;11920:2;11910:8;11907:16;11897:2;;11927:5;;;11897:2;11968:4;11963:3;11959:14;11953:4;11950:24;11947:2;;;11977:18;;:::i;:::-;12027:2;12017:8;12013:17;12010:2;;;12042:16;;;;12010:2;12121:17;;;;;12081:15;;11834:314;;;11778:376;;;;;;;:::o;12159:139::-;;12248:44;-1:-1:-1;;12275:8:8;12269:4;12303:922;12387:8;12377:2;;-1:-1:-1;12428:1:8;12442:5;;12377:2;12476:4;12466:2;;-1:-1:-1;12513:1:8;12527:5;;12466:2;12558:4;12576:1;12571:59;;;;12644:1;12639:183;;;;12551:271;;12571:59;12601:1;12592:10;;12615:5;;;12639:183;12676:3;12666:8;12663:17;12660:2;;;12683:18;;:::i;:::-;12739:1;12729:8;12725:16;12716:25;;12767:3;12760:5;12757:14;12754:2;;;12774:18;;:::i;:::-;12807:5;;;12551:271;;12906:2;12896:8;12893:16;12887:3;12881:4;12878:13;12874:36;12868:2;12858:8;12855:16;12850:2;12844:4;12841:12;12837:35;12834:77;12831:2;;;-1:-1:-1;12943:19:8;;;12978:14;;;12975:2;;;12995:18;;:::i;:::-;13028:5;;12831:2;13075:42;13113:3;13103:8;13097:4;13094:1;13075:42;:::i;:::-;13150:6;13145:3;13141:16;13132:7;13129:29;13126:2;;;13161:18;;:::i;:::-;13199:20;;12367:858;-1:-1:-1;;;;12367:858:8:o;13230:168::-;;13336:1;13332;13328:6;13324:14;13321:1;13318:21;13313:1;13306:9;13299:17;13295:45;13292:2;;;13343:18;;:::i;:::-;-1:-1:-1;13383:9:8;;13282:116::o;13403:125::-;;13471:1;13468;13465:8;13462:2;;;13476:18;;:::i;:::-;-1:-1:-1;13513:9:8;;13452:76::o;13533:258::-;13605:1;13615:113;13629:6;13626:1;13623:13;13615:113;;;13705:11;;;13699:18;13686:11;;;13679:39;13651:2;13644:10;13615:113;;;13746:6;13743:1;13740:13;13737:2;;;-1:-1:-1;;13781:1:8;13763:16;;13756:27;13586:205::o;13796:380::-;13875:1;13871:12;;;;13918;;;13939:2;;13993:4;13985:6;13981:17;13971:27;;13939:2;14046;14038:6;14035:14;14015:18;14012:38;14009:2;;;14092:10;14087:3;14083:20;14080:1;14073:31;14127:4;14124:1;14117:15;14155:4;14152:1;14145:15;14009:2;;13851:325;;;:::o;14181:127::-;14242:10;14237:3;14233:20;14230:1;14223:31;14273:4;14270:1;14263:15;14297:4;14294:1;14287:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [234, 3748],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xBBC56CC8 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xBF2B52BF EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x349 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x98B9CC6E EQ PUSH2 0x2C5 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x2E5C0FE7 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x676E4CBA EQ PUSH2 0x274 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x8B309E3 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x24344088 EQ PUSH2 0x1CF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x60 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x132B JUMP JUMPDEST PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x183 JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x12F0 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x42C JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x132B JUMP JUMPDEST PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x183 PUSH3 0x7A120 DUP2 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x12A4 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x624 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23A JUMP JUMPDEST PUSH2 0x183 PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x138C JUMP JUMPDEST PUSH2 0x65A JUMP JUMPDEST PUSH2 0x165 PUSH2 0x8E3 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x132B JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x132B JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST PUSH2 0x183 PUSH3 0x473100 DUP2 JUMP JUMPDEST PUSH2 0x183 PUSH1 0x16 DUP2 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x12BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A4 JUMP JUMPDEST PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x36B SWAP1 PUSH2 0x1601 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x397 SWAP1 PUSH2 0x1601 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3FC DUP2 DUP6 DUP6 PUSH2 0xAE7 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x414 DUP6 DUP3 DUP6 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x41F DUP6 DUP6 DUP6 PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x459 PUSH32 0x0 TIMESTAMP PUSH2 0x15BE JUMP JUMPDEST SWAP1 POP PUSH3 0x15180 DUP2 PUSH2 0x46C PUSH1 0x18 PUSH1 0xA PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x479 SWAP1 PUSH3 0x7A120 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x141E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F3 PUSH3 0x473100 PUSH32 0x0 PUSH2 0x1453 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x52F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x28A21D1026A4A72A2FA919 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x575 PUSH2 0x544 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 DUP4 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 DUP3 PUSH1 0x40 MLOAD PUSH2 0x5BB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x3FC SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x600 SWAP1 DUP8 SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0xAE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x64E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x141E JUMP JUMPDEST PUSH2 0x658 PUSH1 0x0 PUSH2 0xED3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH11 0x52B7D2DCC80CD2E4000000 DUP4 LT ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x51443A204D494E545F5231 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x6D2 PUSH3 0x473100 PUSH32 0x0 PUSH2 0x1453 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x28A21D1026A4A72A2FA919 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x802 JUMPI PUSH1 0x16 PUSH1 0x6 SLOAD LT PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420616C6C6F6361746520616E79206D6F7265000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH13 0x22142BA7658B08825EE0000000 PUSH1 0x64 PUSH2 0x78F PUSH1 0x18 PUSH1 0xA PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x6 PUSH1 0xA PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x7AA SWAP1 DUP6 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x7C8 SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7DC SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7F6 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x80F SWAP2 POP POP JUMP JUMPDEST PUSH2 0x80C DUP4 TIMESTAMP PUSH2 0x8F2 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x819 DUP3 DUP5 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x821 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH2 0x831 SWAP2 SWAP1 PUSH2 0x15BE JUMP JUMPDEST GT ISZERO PUSH2 0x86D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x51443A204D494E545F5233 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x8A2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x36B SWAP1 PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x91F PUSH32 0x0 DUP5 PUSH2 0x15BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x16 PUSH3 0x473100 DUP4 PUSH2 0x935 DUP4 PUSH1 0x60 PUSH2 0x15BE JUMP JUMPDEST PUSH2 0x93F SWAP2 SWAP1 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x949 SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x953 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH2 0x963 PUSH1 0x18 PUSH1 0xA PUSH2 0x14D1 JUMP JUMPDEST DUP3 PUSH2 0x970 PUSH1 0x6 PUSH1 0xA PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x97A SWAP1 DUP10 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x984 SWAP2 SWAP1 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x98E SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x998 SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0xA26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0xA33 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xAE7 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3FC DUP2 DUP6 DUP6 PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x141E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0xAE4 DUP2 PUSH2 0xED3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xC97 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0xC97 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xAE7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xDDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xE12 SWAP1 DUP5 SWAP1 PUSH2 0x1453 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE5E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xECE SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x103A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BD JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF8B SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xFB8 SWAP1 DUP5 SWAP1 PUSH2 0x1453 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xC97 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x110C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xECE JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10AD SWAP2 SWAP1 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0xECE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x60 PUSH2 0x111B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1123 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x11DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x11F7 SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1234 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1249 DUP3 DUP3 DUP7 PUSH2 0x1254 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1263 JUMPI POP DUP2 PUSH2 0x425 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1273 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x13EB JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B5 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x425 DUP3 PUSH2 0x128D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x12D9 DUP4 PUSH2 0x128D JUMP JUMPDEST SWAP2 POP PUSH2 0x12E7 PUSH1 0x20 DUP5 ADD PUSH2 0x128D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1304 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x130D DUP5 PUSH2 0x128D JUMP JUMPDEST SWAP3 POP PUSH2 0x131B PUSH1 0x20 DUP6 ADD PUSH2 0x128D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x133D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1346 DUP4 PUSH2 0x128D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1365 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x425 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1385 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x139E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x12E7 PUSH1 0x20 DUP5 ADD PUSH2 0x128D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C0 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x13E1 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x140A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x15D5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1466 JUMPI PUSH2 0x1466 PUSH2 0x163C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1486 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP1 DUP7 GT PUSH2 0x149D JUMPI POP PUSH2 0x14C8 JUMP JUMPDEST DUP2 DUP8 DIV DUP3 GT ISZERO PUSH2 0x14AF JUMPI PUSH2 0x14AF PUSH2 0x163C JUMP JUMPDEST DUP1 DUP7 AND ISZERO PUSH2 0x14BC JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP5 SWAP1 SWAP5 SHR SWAP4 DUP1 MUL PUSH2 0x148E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x425 PUSH1 0x0 NOT DUP5 DUP5 PUSH1 0x0 DUP3 PUSH2 0x14EA JUMPI POP PUSH1 0x1 PUSH2 0x425 JUMP JUMPDEST DUP2 PUSH2 0x14F7 JUMPI POP PUSH1 0x0 PUSH2 0x425 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x150D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1517 JUMPI PUSH2 0x1544 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x425 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1528 JUMPI PUSH2 0x1528 PUSH2 0x163C JUMP JUMPDEST PUSH1 0x1 DUP5 SHL SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x153E JUMPI PUSH2 0x153E PUSH2 0x163C JUMP JUMPDEST POP PUSH2 0x425 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1577 JUMPI POP DUP2 DUP2 EXP DUP4 DUP2 GT ISZERO PUSH2 0x1572 JUMPI PUSH2 0x1572 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST PUSH2 0x1584 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x148B JUMP JUMPDEST DUP1 DUP7 DIV DUP3 GT ISZERO PUSH2 0x1596 JUMPI PUSH2 0x1596 PUSH2 0x163C JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x15B9 JUMPI PUSH2 0x15B9 PUSH2 0x163C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x15D0 JUMPI PUSH2 0x15D0 PUSH2 0x163C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15F0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15D8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xC97 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1615 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1636 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xB0 0xEA 0xE1 0xE1 PUSH28 0x1D87108686EAE61B8C57854BB5D8A877F12F79EEA6514C6AACDE6473 PUSH16 0x6C634300080300330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [234, 3748],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [234, 3748],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [234, 3748],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [234, 3748],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [234, 3748],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [234, 3748],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [234, 3748],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [234, 3748],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "25": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [234, 3748],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [234, 3748],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [234, 3748],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA457C2D7"
    },
    "49": {
      "fn": null,
      "offset": [234, 3748],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA457C2D7"
    },
    "60": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D8"
    },
    "64": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "71": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EB"
    },
    "75": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBBC56CC8"
    },
    "82": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FE"
    },
    "86": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBF2B52BF"
    },
    "93": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x308"
    },
    "97": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310"
    },
    "108": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2FDE38B"
    },
    "115": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "116": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x349"
    },
    "119": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "120": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "123": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMP",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPDEST",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "131": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27E"
    },
    "135": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x715018A6"
    },
    "142": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x291"
    },
    "146": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "153": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x299"
    },
    "157": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x94BF804D"
    },
    "164": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AA"
    },
    "168": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "175": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "176": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BD"
    },
    "179": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x98B9CC6E"
    },
    "186": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "187": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C5"
    },
    "190": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "191": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "194": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMP",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPDEST",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2E1A7D4D"
    },
    "202": {
      "fn": null,
      "offset": [234, 3748],
      "op": "GT",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2E1A7D4D"
    },
    "213": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D7"
    },
    "217": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2E5C0FE7"
    },
    "224": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "225": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC"
    },
    "228": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "229": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2F48AB7D"
    },
    "235": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "236": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x213"
    },
    "239": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "240": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "246": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "247": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x252"
    },
    "250": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "251": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x39509351"
    },
    "257": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "258": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x261"
    },
    "261": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "262": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "263": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x676E4CBA"
    },
    "268": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "269": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x274"
    },
    "272": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "273": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "276": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMP",
      "path": "0"
    },
    "277": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPDEST",
      "path": "0"
    },
    "278": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "279": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "284": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "285": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15D"
    },
    "288": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "289": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "290": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8B309E3"
    },
    "295": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "296": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "299": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "300": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "301": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "306": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "307": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x191"
    },
    "310": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "311": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "312": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "317": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "318": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B4"
    },
    "321": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "322": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "323": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "328": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "329": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BC"
    },
    "332": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "333": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "334": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH4",
      "path": "0",
      "value": "0x24344088"
    },
    "339": {
      "fn": null,
      "offset": [234, 3748],
      "op": "EQ",
      "path": "0"
    },
    "340": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CF"
    },
    "343": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPI",
      "path": "0"
    },
    "344": {
      "fn": null,
      "offset": [234, 3748],
      "op": "JUMPDEST",
      "path": "0"
    },
    "345": {
      "fn": null,
      "offset": [234, 3748],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "347": {
      "fn": null,
      "offset": [234, 3748],
      "op": "DUP1",
      "path": "0"
    },
    "348": {
      "first_revert": true,
      "fn": null,
      "offset": [234, 3748],
      "op": "REVERT",
      "path": "0"
    },
    "349": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "JUMPDEST",
      "path": "2"
    },
    "350": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "PUSH2",
      "path": "2",
      "value": "0x165"
    },
    "353": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35C"
    },
    "356": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [2156, 2254],
      "op": "JUMP",
      "path": "2"
    },
    "357": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "JUMPDEST",
      "path": "2"
    },
    "358": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "360": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "MLOAD",
      "path": "2"
    },
    "361": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "PUSH2",
      "path": "2",
      "value": "0x172"
    },
    "364": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "SWAP2",
      "path": "2"
    },
    "365": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "SWAP1",
      "path": "2"
    },
    "366": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13EB"
    },
    "369": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [2156, 2254],
      "op": "JUMP",
      "path": "2"
    },
    "370": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "JUMPDEST",
      "path": "2"
    },
    "371": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "373": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "MLOAD",
      "path": "2"
    },
    "374": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "DUP1",
      "path": "2"
    },
    "375": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "SWAP2",
      "path": "2"
    },
    "376": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "SUB",
      "path": "2"
    },
    "377": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "SWAP1",
      "path": "2"
    },
    "378": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "RETURN",
      "path": "2"
    },
    "379": {
      "offset": [640, 677],
      "op": "JUMPDEST",
      "path": "0"
    },
    "380": {
      "fn": "ERC20.name",
      "offset": [640, 677],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "383": {
      "offset": [675, 677],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "385": {
      "offset": [640, 677],
      "op": "DUP2",
      "path": "0"
    },
    "386": {
      "fn": "ERC20.name",
      "offset": [640, 677],
      "op": "JUMP",
      "path": "0"
    },
    "387": {
      "fn": "ERC20.name",
      "offset": [640, 677],
      "op": "JUMPDEST",
      "path": "0"
    },
    "388": {
      "fn": "ERC20.name",
      "offset": [640, 677],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "390": {
      "fn": "ERC20.name",
      "offset": [640, 677],
      "op": "MLOAD",
      "path": "0"
    },
    "391": {
      "op": "SWAP1"
    },
    "392": {
      "op": "DUP2"
    },
    "393": {
      "op": "MSTORE"
    },
    "394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "396": {
      "op": "ADD"
    },
    "397": {
      "offset": [640, 677],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172"
    },
    "400": {
      "op": "JUMP"
    },
    "401": {
      "fn": "ERC20.approve",
      "offset": [4433, 4630],
      "op": "JUMPDEST",
      "path": "2"
    },
    "402": {
      "fn": "ERC20.approve",
      "offset": [4433, 4630],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A4"
    },
    "405": {
      "fn": "ERC20.approve",
      "offset": [4433, 4630],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F"
    },
    "408": {
      "fn": "ERC20.approve",
      "offset": [4433, 4630],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "409": {
      "fn": "ERC20.approve",
      "offset": [4433, 4630],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "411": {
      "fn": "ERC20.approve",
      "offset": [4433, 4630],
      "op": "PUSH2",
      "path": "2",
      "value": "0x132B"
    },
    "414": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [4433, 4630],
      "op": "JUMP",
      "path": "2"
    },
    "415": {
      "fn": "ERC20.approve",
      "offset": [4433, 4630],
      "op": "JUMPDEST",
      "path": "2"
    },
    "416": {
      "fn": "ERC20.approve",
      "offset": [4433, 4630],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EE"
    },
    "419": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [4433, 4630],
      "op": "JUMP",
      "path": "2"
    },
    "420": {
      "fn": "ERC20.approve",
      "offset": [4433, 4630],
      "op": "JUMPDEST",
      "path": "2"
    },
    "421": {
      "fn": "ERC20.approve",
      "offset": [4433, 4630],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "423": {
      "fn": "ERC20.approve",
      "offset": [4433, 4630],
      "op": "MLOAD",
      "path": "2"
    },
    "424": {
      "op": "SWAP1"
    },
    "425": {
      "op": "ISZERO"
    },
    "426": {
      "op": "ISZERO"
    },
    "427": {
      "op": "DUP2"
    },
    "428": {
      "op": "MSTORE"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "431": {
      "op": "ADD"
    },
    "432": {
      "fn": "ERC20.approve",
      "offset": [4433, 4630],
      "op": "PUSH2",
      "path": "2",
      "value": "0x172"
    },
    "435": {
      "op": "JUMP"
    },
    "436": {
      "fn": "ERC20.totalSupply",
      "offset": [3244, 3350],
      "op": "JUMPDEST",
      "path": "2"
    },
    "437": {
      "fn": "ERC20.totalSupply",
      "offset": [3331, 3343],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x3"
    },
    "439": {
      "fn": "ERC20.totalSupply",
      "offset": [3331, 3343],
      "op": "SLOAD",
      "path": "2"
    },
    "440": {
      "fn": "ERC20.totalSupply",
      "offset": [3244, 3350],
      "op": "PUSH2",
      "path": "2",
      "value": "0x183"
    },
    "443": {
      "fn": "ERC20.totalSupply",
      "offset": [3244, 3350],
      "op": "JUMP",
      "path": "2"
    },
    "444": {
      "fn": "ERC20.transferFrom",
      "offset": [5192, 5478],
      "op": "JUMPDEST",
      "path": "2"
    },
    "445": {
      "fn": "ERC20.transferFrom",
      "offset": [5192, 5478],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A4"
    },
    "448": {
      "fn": "ERC20.transferFrom",
      "offset": [5192, 5478],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CA"
    },
    "451": {
      "fn": "ERC20.transferFrom",
      "offset": [5192, 5478],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "452": {
      "fn": "ERC20.transferFrom",
      "offset": [5192, 5478],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "454": {
      "fn": "ERC20.transferFrom",
      "offset": [5192, 5478],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12F0"
    },
    "457": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [5192, 5478],
      "op": "JUMP",
      "path": "2"
    },
    "458": {
      "fn": "ERC20.transferFrom",
      "offset": [5192, 5478],
      "op": "JUMPDEST",
      "path": "2"
    },
    "459": {
      "fn": "ERC20.transferFrom",
      "offset": [5192, 5478],
      "op": "PUSH2",
      "path": "2",
      "value": "0x406"
    },
    "462": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [5192, 5478],
      "op": "JUMP",
      "path": "2"
    },
    "463": {
      "fn": "QD.get_total_supply_cap",
      "offset": [2958, 3192],
      "op": "JUMPDEST",
      "path": "0"
    },
    "464": {
      "fn": "QD.get_total_supply_cap",
      "offset": [2958, 3192],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "467": {
      "fn": "QD.get_total_supply_cap",
      "offset": [2958, 3192],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42C"
    },
    "470": {
      "fn": "QD.get_total_supply_cap",
      "jump": "i",
      "offset": [2958, 3192],
      "op": "JUMP",
      "path": "0"
    },
    "471": {
      "fn": "QD.withdraw",
      "offset": [2620, 2839],
      "op": "JUMPDEST",
      "path": "0"
    },
    "472": {
      "fn": "QD.withdraw",
      "offset": [2620, 2839],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EA"
    },
    "475": {
      "fn": "QD.withdraw",
      "offset": [2620, 2839],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E5"
    },
    "478": {
      "fn": "QD.withdraw",
      "offset": [2620, 2839],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "479": {
      "fn": "QD.withdraw",
      "offset": [2620, 2839],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "481": {
      "fn": "QD.withdraw",
      "offset": [2620, 2839],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1374"
    },
    "484": {
      "fn": "QD.withdraw",
      "jump": "i",
      "offset": [2620, 2839],
      "op": "JUMP",
      "path": "0"
    },
    "485": {
      "fn": "QD.withdraw",
      "offset": [2620, 2839],
      "op": "JUMPDEST",
      "path": "0"
    },
    "486": {
      "fn": "QD.withdraw",
      "offset": [2620, 2839],
      "op": "PUSH2",
      "path": "0",
      "value": "0x493"
    },
    "489": {
      "fn": "QD.withdraw",
      "jump": "i",
      "offset": [2620, 2839],
      "op": "JUMP",
      "path": "0"
    },
    "490": {
      "fn": "QD.withdraw",
      "offset": [2620, 2839],
      "op": "JUMPDEST",
      "path": "0"
    },
    "491": {
      "fn": "QD.withdraw",
      "offset": [2620, 2839],
      "op": "STOP",
      "path": "0"
    },
    "492": {
      "offset": [783, 816],
      "op": "JUMPDEST",
      "path": "0"
    },
    "493": {
      "fn": "QD.withdraw",
      "offset": [783, 816],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "496": {
      "fn": "QD.withdraw",
      "offset": [783, 816],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "529": {
      "fn": "QD.withdraw",
      "offset": [783, 816],
      "op": "DUP2",
      "path": "0"
    },
    "530": {
      "fn": "QD.withdraw",
      "offset": [783, 816],
      "op": "JUMP",
      "path": "0"
    },
    "531": {
      "offset": [822, 849],
      "op": "JUMPDEST",
      "path": "0"
    },
    "532": {
      "fn": "QD.withdraw",
      "offset": [822, 849],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23A"
    },
    "535": {
      "fn": "QD.withdraw",
      "offset": [822, 849],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "568": {
      "fn": "QD.withdraw",
      "offset": [822, 849],
      "op": "DUP2",
      "path": "0"
    },
    "569": {
      "fn": "QD.withdraw",
      "offset": [822, 849],
      "op": "JUMP",
      "path": "0"
    },
    "570": {
      "fn": "QD.withdraw",
      "offset": [822, 849],
      "op": "JUMPDEST",
      "path": "0"
    },
    "571": {
      "fn": "QD.withdraw",
      "offset": [822, 849],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "573": {
      "fn": "QD.withdraw",
      "offset": [822, 849],
      "op": "MLOAD",
      "path": "0"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "580": {
      "op": "SHL"
    },
    "581": {
      "op": "SUB"
    },
    "582": {
      "op": "SWAP1"
    },
    "583": {
      "op": "SWAP2"
    },
    "584": {
      "op": "AND"
    },
    "585": {
      "op": "DUP2"
    },
    "586": {
      "op": "MSTORE"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "589": {
      "op": "ADD"
    },
    "590": {
      "offset": [822, 849],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172"
    },
    "593": {
      "op": "JUMP"
    },
    "594": {
      "fn": "QD.decimals",
      "offset": [2845, 2952],
      "op": "JUMPDEST",
      "path": "0"
    },
    "595": {
      "fn": "QD.decimals",
      "offset": [2845, 2952],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "597": {
      "fn": "QD.decimals",
      "offset": [2845, 2952],
      "op": "MLOAD",
      "path": "0"
    },
    "598": {
      "offset": [388, 390],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "600": {
      "op": "DUP2"
    },
    "601": {
      "op": "MSTORE"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "604": {
      "op": "ADD"
    },
    "605": {
      "fn": "QD.decimals",
      "offset": [2845, 2952],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172"
    },
    "608": {
      "op": "JUMP"
    },
    "609": {
      "fn": "ERC20.increaseAllowance",
      "offset": [5873, 6109],
      "op": "JUMPDEST",
      "path": "2"
    },
    "610": {
      "fn": "ERC20.increaseAllowance",
      "offset": [5873, 6109],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A4"
    },
    "613": {
      "fn": "ERC20.increaseAllowance",
      "offset": [5873, 6109],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26F"
    },
    "616": {
      "fn": "ERC20.increaseAllowance",
      "offset": [5873, 6109],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "617": {
      "fn": "ERC20.increaseAllowance",
      "offset": [5873, 6109],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "619": {
      "fn": "ERC20.increaseAllowance",
      "offset": [5873, 6109],
      "op": "PUSH2",
      "path": "2",
      "value": "0x132B"
    },
    "622": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [5873, 6109],
      "op": "JUMP",
      "path": "2"
    },
    "623": {
      "fn": "ERC20.increaseAllowance",
      "offset": [5873, 6109],
      "op": "JUMPDEST",
      "path": "2"
    },
    "624": {
      "fn": "ERC20.increaseAllowance",
      "offset": [5873, 6109],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C6"
    },
    "627": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [5873, 6109],
      "op": "JUMP",
      "path": "2"
    },
    "628": {
      "offset": [444, 494],
      "op": "JUMPDEST",
      "path": "0"
    },
    "629": {
      "fn": "ERC20.increaseAllowance",
      "offset": [444, 494],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "632": {
      "offset": [487, 494],
      "op": "PUSH3",
      "path": "0",
      "value": "0x7A120"
    },
    "636": {
      "offset": [444, 494],
      "op": "DUP2",
      "path": "0"
    },
    "637": {
      "fn": "ERC20.increaseAllowance",
      "offset": [444, 494],
      "op": "JUMP",
      "path": "0"
    },
    "638": {
      "fn": "ERC20.balanceOf",
      "offset": [3408, 3533],
      "op": "JUMPDEST",
      "path": "2"
    },
    "639": {
      "fn": "ERC20.balanceOf",
      "offset": [3408, 3533],
      "op": "PUSH2",
      "path": "2",
      "value": "0x183"
    },
    "642": {
      "fn": "ERC20.balanceOf",
      "offset": [3408, 3533],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28C"
    },
    "645": {
      "fn": "ERC20.balanceOf",
      "offset": [3408, 3533],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "646": {
      "fn": "ERC20.balanceOf",
      "offset": [3408, 3533],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "648": {
      "fn": "ERC20.balanceOf",
      "offset": [3408, 3533],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12A4"
    },
    "651": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [3408, 3533],
      "op": "JUMP",
      "path": "2"
    },
    "652": {
      "fn": "ERC20.balanceOf",
      "offset": [3408, 3533],
      "op": "JUMPDEST",
      "path": "2"
    },
    "653": {
      "fn": "ERC20.balanceOf",
      "offset": [3408, 3533],
      "op": "PUSH2",
      "path": "2",
      "value": "0x605"
    },
    "656": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [3408, 3533],
      "op": "JUMP",
      "path": "2"
    },
    "657": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "JUMPDEST",
      "path": "1"
    },
    "658": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EA"
    },
    "661": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "PUSH2",
      "path": "1",
      "value": "0x624"
    },
    "664": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [1668, 1769],
      "op": "JUMP",
      "path": "1"
    },
    "665": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "JUMPDEST",
      "path": "1"
    },
    "666": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "668": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "1",
      "statement": 1
    },
    "669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "675": {
      "op": "SHL"
    },
    "676": {
      "op": "SUB"
    },
    "677": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "1"
    },
    "678": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23A"
    },
    "681": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "JUMP",
      "path": "1"
    },
    "682": {
      "fn": "QD.mint",
      "offset": [1292, 2614],
      "op": "JUMPDEST",
      "path": "0"
    },
    "683": {
      "fn": "QD.mint",
      "offset": [1292, 2614],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "686": {
      "fn": "QD.mint",
      "offset": [1292, 2614],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B8"
    },
    "689": {
      "fn": "QD.mint",
      "offset": [1292, 2614],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "690": {
      "fn": "QD.mint",
      "offset": [1292, 2614],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "692": {
      "fn": "QD.mint",
      "offset": [1292, 2614],
      "op": "PUSH2",
      "path": "0",
      "value": "0x138C"
    },
    "695": {
      "fn": "QD.mint",
      "jump": "i",
      "offset": [1292, 2614],
      "op": "JUMP",
      "path": "0"
    },
    "696": {
      "fn": "QD.mint",
      "offset": [1292, 2614],
      "op": "JUMPDEST",
      "path": "0"
    },
    "697": {
      "fn": "QD.mint",
      "offset": [1292, 2614],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65A"
    },
    "700": {
      "fn": "QD.mint",
      "jump": "i",
      "offset": [1292, 2614],
      "op": "JUMP",
      "path": "0"
    },
    "701": {
      "fn": "ERC20.symbol",
      "offset": [2367, 2469],
      "op": "JUMPDEST",
      "path": "2"
    },
    "702": {
      "fn": "ERC20.symbol",
      "offset": [2367, 2469],
      "op": "PUSH2",
      "path": "2",
      "value": "0x165"
    },
    "705": {
      "fn": "ERC20.symbol",
      "offset": [2367, 2469],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E3"
    },
    "708": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [2367, 2469],
      "op": "JUMP",
      "path": "2"
    },
    "709": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3198, 3746],
      "op": "JUMPDEST",
      "path": "0"
    },
    "710": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3198, 3746],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "713": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3198, 3746],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3"
    },
    "716": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3198, 3746],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "717": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3198, 3746],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "719": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3198, 3746],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13AE"
    },
    "722": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "jump": "i",
      "offset": [3198, 3746],
      "op": "JUMP",
      "path": "0"
    },
    "723": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3198, 3746],
      "op": "JUMPDEST",
      "path": "0"
    },
    "724": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3198, 3746],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F2"
    },
    "727": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "jump": "i",
      "offset": [3198, 3746],
      "op": "JUMP",
      "path": "0"
    },
    "728": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6596, 7025],
      "op": "JUMPDEST",
      "path": "2"
    },
    "729": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6596, 7025],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A4"
    },
    "732": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6596, 7025],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E6"
    },
    "735": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6596, 7025],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "736": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6596, 7025],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "738": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6596, 7025],
      "op": "PUSH2",
      "path": "2",
      "value": "0x132B"
    },
    "741": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [6596, 7025],
      "op": "JUMP",
      "path": "2"
    },
    "742": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6596, 7025],
      "op": "JUMPDEST",
      "path": "2"
    },
    "743": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6596, 7025],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A1"
    },
    "746": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [6596, 7025],
      "op": "JUMP",
      "path": "2"
    },
    "747": {
      "fn": "ERC20.transfer",
      "offset": [3729, 3918],
      "op": "JUMPDEST",
      "path": "2"
    },
    "748": {
      "fn": "ERC20.transfer",
      "offset": [3729, 3918],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A4"
    },
    "751": {
      "fn": "ERC20.transfer",
      "offset": [3729, 3918],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F9"
    },
    "754": {
      "fn": "ERC20.transfer",
      "offset": [3729, 3918],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "755": {
      "fn": "ERC20.transfer",
      "offset": [3729, 3918],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "757": {
      "fn": "ERC20.transfer",
      "offset": [3729, 3918],
      "op": "PUSH2",
      "path": "2",
      "value": "0x132B"
    },
    "760": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [3729, 3918],
      "op": "JUMP",
      "path": "2"
    },
    "761": {
      "fn": "ERC20.transfer",
      "offset": [3729, 3918],
      "op": "JUMPDEST",
      "path": "2"
    },
    "762": {
      "fn": "ERC20.transfer",
      "offset": [3729, 3918],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA3E"
    },
    "765": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [3729, 3918],
      "op": "JUMP",
      "path": "2"
    },
    "766": {
      "offset": [514, 556],
      "op": "JUMPDEST",
      "path": "0"
    },
    "767": {
      "fn": "ERC20.transfer",
      "offset": [514, 556],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "770": {
      "offset": [549, 556],
      "op": "PUSH3",
      "path": "0",
      "value": "0x473100"
    },
    "774": {
      "offset": [514, 556],
      "op": "DUP2",
      "path": "0"
    },
    "775": {
      "fn": "ERC20.transfer",
      "offset": [514, 556],
      "op": "JUMP",
      "path": "0"
    },
    "776": {
      "offset": [585, 622],
      "op": "JUMPDEST",
      "path": "0"
    },
    "777": {
      "fn": "ERC20.transfer",
      "offset": [585, 622],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "780": {
      "offset": [620, 622],
      "op": "PUSH1",
      "path": "0",
      "value": "0x16"
    },
    "782": {
      "offset": [585, 622],
      "op": "DUP2",
      "path": "0"
    },
    "783": {
      "fn": "ERC20.transfer",
      "offset": [585, 622],
      "op": "JUMP",
      "path": "0"
    },
    "784": {
      "fn": "ERC20.allowance",
      "offset": [3976, 4125],
      "op": "JUMPDEST",
      "path": "2"
    },
    "785": {
      "fn": "ERC20.allowance",
      "offset": [3976, 4125],
      "op": "PUSH2",
      "path": "2",
      "value": "0x183"
    },
    "788": {
      "fn": "ERC20.allowance",
      "offset": [3976, 4125],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31E"
    },
    "791": {
      "fn": "ERC20.allowance",
      "offset": [3976, 4125],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "792": {
      "fn": "ERC20.allowance",
      "offset": [3976, 4125],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "794": {
      "fn": "ERC20.allowance",
      "offset": [3976, 4125],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12BE"
    },
    "797": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [3976, 4125],
      "op": "JUMP",
      "path": "2"
    },
    "798": {
      "fn": "ERC20.allowance",
      "offset": [3976, 4125],
      "op": "JUMPDEST",
      "path": "2"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "805": {
      "op": "SHL"
    },
    "806": {
      "op": "SUB"
    },
    "807": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "SWAP2",
      "path": "2",
      "statement": 2
    },
    "808": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "DUP3",
      "path": "2"
    },
    "809": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "AND",
      "path": "2"
    },
    "810": {
      "fn": "ERC20.allowance",
      "offset": [4065, 4072],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "812": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "SWAP1",
      "path": "2"
    },
    "813": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "DUP2",
      "path": "2"
    },
    "814": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "MSTORE",
      "path": "2"
    },
    "815": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4102],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "817": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "819": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "SWAP1",
      "path": "2"
    },
    "820": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "DUP2",
      "path": "2"
    },
    "821": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "MSTORE",
      "path": "2"
    },
    "822": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "824": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "DUP1",
      "path": "2"
    },
    "825": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "DUP4",
      "path": "2"
    },
    "826": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "KECCAK256",
      "path": "2"
    },
    "827": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "SWAP4",
      "path": "2"
    },
    "828": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "SWAP1",
      "path": "2"
    },
    "829": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "SWAP5",
      "path": "2"
    },
    "830": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "AND",
      "path": "2"
    },
    "831": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "DUP3",
      "path": "2"
    },
    "832": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "MSTORE",
      "path": "2"
    },
    "833": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "SWAP2",
      "path": "2"
    },
    "834": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "SWAP1",
      "path": "2"
    },
    "835": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "SWAP2",
      "path": "2"
    },
    "836": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "MSTORE",
      "path": "2"
    },
    "837": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "KECCAK256",
      "path": "2"
    },
    "838": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "SLOAD",
      "path": "2"
    },
    "839": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "SWAP1",
      "path": "2"
    },
    "840": {
      "fn": "ERC20.allowance",
      "offset": [3976, 4125],
      "op": "JUMP",
      "path": "2"
    },
    "841": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "JUMPDEST",
      "path": "1"
    },
    "842": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EA"
    },
    "845": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "1",
      "value": "0x357"
    },
    "848": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "849": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "851": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12A4"
    },
    "854": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [1918, 2116],
      "op": "JUMP",
      "path": "1"
    },
    "855": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "JUMPDEST",
      "path": "1"
    },
    "856": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA4C"
    },
    "859": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [1918, 2116],
      "op": "JUMP",
      "path": "1"
    },
    "860": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "JUMPDEST",
      "path": "2"
    },
    "861": {
      "fn": "ERC20.name",
      "offset": [2210, 2223],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "863": {
      "fn": "ERC20.name",
      "offset": [2242, 2247],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x4"
    },
    "865": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP1",
      "path": "2"
    },
    "866": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SLOAD",
      "path": "2"
    },
    "867": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36B"
    },
    "870": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP1",
      "path": "2"
    },
    "871": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1601"
    },
    "874": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [2235, 2247],
      "op": "JUMP",
      "path": "2"
    },
    "875": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "JUMPDEST",
      "path": "2"
    },
    "876": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP1",
      "path": "2"
    },
    "877": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "879": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "ADD",
      "path": "2"
    },
    "880": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "882": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP1",
      "path": "2"
    },
    "883": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP2",
      "path": "2"
    },
    "884": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DIV",
      "path": "2"
    },
    "885": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "MUL",
      "path": "2"
    },
    "886": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "888": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "ADD",
      "path": "2"
    },
    "889": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "891": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "MLOAD",
      "path": "2"
    },
    "892": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP1",
      "path": "2"
    },
    "893": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP2",
      "path": "2"
    },
    "894": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "ADD",
      "path": "2"
    },
    "895": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "897": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "MSTORE",
      "path": "2"
    },
    "898": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP1",
      "path": "2"
    },
    "899": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP3",
      "path": "2"
    },
    "900": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP2",
      "path": "2"
    },
    "901": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP1",
      "path": "2"
    },
    "902": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP2",
      "path": "2"
    },
    "903": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP2",
      "path": "2"
    },
    "904": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "MSTORE",
      "path": "2"
    },
    "905": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "907": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "ADD",
      "path": "2"
    },
    "908": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP3",
      "path": "2"
    },
    "909": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP1",
      "path": "2"
    },
    "910": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SLOAD",
      "path": "2"
    },
    "911": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH2",
      "path": "2",
      "value": "0x397"
    },
    "914": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP1",
      "path": "2"
    },
    "915": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1601"
    },
    "918": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [2235, 2247],
      "op": "JUMP",
      "path": "2"
    },
    "919": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "JUMPDEST",
      "path": "2"
    },
    "920": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP1",
      "path": "2"
    },
    "921": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "ISZERO",
      "path": "2"
    },
    "922": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E4"
    },
    "925": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "JUMPI",
      "path": "2"
    },
    "926": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP1",
      "path": "2"
    },
    "927": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "929": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "LT",
      "path": "2"
    },
    "930": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B9"
    },
    "933": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "JUMPI",
      "path": "2"
    },
    "934": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "937": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP1",
      "path": "2"
    },
    "938": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP4",
      "path": "2"
    },
    "939": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SLOAD",
      "path": "2"
    },
    "940": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DIV",
      "path": "2"
    },
    "941": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "MUL",
      "path": "2"
    },
    "942": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP4",
      "path": "2"
    },
    "943": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "MSTORE",
      "path": "2"
    },
    "944": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP2",
      "path": "2"
    },
    "945": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "947": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "ADD",
      "path": "2"
    },
    "948": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP2",
      "path": "2"
    },
    "949": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E4"
    },
    "952": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "JUMP",
      "path": "2"
    },
    "953": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "JUMPDEST",
      "path": "2"
    },
    "954": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP3",
      "path": "2"
    },
    "955": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "ADD",
      "path": "2"
    },
    "956": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP2",
      "path": "2"
    },
    "957": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP1",
      "path": "2"
    },
    "958": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "960": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "MSTORE",
      "path": "2"
    },
    "961": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "963": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "965": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "KECCAK256",
      "path": "2"
    },
    "966": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP1",
      "path": "2"
    },
    "967": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "JUMPDEST",
      "path": "2"
    },
    "968": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP2",
      "path": "2"
    },
    "969": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SLOAD",
      "path": "2"
    },
    "970": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP2",
      "path": "2"
    },
    "971": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "MSTORE",
      "path": "2"
    },
    "972": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP1",
      "path": "2"
    },
    "973": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "975": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "ADD",
      "path": "2"
    },
    "976": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP1",
      "path": "2"
    },
    "977": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "979": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "ADD",
      "path": "2"
    },
    "980": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP1",
      "path": "2"
    },
    "981": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP4",
      "path": "2"
    },
    "982": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "GT",
      "path": "2"
    },
    "983": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C7"
    },
    "986": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "JUMPI",
      "path": "2"
    },
    "987": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP3",
      "path": "2"
    },
    "988": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP1",
      "path": "2"
    },
    "989": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SUB",
      "path": "2"
    },
    "990": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "992": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "AND",
      "path": "2"
    },
    "993": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "DUP3",
      "path": "2"
    },
    "994": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "ADD",
      "path": "2"
    },
    "995": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP2",
      "path": "2"
    },
    "996": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "JUMPDEST",
      "path": "2"
    },
    "997": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "POP",
      "path": "2"
    },
    "998": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "POP",
      "path": "2"
    },
    "999": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "POP",
      "path": "2"
    },
    "1000": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "POP",
      "path": "2"
    },
    "1001": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "POP",
      "path": "2"
    },
    "1002": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "SWAP1",
      "path": "2"
    },
    "1003": {
      "fn": "ERC20.name",
      "offset": [2235, 2247],
      "op": "POP",
      "path": "2"
    },
    "1004": {
      "fn": "ERC20.name",
      "offset": [2156, 2254],
      "op": "SWAP1",
      "path": "2"
    },
    "1005": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [2156, 2254],
      "op": "JUMP",
      "path": "2"
    },
    "1006": {
      "fn": "ERC20.approve",
      "offset": [4433, 4630],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1007": {
      "fn": "ERC20.approve",
      "offset": [4516, 4520],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1009": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7",
      "statement": 4
    },
    "1010": {
      "fn": "ERC20.approve",
      "offset": [4570, 4602],
      "op": "PUSH2",
      "path": "2",
      "statement": 5,
      "value": "0x3FC"
    },
    "1013": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "DUP2",
      "path": "7"
    },
    "1014": {
      "fn": "ERC20.approve",
      "offset": [4586, 4593],
      "op": "DUP6",
      "path": "2"
    },
    "1015": {
      "fn": "ERC20.approve",
      "offset": [4595, 4601],
      "op": "DUP6",
      "path": "2"
    },
    "1016": {
      "fn": "ERC20.approve",
      "offset": [4570, 4578],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAE7"
    },
    "1019": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [4570, 4602],
      "op": "JUMP",
      "path": "2"
    },
    "1020": {
      "fn": "ERC20.approve",
      "offset": [4570, 4602],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1021": {
      "op": "POP"
    },
    "1022": {
      "fn": "ERC20.approve",
      "offset": [4619, 4623],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x1"
    },
    "1024": {
      "fn": "ERC20.approve",
      "offset": [4619, 4623],
      "op": "SWAP4",
      "path": "2"
    },
    "1025": {
      "fn": "ERC20.approve",
      "offset": [4433, 4630],
      "op": "SWAP3",
      "path": "2"
    },
    "1026": {
      "op": "POP"
    },
    "1027": {
      "op": "POP"
    },
    "1028": {
      "op": "POP"
    },
    "1029": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [4433, 4630],
      "op": "JUMP",
      "path": "2"
    },
    "1030": {
      "fn": "ERC20.transferFrom",
      "offset": [5192, 5478],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1031": {
      "fn": "ERC20.transferFrom",
      "offset": [5319, 5323],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1033": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "1034": {
      "fn": "ERC20.transferFrom",
      "offset": [5375, 5413],
      "op": "PUSH2",
      "path": "2",
      "statement": 7,
      "value": "0x414"
    },
    "1037": {
      "fn": "ERC20.transferFrom",
      "offset": [5391, 5395],
      "op": "DUP6",
      "path": "2"
    },
    "1038": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "DUP3",
      "path": "7"
    },
    "1039": {
      "fn": "ERC20.transferFrom",
      "offset": [5406, 5412],
      "op": "DUP6",
      "path": "2"
    },
    "1040": {
      "fn": "ERC20.transferFrom",
      "offset": [5375, 5390],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC0B"
    },
    "1043": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [5375, 5413],
      "op": "JUMP",
      "path": "2"
    },
    "1044": {
      "fn": "ERC20.transferFrom",
      "offset": [5375, 5413],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1045": {
      "fn": "ERC20.transferFrom",
      "offset": [5423, 5450],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x41F"
    },
    "1048": {
      "fn": "ERC20.transferFrom",
      "offset": [5433, 5437],
      "op": "DUP6",
      "path": "2"
    },
    "1049": {
      "fn": "ERC20.transferFrom",
      "offset": [5439, 5441],
      "op": "DUP6",
      "path": "2"
    },
    "1050": {
      "fn": "ERC20.transferFrom",
      "offset": [5443, 5449],
      "op": "DUP6",
      "path": "2"
    },
    "1051": {
      "fn": "ERC20.transferFrom",
      "offset": [5423, 5432],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC9D"
    },
    "1054": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [5423, 5450],
      "op": "JUMP",
      "path": "2"
    },
    "1055": {
      "fn": "ERC20.transferFrom",
      "offset": [5423, 5450],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1056": {
      "fn": "ERC20.transferFrom",
      "offset": [5467, 5471],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "1058": {
      "fn": "ERC20.transferFrom",
      "offset": [5460, 5471],
      "op": "SWAP2",
      "path": "2"
    },
    "1059": {
      "fn": "ERC20.transferFrom",
      "offset": [5460, 5471],
      "op": "POP",
      "path": "2"
    },
    "1060": {
      "fn": "ERC20.transferFrom",
      "offset": [5460, 5471],
      "op": "POP",
      "path": "2"
    },
    "1061": {
      "fn": "ERC20.transferFrom",
      "offset": [5192, 5478],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1062": {
      "fn": "ERC20.transferFrom",
      "offset": [5192, 5478],
      "op": "SWAP4",
      "path": "2"
    },
    "1063": {
      "fn": "ERC20.transferFrom",
      "offset": [5192, 5478],
      "op": "SWAP3",
      "path": "2"
    },
    "1064": {
      "fn": "ERC20.transferFrom",
      "offset": [5192, 5478],
      "op": "POP",
      "path": "2"
    },
    "1065": {
      "fn": "ERC20.transferFrom",
      "offset": [5192, 5478],
      "op": "POP",
      "path": "2"
    },
    "1066": {
      "fn": "ERC20.transferFrom",
      "offset": [5192, 5478],
      "op": "POP",
      "path": "2"
    },
    "1067": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [5192, 5478],
      "op": "JUMP",
      "path": "2"
    },
    "1068": {
      "fn": "QD.get_total_supply_cap",
      "offset": [2958, 3192],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1069": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3011, 3032],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1071": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3011, 3032],
      "op": "DUP1",
      "path": "0"
    },
    "1072": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3064, 3092],
      "op": "PUSH2",
      "path": "0",
      "value": "0x459"
    },
    "1075": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3082, 3092],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "1108": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3064, 3079],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1109": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3064, 3092],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15BE"
    },
    "1112": {
      "fn": "QD.get_total_supply_cap",
      "jump": "i",
      "offset": [3064, 3092],
      "op": "JUMP",
      "path": "0"
    },
    "1113": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3064, 3092],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1114": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3044, 3092],
      "op": "SWAP1",
      "path": "0"
    },
    "1115": {
      "op": "POP"
    },
    "1116": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3179, 3185],
      "op": "PUSH3",
      "path": "0",
      "statement": 10,
      "value": "0x15180"
    },
    "1120": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3044, 3092],
      "op": "DUP2",
      "path": "0"
    },
    "1121": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3143, 3161],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46C"
    },
    "1124": {
      "offset": [388, 390],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "1126": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3143, 3145],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1128": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3143, 3161],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D1"
    },
    "1131": {
      "fn": "QD.get_total_supply_cap",
      "jump": "i",
      "offset": [3143, 3161],
      "op": "JUMP",
      "path": "0"
    },
    "1132": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3143, 3161],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1133": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3121, 3161],
      "op": "PUSH2",
      "path": "0",
      "value": "0x479"
    },
    "1136": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3121, 3161],
      "op": "SWAP1",
      "path": "0"
    },
    "1137": {
      "offset": [487, 494],
      "op": "PUSH3",
      "path": "0",
      "value": "0x7A120"
    },
    "1141": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3121, 3161],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159F"
    },
    "1144": {
      "fn": "QD.get_total_supply_cap",
      "jump": "i",
      "offset": [3121, 3161],
      "op": "JUMP",
      "path": "0"
    },
    "1145": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3121, 3161],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1146": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3121, 3176],
      "op": "PUSH2",
      "path": "0",
      "value": "0x483"
    },
    "1149": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3121, 3176],
      "op": "SWAP2",
      "path": "0"
    },
    "1150": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3121, 3176],
      "op": "SWAP1",
      "path": "0"
    },
    "1151": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3121, 3176],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159F"
    },
    "1154": {
      "fn": "QD.get_total_supply_cap",
      "jump": "i",
      "offset": [3121, 3176],
      "op": "JUMP",
      "path": "0"
    },
    "1155": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3121, 3176],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1156": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3121, 3185],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48D"
    },
    "1159": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3121, 3185],
      "op": "SWAP2",
      "path": "0"
    },
    "1160": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3121, 3185],
      "op": "SWAP1",
      "path": "0"
    },
    "1161": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3121, 3185],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146B"
    },
    "1164": {
      "fn": "QD.get_total_supply_cap",
      "jump": "i",
      "offset": [3121, 3185],
      "op": "JUMP",
      "path": "0"
    },
    "1165": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3121, 3185],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1166": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3102, 3185],
      "op": "SWAP2",
      "path": "0"
    },
    "1167": {
      "fn": "QD.get_total_supply_cap",
      "offset": [3102, 3185],
      "op": "POP",
      "path": "0"
    },
    "1168": {
      "fn": "QD.get_total_supply_cap",
      "offset": [2958, 3192],
      "op": "POP",
      "path": "0"
    },
    "1169": {
      "fn": "QD.get_total_supply_cap",
      "offset": [2958, 3192],
      "op": "SWAP1",
      "path": "0"
    },
    "1170": {
      "fn": "QD.get_total_supply_cap",
      "jump": "o",
      "offset": [2958, 3192],
      "op": "JUMP",
      "path": "0"
    },
    "1171": {
      "fn": "QD.withdraw",
      "offset": [2620, 2839],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1172": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1174": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "1"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1181": {
      "op": "SHL"
    },
    "1182": {
      "op": "SUB"
    },
    "1183": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "1"
    },
    "1184": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "1185": {
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "1"
    },
    "1186": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4C6"
    },
    "1189": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "1"
    },
    "1190": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1192": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "1"
    },
    "1193": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1199": {
      "op": "SHL"
    },
    "1200": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "1"
    },
    "1201": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "1"
    },
    "1202": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1204": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "1"
    },
    "1205": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BD"
    },
    "1208": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "1"
    },
    "1209": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "1",
      "value": "0x141E"
    },
    "1212": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "1"
    },
    "1213": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1214": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1216": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "1"
    },
    "1217": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "DUP1",
      "path": "1"
    },
    "1218": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP2",
      "path": "1"
    },
    "1219": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SUB",
      "path": "1"
    },
    "1220": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "1"
    },
    "1221": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "1222": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1223": {
      "fn": "QD.withdraw",
      "offset": [2706, 2730],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x4F3"
    },
    "1226": {
      "offset": [549, 556],
      "op": "PUSH3",
      "path": "0",
      "value": "0x473100"
    },
    "1230": {
      "fn": "QD.withdraw",
      "offset": [2706, 2716],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "1263": {
      "fn": "QD.withdraw",
      "offset": [2706, 2730],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1453"
    },
    "1266": {
      "fn": "QD.withdraw",
      "jump": "i",
      "offset": [2706, 2730],
      "op": "JUMP",
      "path": "0"
    },
    "1267": {
      "fn": "QD.withdraw",
      "offset": [2706, 2730],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1268": {
      "fn": "QD.withdraw",
      "offset": [2688, 2703],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1269": {
      "branch": 65,
      "fn": "QD.withdraw",
      "offset": [2688, 2730],
      "op": "GT",
      "path": "0"
    },
    "1270": {
      "fn": "QD.withdraw",
      "offset": [2680, 2746],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52F"
    },
    "1273": {
      "branch": 65,
      "fn": "QD.withdraw",
      "offset": [2680, 2746],
      "op": "JUMPI",
      "path": "0"
    },
    "1274": {
      "fn": "QD.withdraw",
      "offset": [2680, 2746],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1276": {
      "fn": "QD.withdraw",
      "offset": [2680, 2746],
      "op": "MLOAD",
      "path": "0"
    },
    "1277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1283": {
      "op": "SHL"
    },
    "1284": {
      "fn": "QD.withdraw",
      "offset": [2680, 2746],
      "op": "DUP2",
      "path": "0"
    },
    "1285": {
      "fn": "QD.withdraw",
      "offset": [2680, 2746],
      "op": "MSTORE",
      "path": "0"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1288": {
      "fn": "QD.withdraw",
      "offset": [2680, 2746],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1290": {
      "fn": "QD.withdraw",
      "offset": [2680, 2746],
      "op": "DUP3",
      "path": "0"
    },
    "1291": {
      "fn": "QD.withdraw",
      "offset": [2680, 2746],
      "op": "ADD",
      "path": "0"
    },
    "1292": {
      "op": "MSTORE"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1297": {
      "op": "DUP3"
    },
    "1298": {
      "op": "ADD"
    },
    "1299": {
      "op": "MSTORE"
    },
    "1300": {
      "op": "PUSH11",
      "value": "0x28A21D1026A4A72A2FA919"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "1314": {
      "op": "SHL"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1317": {
      "op": "DUP3"
    },
    "1318": {
      "op": "ADD"
    },
    "1319": {
      "op": "MSTORE"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1322": {
      "op": "ADD"
    },
    "1323": {
      "fn": "QD.withdraw",
      "offset": [2680, 2746],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "1326": {
      "op": "JUMP"
    },
    "1327": {
      "fn": "QD.withdraw",
      "offset": [2680, 2746],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1328": {
      "fn": "QD.withdraw",
      "offset": [2756, 2790],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x575"
    },
    "1331": {
      "fn": "QD.withdraw",
      "offset": [2774, 2781],
      "op": "PUSH2",
      "path": "0",
      "value": "0x544"
    },
    "1334": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1336": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "1"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1343": {
      "op": "SHL"
    },
    "1344": {
      "op": "SUB"
    },
    "1345": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "1"
    },
    "1346": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "SWAP1",
      "path": "1"
    },
    "1347": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "JUMP",
      "path": "1"
    },
    "1348": {
      "fn": "QD.withdraw",
      "offset": [2774, 2781],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1355": {
      "op": "SHL"
    },
    "1356": {
      "op": "SUB"
    },
    "1357": {
      "fn": "QD.withdraw",
      "offset": [2756, 2760],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "1390": {
      "fn": "QD.withdraw",
      "offset": [2756, 2773],
      "op": "AND",
      "path": "0"
    },
    "1391": {
      "fn": "QD.withdraw",
      "offset": [2756, 2773],
      "op": "SWAP1",
      "path": "0"
    },
    "1392": {
      "fn": "QD.withdraw",
      "offset": [2783, 2789],
      "op": "DUP4",
      "path": "0"
    },
    "1393": {
      "fn": "QD.withdraw",
      "offset": [2756, 2773],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE6B"
    },
    "1396": {
      "fn": "QD.withdraw",
      "jump": "i",
      "offset": [2756, 2790],
      "op": "JUMP",
      "path": "0"
    },
    "1397": {
      "fn": "QD.withdraw",
      "offset": [2756, 2790],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1398": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1400": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "1"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1407": {
      "op": "SHL"
    },
    "1408": {
      "op": "SUB"
    },
    "1409": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "1"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "op": "SUB"
    },
    "1418": {
      "fn": "QD.withdraw",
      "offset": [2805, 2832],
      "op": "AND",
      "path": "0",
      "statement": 13
    },
    "1419": {
      "fn": "QD.withdraw",
      "offset": [2805, 2832],
      "op": "PUSH32",
      "path": "0",
      "value": "0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65"
    },
    "1452": {
      "fn": "QD.withdraw",
      "offset": [2825, 2831],
      "op": "DUP3",
      "path": "0"
    },
    "1453": {
      "fn": "QD.withdraw",
      "offset": [2805, 2832],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1455": {
      "fn": "QD.withdraw",
      "offset": [2805, 2832],
      "op": "MLOAD",
      "path": "0"
    },
    "1456": {
      "fn": "QD.withdraw",
      "offset": [2805, 2832],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BB"
    },
    "1459": {
      "fn": "QD.withdraw",
      "offset": [2805, 2832],
      "op": "SWAP2",
      "path": "0"
    },
    "1460": {
      "op": "DUP2"
    },
    "1461": {
      "op": "MSTORE"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1464": {
      "op": "ADD"
    },
    "1465": {
      "op": "SWAP1"
    },
    "1466": {
      "op": "JUMP"
    },
    "1467": {
      "fn": "QD.withdraw",
      "offset": [2805, 2832],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1468": {
      "fn": "QD.withdraw",
      "offset": [2805, 2832],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1470": {
      "fn": "QD.withdraw",
      "offset": [2805, 2832],
      "op": "MLOAD",
      "path": "0"
    },
    "1471": {
      "fn": "QD.withdraw",
      "offset": [2805, 2832],
      "op": "DUP1",
      "path": "0"
    },
    "1472": {
      "fn": "QD.withdraw",
      "offset": [2805, 2832],
      "op": "SWAP2",
      "path": "0"
    },
    "1473": {
      "fn": "QD.withdraw",
      "offset": [2805, 2832],
      "op": "SUB",
      "path": "0"
    },
    "1474": {
      "fn": "QD.withdraw",
      "offset": [2805, 2832],
      "op": "SWAP1",
      "path": "0"
    },
    "1475": {
      "fn": "QD.withdraw",
      "offset": [2805, 2832],
      "op": "LOG2",
      "path": "0"
    },
    "1476": {
      "fn": "QD.withdraw",
      "offset": [2620, 2839],
      "op": "POP",
      "path": "0"
    },
    "1477": {
      "fn": "QD.withdraw",
      "jump": "o",
      "offset": [2620, 2839],
      "op": "JUMP",
      "path": "0"
    },
    "1478": {
      "fn": "ERC20.increaseAllowance",
      "offset": [5873, 6109],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1479": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "1480": {
      "fn": "ERC20.increaseAllowance",
      "offset": [5961, 5965],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1482": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6058],
      "op": "DUP2",
      "path": "2",
      "statement": 14
    },
    "1483": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6058],
      "op": "DUP2",
      "path": "2"
    },
    "1484": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6058],
      "op": "MSTORE",
      "path": "2"
    },
    "1485": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6051],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1487": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6058],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1489": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6058],
      "op": "SWAP1",
      "path": "2"
    },
    "1490": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6058],
      "op": "DUP2",
      "path": "2"
    },
    "1491": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6058],
      "op": "MSTORE",
      "path": "2"
    },
    "1492": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6058],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1494": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6058],
      "op": "DUP1",
      "path": "2"
    },
    "1495": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6058],
      "op": "DUP4",
      "path": "2"
    },
    "1496": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6058],
      "op": "KECCAK256",
      "path": "2"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1503": {
      "op": "SHL"
    },
    "1504": {
      "op": "SUB"
    },
    "1505": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6067],
      "op": "DUP8",
      "path": "2"
    },
    "1506": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6067],
      "op": "AND",
      "path": "2"
    },
    "1507": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6067],
      "op": "DUP5",
      "path": "2"
    },
    "1508": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6067],
      "op": "MSTORE",
      "path": "2"
    },
    "1509": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6067],
      "op": "SWAP1",
      "path": "2"
    },
    "1510": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6067],
      "op": "SWAP2",
      "path": "2"
    },
    "1511": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6067],
      "op": "MSTORE",
      "path": "2"
    },
    "1512": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6067],
      "op": "DUP2",
      "path": "2"
    },
    "1513": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6067],
      "op": "KECCAK256",
      "path": "2"
    },
    "1514": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6067],
      "op": "SLOAD",
      "path": "2"
    },
    "1515": {
      "fn": "ERC20.increaseAllowance",
      "offset": [5961, 5965],
      "op": "SWAP1",
      "path": "2"
    },
    "1516": {
      "fn": "ERC20.increaseAllowance",
      "offset": [5961, 5965],
      "op": "SWAP2",
      "path": "2"
    },
    "1517": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "SWAP1",
      "path": "7"
    },
    "1518": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6015, 6081],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FC"
    },
    "1521": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6015, 6081],
      "op": "SWAP1",
      "path": "2"
    },
    "1522": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "DUP3",
      "path": "7"
    },
    "1523": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "SWAP1",
      "path": "7"
    },
    "1524": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6067],
      "op": "DUP7",
      "path": "2"
    },
    "1525": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6067],
      "op": "SWAP1",
      "path": "2"
    },
    "1526": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6080],
      "op": "PUSH2",
      "path": "2",
      "value": "0x600"
    },
    "1529": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6080],
      "op": "SWAP1",
      "path": "2"
    },
    "1530": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6070, 6080],
      "op": "DUP8",
      "path": "2"
    },
    "1531": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6070, 6080],
      "op": "SWAP1",
      "path": "2"
    },
    "1532": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6080],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1453"
    },
    "1535": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [6040, 6080],
      "op": "JUMP",
      "path": "2"
    },
    "1536": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6040, 6080],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1537": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6015, 6023],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAE7"
    },
    "1540": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [6015, 6081],
      "op": "JUMP",
      "path": "2"
    },
    "1541": {
      "fn": "ERC20.balanceOf",
      "offset": [3408, 3533],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1548": {
      "op": "SHL"
    },
    "1549": {
      "op": "SUB"
    },
    "1550": {
      "fn": "ERC20.balanceOf",
      "offset": [3508, 3526],
      "op": "DUP2",
      "path": "2",
      "statement": 15
    },
    "1551": {
      "fn": "ERC20.balanceOf",
      "offset": [3508, 3526],
      "op": "AND",
      "path": "2"
    },
    "1552": {
      "fn": "ERC20.balanceOf",
      "offset": [3482, 3489],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1554": {
      "fn": "ERC20.balanceOf",
      "offset": [3508, 3526],
      "op": "SWAP1",
      "path": "2"
    },
    "1555": {
      "fn": "ERC20.balanceOf",
      "offset": [3508, 3526],
      "op": "DUP2",
      "path": "2"
    },
    "1556": {
      "fn": "ERC20.balanceOf",
      "offset": [3508, 3526],
      "op": "MSTORE",
      "path": "2"
    },
    "1557": {
      "fn": "ERC20.balanceOf",
      "offset": [3508, 3517],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1559": {
      "fn": "ERC20.balanceOf",
      "offset": [3508, 3526],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1561": {
      "fn": "ERC20.balanceOf",
      "offset": [3508, 3526],
      "op": "MSTORE",
      "path": "2"
    },
    "1562": {
      "fn": "ERC20.balanceOf",
      "offset": [3508, 3526],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1564": {
      "fn": "ERC20.balanceOf",
      "offset": [3508, 3526],
      "op": "SWAP1",
      "path": "2"
    },
    "1565": {
      "fn": "ERC20.balanceOf",
      "offset": [3508, 3526],
      "op": "KECCAK256",
      "path": "2"
    },
    "1566": {
      "fn": "ERC20.balanceOf",
      "offset": [3508, 3526],
      "op": "SLOAD",
      "path": "2"
    },
    "1567": {
      "fn": "ERC20.balanceOf",
      "offset": [3408, 3533],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1568": {
      "fn": "ERC20.balanceOf",
      "offset": [3408, 3533],
      "op": "SWAP2",
      "path": "2"
    },
    "1569": {
      "fn": "ERC20.balanceOf",
      "offset": [3408, 3533],
      "op": "SWAP1",
      "path": "2"
    },
    "1570": {
      "fn": "ERC20.balanceOf",
      "offset": [3408, 3533],
      "op": "POP",
      "path": "2"
    },
    "1571": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [3408, 3533],
      "op": "JUMP",
      "path": "2"
    },
    "1572": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1573": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1575": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "1"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1582": {
      "op": "SHL"
    },
    "1583": {
      "op": "SUB"
    },
    "1584": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "1"
    },
    "1585": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "1586": {
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "1"
    },
    "1587": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64E"
    },
    "1590": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "1"
    },
    "1591": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1593": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "1"
    },
    "1594": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1600": {
      "op": "SHL"
    },
    "1601": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "1"
    },
    "1602": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "1"
    },
    "1603": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1605": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "1"
    },
    "1606": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BD"
    },
    "1609": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "1"
    },
    "1610": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "1",
      "value": "0x141E"
    },
    "1613": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "1"
    },
    "1614": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1615": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1732, 1762],
      "op": "PUSH2",
      "path": "1",
      "statement": 16,
      "value": "0x658"
    },
    "1618": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1759, 1760],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1620": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1732, 1750],
      "op": "PUSH2",
      "path": "1",
      "value": "0xED3"
    },
    "1623": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [1732, 1762],
      "op": "JUMP",
      "path": "1"
    },
    "1624": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1732, 1762],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1625": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [1668, 1769],
      "op": "JUMP",
      "path": "1"
    },
    "1626": {
      "fn": "QD.mint",
      "offset": [1292, 2614],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1627": {
      "fn": "QD.mint",
      "offset": [1358, 1375],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1629": {
      "fn": "QD.mint",
      "offset": [1406, 1441],
      "op": "PUSH11",
      "path": "0",
      "statement": 17,
      "value": "0x52B7D2DCC80CD2E4000000"
    },
    "1641": {
      "fn": "QD.mint",
      "offset": [1396, 1402],
      "op": "DUP4",
      "path": "0"
    },
    "1642": {
      "fn": "QD.mint",
      "offset": [1396, 1441],
      "op": "LT",
      "path": "0"
    },
    "1643": {
      "branch": 66,
      "fn": "QD.mint",
      "offset": [1396, 1441],
      "op": "ISZERO",
      "path": "0"
    },
    "1644": {
      "fn": "QD.mint",
      "offset": [1388, 1457],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A5"
    },
    "1647": {
      "branch": 66,
      "fn": "QD.mint",
      "offset": [1388, 1457],
      "op": "JUMPI",
      "path": "0"
    },
    "1648": {
      "fn": "QD.mint",
      "offset": [1388, 1457],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1650": {
      "fn": "QD.mint",
      "offset": [1388, 1457],
      "op": "MLOAD",
      "path": "0"
    },
    "1651": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1657": {
      "op": "SHL"
    },
    "1658": {
      "fn": "QD.mint",
      "offset": [1388, 1457],
      "op": "DUP2",
      "path": "0"
    },
    "1659": {
      "fn": "QD.mint",
      "offset": [1388, 1457],
      "op": "MSTORE",
      "path": "0"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1662": {
      "fn": "QD.mint",
      "offset": [1388, 1457],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1664": {
      "fn": "QD.mint",
      "offset": [1388, 1457],
      "op": "DUP3",
      "path": "0"
    },
    "1665": {
      "fn": "QD.mint",
      "offset": [1388, 1457],
      "op": "ADD",
      "path": "0"
    },
    "1666": {
      "op": "MSTORE"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1671": {
      "op": "DUP3"
    },
    "1672": {
      "op": "ADD"
    },
    "1673": {
      "op": "MSTORE"
    },
    "1674": {
      "op": "PUSH11",
      "value": "0x51443A204D494E545F5231"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1688": {
      "op": "SHL"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1691": {
      "op": "DUP3"
    },
    "1692": {
      "op": "ADD"
    },
    "1693": {
      "op": "MSTORE"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1696": {
      "op": "ADD"
    },
    "1697": {
      "fn": "QD.mint",
      "offset": [1388, 1457],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "1700": {
      "op": "JUMP"
    },
    "1701": {
      "fn": "QD.mint",
      "offset": [1388, 1457],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1702": {
      "fn": "QD.mint",
      "offset": [1509, 1533],
      "op": "PUSH2",
      "path": "0",
      "statement": 18,
      "value": "0x6D2"
    },
    "1705": {
      "offset": [549, 556],
      "op": "PUSH3",
      "path": "0",
      "value": "0x473100"
    },
    "1709": {
      "fn": "QD.mint",
      "offset": [1509, 1519],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "1742": {
      "fn": "QD.mint",
      "offset": [1509, 1533],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1453"
    },
    "1745": {
      "fn": "QD.mint",
      "jump": "i",
      "offset": [1509, 1533],
      "op": "JUMP",
      "path": "0"
    },
    "1746": {
      "fn": "QD.mint",
      "offset": [1509, 1533],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1747": {
      "fn": "QD.mint",
      "offset": [1491, 1506],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1748": {
      "branch": 67,
      "fn": "QD.mint",
      "offset": [1491, 1533],
      "op": "LT",
      "path": "0"
    },
    "1749": {
      "fn": "QD.mint",
      "offset": [1483, 1549],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70E"
    },
    "1752": {
      "branch": 67,
      "fn": "QD.mint",
      "offset": [1483, 1549],
      "op": "JUMPI",
      "path": "0"
    },
    "1753": {
      "fn": "QD.mint",
      "offset": [1483, 1549],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1755": {
      "fn": "QD.mint",
      "offset": [1483, 1549],
      "op": "MLOAD",
      "path": "0"
    },
    "1756": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1762": {
      "op": "SHL"
    },
    "1763": {
      "fn": "QD.mint",
      "offset": [1483, 1549],
      "op": "DUP2",
      "path": "0"
    },
    "1764": {
      "fn": "QD.mint",
      "offset": [1483, 1549],
      "op": "MSTORE",
      "path": "0"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1767": {
      "fn": "QD.mint",
      "offset": [1483, 1549],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1769": {
      "fn": "QD.mint",
      "offset": [1483, 1549],
      "op": "DUP3",
      "path": "0"
    },
    "1770": {
      "fn": "QD.mint",
      "offset": [1483, 1549],
      "op": "ADD",
      "path": "0"
    },
    "1771": {
      "op": "MSTORE"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1776": {
      "op": "DUP3"
    },
    "1777": {
      "op": "ADD"
    },
    "1778": {
      "op": "MSTORE"
    },
    "1779": {
      "op": "PUSH11",
      "value": "0x28A21D1026A4A72A2FA919"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "1793": {
      "op": "SHL"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1796": {
      "op": "DUP3"
    },
    "1797": {
      "op": "ADD"
    },
    "1798": {
      "op": "MSTORE"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1801": {
      "op": "ADD"
    },
    "1802": {
      "fn": "QD.mint",
      "offset": [1483, 1549],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "1805": {
      "op": "JUMP"
    },
    "1806": {
      "fn": "QD.mint",
      "offset": [1483, 1549],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1807": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1809": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "1"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1816": {
      "op": "SHL"
    },
    "1817": {
      "op": "SUB"
    },
    "1818": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "1"
    },
    "1819": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "1820": {
      "branch": 68,
      "fn": "QD.mint",
      "offset": [1590, 1613],
      "op": "EQ",
      "path": "0"
    },
    "1821": {
      "fn": "QD.mint",
      "offset": [1586, 2232],
      "op": "ISZERO",
      "path": "0"
    },
    "1822": {
      "fn": "QD.mint",
      "offset": [1586, 2232],
      "op": "PUSH2",
      "path": "0",
      "value": "0x802"
    },
    "1825": {
      "branch": 68,
      "fn": "QD.mint",
      "offset": [1586, 2232],
      "op": "JUMPI",
      "path": "0"
    },
    "1826": {
      "offset": [620, 622],
      "op": "PUSH1",
      "path": "0",
      "value": "0x16"
    },
    "1828": {
      "fn": "QD.mint",
      "offset": [1637, 1650],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x6"
    },
    "1830": {
      "fn": "QD.mint",
      "offset": [1637, 1650],
      "op": "SLOAD",
      "path": "0"
    },
    "1831": {
      "branch": 69,
      "fn": "QD.mint",
      "offset": [1637, 1664],
      "op": "LT",
      "path": "0"
    },
    "1832": {
      "fn": "QD.mint",
      "offset": [1629, 1692],
      "op": "PUSH2",
      "path": "0",
      "value": "0x773"
    },
    "1835": {
      "branch": 69,
      "fn": "QD.mint",
      "offset": [1629, 1692],
      "op": "JUMPI",
      "path": "0"
    },
    "1836": {
      "fn": "QD.mint",
      "offset": [1629, 1692],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1838": {
      "fn": "QD.mint",
      "offset": [1629, 1692],
      "op": "MLOAD",
      "path": "0"
    },
    "1839": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1845": {
      "op": "SHL"
    },
    "1846": {
      "fn": "QD.mint",
      "offset": [1629, 1692],
      "op": "DUP2",
      "path": "0"
    },
    "1847": {
      "fn": "QD.mint",
      "offset": [1629, 1692],
      "op": "MSTORE",
      "path": "0"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1850": {
      "fn": "QD.mint",
      "offset": [1629, 1692],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1852": {
      "fn": "QD.mint",
      "offset": [1629, 1692],
      "op": "DUP3",
      "path": "0"
    },
    "1853": {
      "fn": "QD.mint",
      "offset": [1629, 1692],
      "op": "ADD",
      "path": "0"
    },
    "1854": {
      "op": "MSTORE"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1859": {
      "op": "DUP3"
    },
    "1860": {
      "op": "ADD"
    },
    "1861": {
      "op": "MSTORE"
    },
    "1862": {
      "op": "PUSH32",
      "value": "0x43616E277420616C6C6F6361746520616E79206D6F7265000000000000000000"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1897": {
      "op": "DUP3"
    },
    "1898": {
      "op": "ADD"
    },
    "1899": {
      "op": "MSTORE"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1902": {
      "op": "ADD"
    },
    "1903": {
      "fn": "QD.mint",
      "offset": [1629, 1692],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "1906": {
      "op": "JUMP"
    },
    "1907": {
      "fn": "QD.mint",
      "offset": [1629, 1692],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1908": {
      "fn": "QD.mint",
      "offset": [1721, 1762],
      "op": "PUSH13",
      "path": "0",
      "value": "0x22142BA7658B08825EE0000000"
    },
    "1922": {
      "fn": "QD.mint",
      "offset": [1989, 1992],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x64"
    },
    "1924": {
      "fn": "QD.mint",
      "offset": [1968, 1986],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78F"
    },
    "1927": {
      "offset": [388, 390],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "1929": {
      "fn": "QD.mint",
      "offset": [1968, 1970],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1931": {
      "fn": "QD.mint",
      "offset": [1968, 1986],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D1"
    },
    "1934": {
      "fn": "QD.mint",
      "jump": "i",
      "offset": [1968, 1986],
      "op": "JUMP",
      "path": "0"
    },
    "1935": {
      "fn": "QD.mint",
      "offset": [1968, 1986],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1936": {
      "fn": "QD.mint",
      "offset": [1952, 1965],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1938": {
      "fn": "QD.mint",
      "offset": [1952, 1965],
      "op": "SLOAD",
      "path": "0"
    },
    "1939": {
      "offset": [436, 437],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1941": {
      "fn": "QD.mint",
      "offset": [1929, 1931],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1943": {
      "fn": "QD.mint",
      "offset": [1929, 1949],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A0"
    },
    "1946": {
      "fn": "QD.mint",
      "offset": [1929, 1949],
      "op": "SWAP2",
      "path": "0"
    },
    "1947": {
      "fn": "QD.mint",
      "offset": [1929, 1949],
      "op": "SWAP1",
      "path": "0"
    },
    "1948": {
      "fn": "QD.mint",
      "offset": [1929, 1949],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D1"
    },
    "1951": {
      "fn": "QD.mint",
      "jump": "i",
      "offset": [1929, 1949],
      "op": "JUMP",
      "path": "0"
    },
    "1952": {
      "fn": "QD.mint",
      "offset": [1929, 1949],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1953": {
      "fn": "QD.mint",
      "offset": [1919, 1949],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AA"
    },
    "1956": {
      "fn": "QD.mint",
      "offset": [1919, 1949],
      "op": "SWAP1",
      "path": "0"
    },
    "1957": {
      "fn": "QD.mint",
      "offset": [1919, 1926],
      "op": "DUP6",
      "path": "0"
    },
    "1958": {
      "fn": "QD.mint",
      "offset": [1919, 1949],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159F"
    },
    "1961": {
      "fn": "QD.mint",
      "jump": "i",
      "offset": [1919, 1949],
      "op": "JUMP",
      "path": "0"
    },
    "1962": {
      "fn": "QD.mint",
      "offset": [1919, 1949],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1963": {
      "fn": "QD.mint",
      "offset": [1919, 1965],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B4"
    },
    "1966": {
      "fn": "QD.mint",
      "offset": [1919, 1965],
      "op": "SWAP2",
      "path": "0"
    },
    "1967": {
      "fn": "QD.mint",
      "offset": [1919, 1965],
      "op": "SWAP1",
      "path": "0"
    },
    "1968": {
      "fn": "QD.mint",
      "offset": [1919, 1965],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159F"
    },
    "1971": {
      "fn": "QD.mint",
      "jump": "i",
      "offset": [1919, 1965],
      "op": "JUMP",
      "path": "0"
    },
    "1972": {
      "fn": "QD.mint",
      "offset": [1919, 1965],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1973": {
      "fn": "QD.mint",
      "offset": [1919, 1986],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7BE"
    },
    "1976": {
      "fn": "QD.mint",
      "offset": [1919, 1986],
      "op": "SWAP2",
      "path": "0"
    },
    "1977": {
      "fn": "QD.mint",
      "offset": [1919, 1986],
      "op": "SWAP1",
      "path": "0"
    },
    "1978": {
      "fn": "QD.mint",
      "offset": [1919, 1986],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146B"
    },
    "1981": {
      "fn": "QD.mint",
      "jump": "i",
      "offset": [1919, 1986],
      "op": "JUMP",
      "path": "0"
    },
    "1982": {
      "fn": "QD.mint",
      "offset": [1919, 1986],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1983": {
      "fn": "QD.mint",
      "offset": [1919, 1992],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C8"
    },
    "1986": {
      "fn": "QD.mint",
      "offset": [1919, 1992],
      "op": "SWAP2",
      "path": "0"
    },
    "1987": {
      "fn": "QD.mint",
      "offset": [1919, 1992],
      "op": "SWAP1",
      "path": "0"
    },
    "1988": {
      "fn": "QD.mint",
      "offset": [1919, 1992],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146B"
    },
    "1991": {
      "fn": "QD.mint",
      "jump": "i",
      "offset": [1919, 1992],
      "op": "JUMP",
      "path": "0"
    },
    "1992": {
      "fn": "QD.mint",
      "offset": [1919, 1992],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1993": {
      "fn": "QD.mint",
      "offset": [1904, 1992],
      "op": "SWAP2",
      "path": "0"
    },
    "1994": {
      "fn": "QD.mint",
      "offset": [1904, 1992],
      "op": "POP",
      "path": "0"
    },
    "1995": {
      "fn": "QD.mint",
      "offset": [2023, 2030],
      "op": "DUP1",
      "path": "0",
      "statement": 21
    },
    "1996": {
      "fn": "QD.mint",
      "offset": [2007, 2019],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1998": {
      "fn": "QD.mint",
      "offset": [2007, 2019],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2000": {
      "fn": "QD.mint",
      "offset": [2007, 2030],
      "op": "DUP3",
      "path": "0"
    },
    "2001": {
      "fn": "QD.mint",
      "offset": [2007, 2030],
      "op": "DUP3",
      "path": "0"
    },
    "2002": {
      "fn": "QD.mint",
      "offset": [2007, 2030],
      "op": "SLOAD",
      "path": "0"
    },
    "2003": {
      "fn": "QD.mint",
      "offset": [2007, 2030],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7DC"
    },
    "2006": {
      "fn": "QD.mint",
      "offset": [2007, 2030],
      "op": "SWAP2",
      "path": "0"
    },
    "2007": {
      "fn": "QD.mint",
      "offset": [2007, 2030],
      "op": "SWAP1",
      "path": "0"
    },
    "2008": {
      "fn": "QD.mint",
      "offset": [2007, 2030],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1453"
    },
    "2011": {
      "fn": "QD.mint",
      "jump": "i",
      "offset": [2007, 2030],
      "op": "JUMP",
      "path": "0"
    },
    "2012": {
      "fn": "QD.mint",
      "offset": [2007, 2030],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2013": {
      "fn": "QD.mint",
      "offset": [2007, 2030],
      "op": "SWAP3",
      "path": "0"
    },
    "2014": {
      "fn": "QD.mint",
      "offset": [2007, 2030],
      "op": "POP",
      "path": "0"
    },
    "2015": {
      "fn": "QD.mint",
      "offset": [2007, 2030],
      "op": "POP",
      "path": "0"
    },
    "2016": {
      "fn": "QD.mint",
      "offset": [2007, 2030],
      "op": "DUP2",
      "path": "0"
    },
    "2017": {
      "fn": "QD.mint",
      "offset": [2007, 2030],
      "op": "SWAP1",
      "path": "0"
    },
    "2018": {
      "fn": "QD.mint",
      "offset": [2007, 2030],
      "op": "SSTORE",
      "path": "0"
    },
    "2019": {
      "fn": "QD.mint",
      "offset": [2007, 2030],
      "op": "POP",
      "path": "0"
    },
    "2020": {
      "fn": "QD.mint",
      "offset": [2061, 2062],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x2"
    },
    "2022": {
      "fn": "QD.mint",
      "offset": [2044, 2057],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2024": {
      "fn": "QD.mint",
      "offset": [2044, 2057],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2026": {
      "fn": "QD.mint",
      "offset": [2044, 2062],
      "op": "DUP3",
      "path": "0"
    },
    "2027": {
      "fn": "QD.mint",
      "offset": [2044, 2062],
      "op": "DUP3",
      "path": "0"
    },
    "2028": {
      "fn": "QD.mint",
      "offset": [2044, 2062],
      "op": "SLOAD",
      "path": "0"
    },
    "2029": {
      "fn": "QD.mint",
      "offset": [2044, 2062],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F6"
    },
    "2032": {
      "fn": "QD.mint",
      "offset": [2044, 2062],
      "op": "SWAP2",
      "path": "0"
    },
    "2033": {
      "fn": "QD.mint",
      "offset": [2044, 2062],
      "op": "SWAP1",
      "path": "0"
    },
    "2034": {
      "fn": "QD.mint",
      "offset": [2044, 2062],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1453"
    },
    "2037": {
      "fn": "QD.mint",
      "jump": "i",
      "offset": [2044, 2062],
      "op": "JUMP",
      "path": "0"
    },
    "2038": {
      "fn": "QD.mint",
      "offset": [2044, 2062],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2039": {
      "fn": "QD.mint",
      "offset": [2044, 2062],
      "op": "SWAP1",
      "path": "0"
    },
    "2040": {
      "fn": "QD.mint",
      "offset": [2044, 2062],
      "op": "SWAP2",
      "path": "0"
    },
    "2041": {
      "fn": "QD.mint",
      "offset": [2044, 2062],
      "op": "SSTORE",
      "path": "0"
    },
    "2042": {
      "op": "POP"
    },
    "2043": {
      "fn": "QD.mint",
      "offset": [1586, 2232],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80F"
    },
    "2046": {
      "fn": "QD.mint",
      "offset": [1586, 2232],
      "op": "SWAP2",
      "path": "0"
    },
    "2047": {
      "op": "POP"
    },
    "2048": {
      "op": "POP"
    },
    "2049": {
      "fn": "QD.mint",
      "offset": [1586, 2232],
      "op": "JUMP",
      "path": "0"
    },
    "2050": {
      "fn": "QD.mint",
      "offset": [1586, 2232],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2051": {
      "fn": "QD.mint",
      "offset": [2178, 2221],
      "op": "PUSH2",
      "path": "0",
      "statement": 23,
      "value": "0x80C"
    },
    "2054": {
      "fn": "QD.mint",
      "offset": [2197, 2203],
      "op": "DUP4",
      "path": "0"
    },
    "2055": {
      "fn": "QD.mint",
      "offset": [2205, 2220],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2056": {
      "fn": "QD.mint",
      "offset": [2178, 2196],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F2"
    },
    "2059": {
      "fn": "QD.mint",
      "jump": "i",
      "offset": [2178, 2221],
      "op": "JUMP",
      "path": "0"
    },
    "2060": {
      "fn": "QD.mint",
      "offset": [2178, 2221],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2061": {
      "fn": "QD.mint",
      "offset": [2163, 2221],
      "op": "SWAP1",
      "path": "0"
    },
    "2062": {
      "fn": "QD.mint",
      "offset": [2163, 2221],
      "op": "POP",
      "path": "0"
    },
    "2063": {
      "fn": "QD.mint",
      "offset": [1586, 2232],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2064": {
      "fn": "QD.mint",
      "offset": [2272, 2298],
      "op": "PUSH2",
      "path": "0",
      "statement": 24,
      "value": "0x819"
    },
    "2067": {
      "fn": "QD.mint",
      "offset": [2278, 2289],
      "op": "DUP3",
      "path": "0"
    },
    "2068": {
      "fn": "QD.mint",
      "offset": [2291, 2297],
      "op": "DUP5",
      "path": "0"
    },
    "2069": {
      "fn": "QD.mint",
      "offset": [2272, 2277],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF23"
    },
    "2072": {
      "fn": "QD.mint",
      "jump": "i",
      "offset": [2272, 2298],
      "op": "JUMP",
      "path": "0"
    },
    "2073": {
      "fn": "QD.mint",
      "offset": [2272, 2298],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2074": {
      "fn": "QD.mint",
      "offset": [2372, 2394],
      "op": "PUSH2",
      "path": "0",
      "statement": 25,
      "value": "0x821"
    },
    "2077": {
      "fn": "QD.mint",
      "offset": [2372, 2392],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42C"
    },
    "2080": {
      "fn": "QD.mint",
      "jump": "i",
      "offset": [2372, 2394],
      "op": "JUMP",
      "path": "0"
    },
    "2081": {
      "fn": "QD.mint",
      "offset": [2372, 2394],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2082": {
      "fn": "QD.mint",
      "offset": [2356, 2368],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2084": {
      "fn": "QD.mint",
      "offset": [2356, 2368],
      "op": "SLOAD",
      "path": "0"
    },
    "2085": {
      "fn": "ERC20.totalSupply",
      "offset": [3331, 3343],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2087": {
      "fn": "ERC20.totalSupply",
      "offset": [3331, 3343],
      "op": "SLOAD",
      "path": "2"
    },
    "2088": {
      "fn": "QD.mint",
      "offset": [2340, 2368],
      "op": "PUSH2",
      "path": "0",
      "value": "0x831"
    },
    "2091": {
      "fn": "QD.mint",
      "offset": [2340, 2368],
      "op": "SWAP2",
      "path": "0"
    },
    "2092": {
      "fn": "QD.mint",
      "offset": [2340, 2368],
      "op": "SWAP1",
      "path": "0"
    },
    "2093": {
      "fn": "QD.mint",
      "offset": [2340, 2368],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15BE"
    },
    "2096": {
      "fn": "QD.mint",
      "jump": "i",
      "offset": [2340, 2368],
      "op": "JUMP",
      "path": "0"
    },
    "2097": {
      "fn": "QD.mint",
      "offset": [2340, 2368],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2098": {
      "fn": "QD.mint",
      "offset": [2340, 2394],
      "op": "GT",
      "path": "0"
    },
    "2099": {
      "branch": 70,
      "fn": "QD.mint",
      "offset": [2340, 2394],
      "op": "ISZERO",
      "path": "0"
    },
    "2100": {
      "fn": "QD.mint",
      "offset": [2332, 2410],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86D"
    },
    "2103": {
      "branch": 70,
      "fn": "QD.mint",
      "offset": [2332, 2410],
      "op": "JUMPI",
      "path": "0"
    },
    "2104": {
      "fn": "QD.mint",
      "offset": [2332, 2410],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2106": {
      "fn": "QD.mint",
      "offset": [2332, 2410],
      "op": "MLOAD",
      "path": "0"
    },
    "2107": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2113": {
      "op": "SHL"
    },
    "2114": {
      "fn": "QD.mint",
      "offset": [2332, 2410],
      "op": "DUP2",
      "path": "0"
    },
    "2115": {
      "fn": "QD.mint",
      "offset": [2332, 2410],
      "op": "MSTORE",
      "path": "0"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2118": {
      "fn": "QD.mint",
      "offset": [2332, 2410],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2120": {
      "fn": "QD.mint",
      "offset": [2332, 2410],
      "op": "DUP3",
      "path": "0"
    },
    "2121": {
      "fn": "QD.mint",
      "offset": [2332, 2410],
      "op": "ADD",
      "path": "0"
    },
    "2122": {
      "op": "MSTORE"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2127": {
      "op": "DUP3"
    },
    "2128": {
      "op": "ADD"
    },
    "2129": {
      "op": "MSTORE"
    },
    "2130": {
      "op": "PUSH11",
      "value": "0x51443A204D494E545F5233"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2144": {
      "op": "SHL"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2147": {
      "op": "DUP3"
    },
    "2148": {
      "op": "ADD"
    },
    "2149": {
      "op": "MSTORE"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2152": {
      "op": "ADD"
    },
    "2153": {
      "fn": "QD.mint",
      "offset": [2332, 2410],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "2156": {
      "op": "JUMP"
    },
    "2157": {
      "fn": "QD.mint",
      "offset": [2332, 2410],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2158": {
      "fn": "QD.mint",
      "offset": [2487, 2551],
      "op": "PUSH2",
      "path": "0",
      "statement": 26,
      "value": "0x8A2"
    },
    "2161": {
      "fn": "QD.mint",
      "offset": [2487, 2491],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2200": {
      "op": "SHL"
    },
    "2201": {
      "op": "SUB"
    },
    "2202": {
      "fn": "QD.mint",
      "offset": [2487, 2508],
      "op": "AND",
      "path": "0"
    },
    "2203": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "2204": {
      "fn": "QD.mint",
      "offset": [2531, 2535],
      "op": "ADDRESS",
      "path": "0"
    },
    "2205": {
      "fn": "QD.mint",
      "offset": [2538, 2550],
      "op": "DUP5",
      "path": "0"
    },
    "2206": {
      "fn": "QD.mint",
      "offset": [2487, 2508],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1002"
    },
    "2209": {
      "fn": "QD.mint",
      "jump": "i",
      "offset": [2487, 2551],
      "op": "JUMP",
      "path": "0"
    },
    "2210": {
      "fn": "QD.mint",
      "offset": [2487, 2551],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2211": {
      "fn": "QD.mint",
      "offset": [2567, 2607],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x40"
    },
    "2213": {
      "fn": "QD.mint",
      "offset": [2567, 2607],
      "op": "DUP1",
      "path": "0"
    },
    "2214": {
      "fn": "QD.mint",
      "offset": [2567, 2607],
      "op": "MLOAD",
      "path": "0"
    },
    "2215": {
      "op": "DUP3"
    },
    "2216": {
      "op": "DUP2"
    },
    "2217": {
      "op": "MSTORE"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2220": {
      "op": "DUP2"
    },
    "2221": {
      "op": "ADD"
    },
    "2222": {
      "op": "DUP6"
    },
    "2223": {
      "op": "SWAP1"
    },
    "2224": {
      "op": "MSTORE"
    },
    "2225": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "2226": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "SWAP2",
      "path": "7"
    },
    "2227": {
      "fn": "QD.mint",
      "offset": [2567, 2607],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F"
    },
    "2260": {
      "fn": "QD.mint",
      "offset": [2567, 2607],
      "op": "SWAP2",
      "path": "0"
    },
    "2261": {
      "op": "ADD"
    },
    "2262": {
      "fn": "QD.mint",
      "offset": [2567, 2607],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2264": {
      "fn": "QD.mint",
      "offset": [2567, 2607],
      "op": "MLOAD",
      "path": "0"
    },
    "2265": {
      "fn": "QD.mint",
      "offset": [2567, 2607],
      "op": "DUP1",
      "path": "0"
    },
    "2266": {
      "fn": "QD.mint",
      "offset": [2567, 2607],
      "op": "SWAP2",
      "path": "0"
    },
    "2267": {
      "fn": "QD.mint",
      "offset": [2567, 2607],
      "op": "SUB",
      "path": "0"
    },
    "2268": {
      "fn": "QD.mint",
      "offset": [2567, 2607],
      "op": "SWAP1",
      "path": "0"
    },
    "2269": {
      "fn": "QD.mint",
      "offset": [2567, 2607],
      "op": "LOG2",
      "path": "0"
    },
    "2270": {
      "fn": "QD.mint",
      "offset": [1292, 2614],
      "op": "SWAP3",
      "path": "0"
    },
    "2271": {
      "fn": "QD.mint",
      "offset": [1292, 2614],
      "op": "SWAP2",
      "path": "0"
    },
    "2272": {
      "fn": "QD.mint",
      "offset": [1292, 2614],
      "op": "POP",
      "path": "0"
    },
    "2273": {
      "fn": "QD.mint",
      "offset": [1292, 2614],
      "op": "POP",
      "path": "0"
    },
    "2274": {
      "fn": "QD.mint",
      "jump": "o",
      "offset": [1292, 2614],
      "op": "JUMP",
      "path": "0"
    },
    "2275": {
      "fn": "ERC20.symbol",
      "offset": [2367, 2469],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2276": {
      "fn": "ERC20.symbol",
      "offset": [2423, 2436],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2278": {
      "fn": "ERC20.symbol",
      "offset": [2455, 2462],
      "op": "PUSH1",
      "path": "2",
      "statement": 28,
      "value": "0x5"
    },
    "2280": {
      "fn": "ERC20.symbol",
      "offset": [2448, 2462],
      "op": "DUP1",
      "path": "2"
    },
    "2281": {
      "fn": "ERC20.symbol",
      "offset": [2448, 2462],
      "op": "SLOAD",
      "path": "2"
    },
    "2282": {
      "fn": "ERC20.symbol",
      "offset": [2448, 2462],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36B"
    },
    "2285": {
      "fn": "ERC20.symbol",
      "offset": [2448, 2462],
      "op": "SWAP1",
      "path": "2"
    },
    "2286": {
      "fn": "ERC20.symbol",
      "offset": [2448, 2462],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1601"
    },
    "2289": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [2448, 2462],
      "op": "JUMP",
      "path": "2"
    },
    "2290": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3198, 3746],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2291": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3304, 3320],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2293": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3304, 3320],
      "op": "DUP1",
      "path": "0"
    },
    "2294": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3357, 3385],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91F"
    },
    "2297": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3375, 3385],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "2330": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3357, 3372],
      "op": "DUP5",
      "path": "0"
    },
    "2331": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3357, 3385],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15BE"
    },
    "2334": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "jump": "i",
      "offset": [3357, 3385],
      "op": "JUMP",
      "path": "0"
    },
    "2335": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3357, 3385],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2336": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3337, 3385],
      "op": "SWAP1",
      "path": "0"
    },
    "2337": {
      "op": "POP"
    },
    "2338": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3495, 3505],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2340": {
      "offset": [620, 622],
      "op": "PUSH1",
      "path": "0",
      "value": "0x16"
    },
    "2342": {
      "offset": [549, 556],
      "op": "PUSH3",
      "path": "0",
      "value": "0x473100"
    },
    "2346": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3337, 3385],
      "op": "DUP4",
      "path": "0"
    },
    "2347": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3509, 3534],
      "op": "PUSH2",
      "path": "0",
      "value": "0x935"
    },
    "2350": {
      "offset": [620, 622],
      "op": "DUP4",
      "path": "0"
    },
    "2351": {
      "offset": [675, 677],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2353": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3509, 3534],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15BE"
    },
    "2356": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "jump": "i",
      "offset": [3509, 3534],
      "op": "JUMP",
      "path": "0"
    },
    "2357": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3509, 3534],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2358": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3508, 3550],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93F"
    },
    "2361": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3508, 3550],
      "op": "SWAP2",
      "path": "0"
    },
    "2362": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3508, 3550],
      "op": "SWAP1",
      "path": "0"
    },
    "2363": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3508, 3550],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159F"
    },
    "2366": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "jump": "i",
      "offset": [3508, 3550],
      "op": "JUMP",
      "path": "0"
    },
    "2367": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3508, 3550],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2368": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3508, 3564],
      "op": "PUSH2",
      "path": "0",
      "value": "0x949"
    },
    "2371": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3508, 3564],
      "op": "SWAP2",
      "path": "0"
    },
    "2372": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3508, 3564],
      "op": "SWAP1",
      "path": "0"
    },
    "2373": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3508, 3564],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146B"
    },
    "2376": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "jump": "i",
      "offset": [3508, 3564],
      "op": "JUMP",
      "path": "0"
    },
    "2377": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3508, 3564],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2378": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3508, 3578],
      "op": "PUSH2",
      "path": "0",
      "value": "0x953"
    },
    "2381": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3508, 3578],
      "op": "SWAP2",
      "path": "0"
    },
    "2382": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3508, 3578],
      "op": "SWAP1",
      "path": "0"
    },
    "2383": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3508, 3578],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1453"
    },
    "2386": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "jump": "i",
      "offset": [3508, 3578],
      "op": "JUMP",
      "path": "0"
    },
    "2387": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3508, 3578],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2388": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3495, 3578],
      "op": "SWAP1",
      "path": "0"
    },
    "2389": {
      "op": "POP"
    },
    "2390": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3736, 3739],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x64"
    },
    "2392": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3715, 3733],
      "op": "PUSH2",
      "path": "0",
      "value": "0x963"
    },
    "2395": {
      "offset": [388, 390],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "2397": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3715, 3717],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2399": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3715, 3733],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D1"
    },
    "2402": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "jump": "i",
      "offset": [3715, 3733],
      "op": "JUMP",
      "path": "0"
    },
    "2403": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3715, 3733],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2404": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3707, 3712],
      "op": "DUP3",
      "path": "0"
    },
    "2405": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3684, 3704],
      "op": "PUSH2",
      "path": "0",
      "value": "0x970"
    },
    "2408": {
      "offset": [436, 437],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2410": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3684, 3686],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2412": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3684, 3704],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D1"
    },
    "2415": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "jump": "i",
      "offset": [3684, 3704],
      "op": "JUMP",
      "path": "0"
    },
    "2416": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3684, 3704],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2417": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3704],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97A"
    },
    "2420": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3704],
      "op": "SWAP1",
      "path": "0"
    },
    "2421": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3681],
      "op": "DUP10",
      "path": "0"
    },
    "2422": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3704],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159F"
    },
    "2425": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "jump": "i",
      "offset": [3675, 3704],
      "op": "JUMP",
      "path": "0"
    },
    "2426": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3704],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2427": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3712],
      "op": "PUSH2",
      "path": "0",
      "value": "0x984"
    },
    "2430": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3712],
      "op": "SWAP2",
      "path": "0"
    },
    "2431": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3712],
      "op": "SWAP1",
      "path": "0"
    },
    "2432": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3712],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159F"
    },
    "2435": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "jump": "i",
      "offset": [3675, 3712],
      "op": "JUMP",
      "path": "0"
    },
    "2436": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3712],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2437": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3733],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98E"
    },
    "2440": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3733],
      "op": "SWAP2",
      "path": "0"
    },
    "2441": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3733],
      "op": "SWAP1",
      "path": "0"
    },
    "2442": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3733],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146B"
    },
    "2445": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "jump": "i",
      "offset": [3675, 3733],
      "op": "JUMP",
      "path": "0"
    },
    "2446": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3733],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2447": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3739],
      "op": "PUSH2",
      "path": "0",
      "value": "0x998"
    },
    "2450": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3739],
      "op": "SWAP2",
      "path": "0"
    },
    "2451": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3739],
      "op": "SWAP1",
      "path": "0"
    },
    "2452": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3739],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146B"
    },
    "2455": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "jump": "i",
      "offset": [3675, 3739],
      "op": "JUMP",
      "path": "0"
    },
    "2456": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3675, 3739],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2457": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3661, 3739],
      "op": "SWAP6",
      "path": "0"
    },
    "2458": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "offset": [3198, 3746],
      "op": "SWAP5",
      "path": "0"
    },
    "2459": {
      "op": "POP"
    },
    "2460": {
      "op": "POP"
    },
    "2461": {
      "op": "POP"
    },
    "2462": {
      "op": "POP"
    },
    "2463": {
      "op": "POP"
    },
    "2464": {
      "fn": "QD.qd_amt_to_usdt_amt",
      "jump": "o",
      "offset": [3198, 3746],
      "op": "JUMP",
      "path": "0"
    },
    "2465": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6596, 7025],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2466": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "2467": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6689, 6693],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2469": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6788],
      "op": "DUP2",
      "path": "2"
    },
    "2470": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6788],
      "op": "DUP2",
      "path": "2"
    },
    "2471": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6788],
      "op": "MSTORE",
      "path": "2"
    },
    "2472": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6781],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2474": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6788],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2476": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6788],
      "op": "SWAP1",
      "path": "2"
    },
    "2477": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6788],
      "op": "DUP2",
      "path": "2"
    },
    "2478": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6788],
      "op": "MSTORE",
      "path": "2"
    },
    "2479": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6788],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2481": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6788],
      "op": "DUP1",
      "path": "2"
    },
    "2482": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6788],
      "op": "DUP4",
      "path": "2"
    },
    "2483": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6788],
      "op": "KECCAK256",
      "path": "2"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2490": {
      "op": "SHL"
    },
    "2491": {
      "op": "SUB"
    },
    "2492": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6797],
      "op": "DUP8",
      "path": "2"
    },
    "2493": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6797],
      "op": "AND",
      "path": "2"
    },
    "2494": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6797],
      "op": "DUP5",
      "path": "2"
    },
    "2495": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6797],
      "op": "MSTORE",
      "path": "2"
    },
    "2496": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6797],
      "op": "SWAP1",
      "path": "2"
    },
    "2497": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6797],
      "op": "SWAP2",
      "path": "2"
    },
    "2498": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6797],
      "op": "MSTORE",
      "path": "2"
    },
    "2499": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6797],
      "op": "DUP2",
      "path": "2"
    },
    "2500": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6797],
      "op": "KECCAK256",
      "path": "2"
    },
    "2501": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6770, 6797],
      "op": "SLOAD",
      "path": "2"
    },
    "2502": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6689, 6693],
      "op": "SWAP1",
      "path": "2"
    },
    "2503": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6689, 6693],
      "op": "SWAP2",
      "path": "2"
    },
    "2504": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "SWAP1",
      "path": "7"
    },
    "2505": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6815, 6850],
      "op": "DUP4",
      "path": "2",
      "statement": 30
    },
    "2506": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6815, 6850],
      "op": "DUP2",
      "path": "2"
    },
    "2507": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6815, 6850],
      "op": "LT",
      "path": "2"
    },
    "2508": {
      "branch": 74,
      "fn": "ERC20.decreaseAllowance",
      "offset": [6815, 6850],
      "op": "ISZERO",
      "path": "2"
    },
    "2509": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6807, 6892],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA26"
    },
    "2512": {
      "branch": 74,
      "fn": "ERC20.decreaseAllowance",
      "offset": [6807, 6892],
      "op": "JUMPI",
      "path": "2"
    },
    "2513": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6807, 6892],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2515": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6807, 6892],
      "op": "MLOAD",
      "path": "2"
    },
    "2516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2522": {
      "op": "SHL"
    },
    "2523": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6807, 6892],
      "op": "DUP2",
      "path": "2"
    },
    "2524": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6807, 6892],
      "op": "MSTORE",
      "path": "2"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2527": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6807, 6892],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2529": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6807, 6892],
      "op": "DUP3",
      "path": "2"
    },
    "2530": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6807, 6892],
      "op": "ADD",
      "path": "2"
    },
    "2531": {
      "op": "MSTORE"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2536": {
      "op": "DUP3"
    },
    "2537": {
      "op": "ADD"
    },
    "2538": {
      "op": "MSTORE"
    },
    "2539": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2574": {
      "op": "DUP3"
    },
    "2575": {
      "op": "ADD"
    },
    "2576": {
      "op": "MSTORE"
    },
    "2577": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2585": {
      "op": "SHL"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2588": {
      "op": "DUP3"
    },
    "2589": {
      "op": "ADD"
    },
    "2590": {
      "op": "MSTORE"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2593": {
      "op": "ADD"
    },
    "2594": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6807, 6892],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BD"
    },
    "2597": {
      "op": "JUMP"
    },
    "2598": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6807, 6892],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2599": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6926, 6986],
      "op": "PUSH2",
      "path": "2",
      "statement": 31,
      "value": "0xA33"
    },
    "2602": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6935, 6940],
      "op": "DUP3",
      "path": "2"
    },
    "2603": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6942, 6949],
      "op": "DUP7",
      "path": "2"
    },
    "2604": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6970, 6985],
      "op": "DUP7",
      "path": "2"
    },
    "2605": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6951, 6967],
      "op": "DUP5",
      "path": "2"
    },
    "2606": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6951, 6985],
      "op": "SUB",
      "path": "2"
    },
    "2607": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6926, 6934],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAE7"
    },
    "2610": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [6926, 6986],
      "op": "JUMP",
      "path": "2"
    },
    "2611": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6926, 6986],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2612": {
      "op": "POP"
    },
    "2613": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7014, 7018],
      "op": "PUSH1",
      "path": "2",
      "statement": 32,
      "value": "0x1"
    },
    "2615": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7014, 7018],
      "op": "SWAP5",
      "path": "2"
    },
    "2616": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [6596, 7025],
      "op": "SWAP4",
      "path": "2"
    },
    "2617": {
      "op": "POP"
    },
    "2618": {
      "op": "POP"
    },
    "2619": {
      "op": "POP"
    },
    "2620": {
      "op": "POP"
    },
    "2621": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [6596, 7025],
      "op": "JUMP",
      "path": "2"
    },
    "2622": {
      "fn": "ERC20.transfer",
      "offset": [3729, 3918],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2623": {
      "fn": "ERC20.transfer",
      "offset": [3808, 3812],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2625": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "2626": {
      "fn": "ERC20.transfer",
      "offset": [3862, 3890],
      "op": "PUSH2",
      "path": "2",
      "statement": 33,
      "value": "0x3FC"
    },
    "2629": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "DUP2",
      "path": "7"
    },
    "2630": {
      "fn": "ERC20.transfer",
      "offset": [3879, 3881],
      "op": "DUP6",
      "path": "2"
    },
    "2631": {
      "fn": "ERC20.transfer",
      "offset": [3883, 3889],
      "op": "DUP6",
      "path": "2"
    },
    "2632": {
      "fn": "ERC20.transfer",
      "offset": [3862, 3871],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC9D"
    },
    "2635": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [3862, 3890],
      "op": "JUMP",
      "path": "2"
    },
    "2636": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2637": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2639": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "1"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2646": {
      "op": "SHL"
    },
    "2647": {
      "op": "SUB"
    },
    "2648": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "1"
    },
    "2649": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "2650": {
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "1"
    },
    "2651": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA76"
    },
    "2654": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "1"
    },
    "2655": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2657": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "1"
    },
    "2658": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2664": {
      "op": "SHL"
    },
    "2665": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "1"
    },
    "2666": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "1"
    },
    "2667": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2669": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "1"
    },
    "2670": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BD"
    },
    "2673": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "1"
    },
    "2674": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "1",
      "value": "0x141E"
    },
    "2677": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "1"
    },
    "2678": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2685": {
      "op": "SHL"
    },
    "2686": {
      "op": "SUB"
    },
    "2687": {
      "fn": "Ownable.transferOwnership",
      "offset": [2006, 2028],
      "op": "DUP2",
      "path": "1",
      "statement": 34
    },
    "2688": {
      "branch": 83,
      "fn": "Ownable.transferOwnership",
      "offset": [2006, 2028],
      "op": "AND",
      "path": "1"
    },
    "2689": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "PUSH2",
      "path": "1",
      "value": "0xADB"
    },
    "2692": {
      "branch": 83,
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "JUMPI",
      "path": "1"
    },
    "2693": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2695": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "MLOAD",
      "path": "1"
    },
    "2696": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2702": {
      "op": "SHL"
    },
    "2703": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "DUP2",
      "path": "1"
    },
    "2704": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "MSTORE",
      "path": "1"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2707": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2709": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "DUP3",
      "path": "1"
    },
    "2710": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "ADD",
      "path": "1"
    },
    "2711": {
      "op": "MSTORE"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2716": {
      "op": "DUP3"
    },
    "2717": {
      "op": "ADD"
    },
    "2718": {
      "op": "MSTORE"
    },
    "2719": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2754": {
      "op": "DUP3"
    },
    "2755": {
      "op": "ADD"
    },
    "2756": {
      "op": "MSTORE"
    },
    "2757": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2766": {
      "op": "SHL"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2769": {
      "op": "DUP3"
    },
    "2770": {
      "op": "ADD"
    },
    "2771": {
      "op": "MSTORE"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2774": {
      "op": "ADD"
    },
    "2775": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BD"
    },
    "2778": {
      "op": "JUMP"
    },
    "2779": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2780": {
      "fn": "Ownable.transferOwnership",
      "offset": [2081, 2109],
      "op": "PUSH2",
      "path": "1",
      "statement": 35,
      "value": "0xAE4"
    },
    "2783": {
      "fn": "Ownable.transferOwnership",
      "offset": [2100, 2108],
      "op": "DUP2",
      "path": "1"
    },
    "2784": {
      "fn": "Ownable.transferOwnership",
      "offset": [2081, 2099],
      "op": "PUSH2",
      "path": "1",
      "value": "0xED3"
    },
    "2787": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [2081, 2109],
      "op": "JUMP",
      "path": "1"
    },
    "2788": {
      "fn": "Ownable.transferOwnership",
      "offset": [2081, 2109],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2789": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "POP",
      "path": "1"
    },
    "2790": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [1918, 2116],
      "op": "JUMP",
      "path": "1"
    },
    "2791": {
      "fn": "ERC20._approve",
      "offset": [10123, 10493],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2798": {
      "op": "SHL"
    },
    "2799": {
      "op": "SUB"
    },
    "2800": {
      "fn": "ERC20._approve",
      "offset": [10254, 10273],
      "op": "DUP4",
      "path": "2",
      "statement": 36
    },
    "2801": {
      "branch": 75,
      "fn": "ERC20._approve",
      "offset": [10254, 10273],
      "op": "AND",
      "path": "2"
    },
    "2802": {
      "fn": "ERC20._approve",
      "offset": [10246, 10314],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB49"
    },
    "2805": {
      "branch": 75,
      "fn": "ERC20._approve",
      "offset": [10246, 10314],
      "op": "JUMPI",
      "path": "2"
    },
    "2806": {
      "fn": "ERC20._approve",
      "offset": [10246, 10314],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2808": {
      "fn": "ERC20._approve",
      "offset": [10246, 10314],
      "op": "MLOAD",
      "path": "2"
    },
    "2809": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2815": {
      "op": "SHL"
    },
    "2816": {
      "fn": "ERC20._approve",
      "offset": [10246, 10314],
      "op": "DUP2",
      "path": "2"
    },
    "2817": {
      "fn": "ERC20._approve",
      "offset": [10246, 10314],
      "op": "MSTORE",
      "path": "2"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2820": {
      "fn": "ERC20._approve",
      "offset": [10246, 10314],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2822": {
      "fn": "ERC20._approve",
      "offset": [10246, 10314],
      "op": "DUP3",
      "path": "2"
    },
    "2823": {
      "fn": "ERC20._approve",
      "offset": [10246, 10314],
      "op": "ADD",
      "path": "2"
    },
    "2824": {
      "op": "MSTORE"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2827": {
      "op": "DUP1"
    },
    "2828": {
      "op": "DUP3"
    },
    "2829": {
      "op": "ADD"
    },
    "2830": {
      "op": "MSTORE"
    },
    "2831": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2866": {
      "op": "DUP3"
    },
    "2867": {
      "op": "ADD"
    },
    "2868": {
      "op": "MSTORE"
    },
    "2869": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2876": {
      "op": "SHL"
    },
    "2877": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2879": {
      "op": "DUP3"
    },
    "2880": {
      "op": "ADD"
    },
    "2881": {
      "op": "MSTORE"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2884": {
      "op": "ADD"
    },
    "2885": {
      "fn": "ERC20._approve",
      "offset": [10246, 10314],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BD"
    },
    "2888": {
      "op": "JUMP"
    },
    "2889": {
      "fn": "ERC20._approve",
      "offset": [10246, 10314],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2896": {
      "op": "SHL"
    },
    "2897": {
      "op": "SUB"
    },
    "2898": {
      "fn": "ERC20._approve",
      "offset": [10332, 10353],
      "op": "DUP3",
      "path": "2",
      "statement": 37
    },
    "2899": {
      "branch": 76,
      "fn": "ERC20._approve",
      "offset": [10332, 10353],
      "op": "AND",
      "path": "2"
    },
    "2900": {
      "fn": "ERC20._approve",
      "offset": [10324, 10392],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBAA"
    },
    "2903": {
      "branch": 76,
      "fn": "ERC20._approve",
      "offset": [10324, 10392],
      "op": "JUMPI",
      "path": "2"
    },
    "2904": {
      "fn": "ERC20._approve",
      "offset": [10324, 10392],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2906": {
      "fn": "ERC20._approve",
      "offset": [10324, 10392],
      "op": "MLOAD",
      "path": "2"
    },
    "2907": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2913": {
      "op": "SHL"
    },
    "2914": {
      "fn": "ERC20._approve",
      "offset": [10324, 10392],
      "op": "DUP2",
      "path": "2"
    },
    "2915": {
      "fn": "ERC20._approve",
      "offset": [10324, 10392],
      "op": "MSTORE",
      "path": "2"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2918": {
      "fn": "ERC20._approve",
      "offset": [10324, 10392],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2920": {
      "fn": "ERC20._approve",
      "offset": [10324, 10392],
      "op": "DUP3",
      "path": "2"
    },
    "2921": {
      "fn": "ERC20._approve",
      "offset": [10324, 10392],
      "op": "ADD",
      "path": "2"
    },
    "2922": {
      "op": "MSTORE"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2927": {
      "op": "DUP3"
    },
    "2928": {
      "op": "ADD"
    },
    "2929": {
      "op": "MSTORE"
    },
    "2930": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2965": {
      "op": "DUP3"
    },
    "2966": {
      "op": "ADD"
    },
    "2967": {
      "op": "MSTORE"
    },
    "2968": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2973": {
      "op": "SHL"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2976": {
      "op": "DUP3"
    },
    "2977": {
      "op": "ADD"
    },
    "2978": {
      "op": "MSTORE"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2981": {
      "op": "ADD"
    },
    "2982": {
      "fn": "ERC20._approve",
      "offset": [10324, 10392],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BD"
    },
    "2985": {
      "op": "JUMP"
    },
    "2986": {
      "fn": "ERC20._approve",
      "offset": [10324, 10392],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2993": {
      "op": "SHL"
    },
    "2994": {
      "op": "SUB"
    },
    "2995": {
      "fn": "ERC20._approve",
      "offset": [10403, 10421],
      "op": "DUP4",
      "path": "2",
      "statement": 38
    },
    "2996": {
      "fn": "ERC20._approve",
      "offset": [10403, 10421],
      "op": "DUP2",
      "path": "2"
    },
    "2997": {
      "fn": "ERC20._approve",
      "offset": [10403, 10421],
      "op": "AND",
      "path": "2"
    },
    "2998": {
      "fn": "ERC20._approve",
      "offset": [10403, 10421],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3000": {
      "fn": "ERC20._approve",
      "offset": [10403, 10421],
      "op": "DUP2",
      "path": "2"
    },
    "3001": {
      "fn": "ERC20._approve",
      "offset": [10403, 10421],
      "op": "DUP2",
      "path": "2"
    },
    "3002": {
      "fn": "ERC20._approve",
      "offset": [10403, 10421],
      "op": "MSTORE",
      "path": "2"
    },
    "3003": {
      "fn": "ERC20._approve",
      "offset": [10403, 10414],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3005": {
      "fn": "ERC20._approve",
      "offset": [10403, 10421],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3007": {
      "fn": "ERC20._approve",
      "offset": [10403, 10421],
      "op": "SWAP1",
      "path": "2"
    },
    "3008": {
      "fn": "ERC20._approve",
      "offset": [10403, 10421],
      "op": "DUP2",
      "path": "2"
    },
    "3009": {
      "fn": "ERC20._approve",
      "offset": [10403, 10421],
      "op": "MSTORE",
      "path": "2"
    },
    "3010": {
      "fn": "ERC20._approve",
      "offset": [10403, 10421],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3012": {
      "fn": "ERC20._approve",
      "offset": [10403, 10421],
      "op": "DUP1",
      "path": "2"
    },
    "3013": {
      "fn": "ERC20._approve",
      "offset": [10403, 10421],
      "op": "DUP4",
      "path": "2"
    },
    "3014": {
      "fn": "ERC20._approve",
      "offset": [10403, 10421],
      "op": "KECCAK256",
      "path": "2"
    },
    "3015": {
      "fn": "ERC20._approve",
      "offset": [10403, 10430],
      "op": "SWAP5",
      "path": "2"
    },
    "3016": {
      "fn": "ERC20._approve",
      "offset": [10403, 10430],
      "op": "DUP8",
      "path": "2"
    },
    "3017": {
      "fn": "ERC20._approve",
      "offset": [10403, 10430],
      "op": "AND",
      "path": "2"
    },
    "3018": {
      "fn": "ERC20._approve",
      "offset": [10403, 10430],
      "op": "DUP1",
      "path": "2"
    },
    "3019": {
      "fn": "ERC20._approve",
      "offset": [10403, 10430],
      "op": "DUP5",
      "path": "2"
    },
    "3020": {
      "fn": "ERC20._approve",
      "offset": [10403, 10430],
      "op": "MSTORE",
      "path": "2"
    },
    "3021": {
      "fn": "ERC20._approve",
      "offset": [10403, 10430],
      "op": "SWAP5",
      "path": "2"
    },
    "3022": {
      "fn": "ERC20._approve",
      "offset": [10403, 10430],
      "op": "DUP3",
      "path": "2"
    },
    "3023": {
      "fn": "ERC20._approve",
      "offset": [10403, 10430],
      "op": "MSTORE",
      "path": "2"
    },
    "3024": {
      "fn": "ERC20._approve",
      "offset": [10403, 10430],
      "op": "SWAP2",
      "path": "2"
    },
    "3025": {
      "fn": "ERC20._approve",
      "offset": [10403, 10430],
      "op": "DUP3",
      "path": "2"
    },
    "3026": {
      "fn": "ERC20._approve",
      "offset": [10403, 10430],
      "op": "SWAP1",
      "path": "2"
    },
    "3027": {
      "fn": "ERC20._approve",
      "offset": [10403, 10430],
      "op": "KECCAK256",
      "path": "2"
    },
    "3028": {
      "fn": "ERC20._approve",
      "offset": [10403, 10439],
      "op": "DUP6",
      "path": "2"
    },
    "3029": {
      "fn": "ERC20._approve",
      "offset": [10403, 10439],
      "op": "SWAP1",
      "path": "2"
    },
    "3030": {
      "fn": "ERC20._approve",
      "offset": [10403, 10439],
      "op": "SSTORE",
      "path": "2"
    },
    "3031": {
      "fn": "ERC20._approve",
      "offset": [10454, 10486],
      "op": "SWAP1",
      "path": "2",
      "statement": 39
    },
    "3032": {
      "fn": "ERC20._approve",
      "offset": [10454, 10486],
      "op": "MLOAD",
      "path": "2"
    },
    "3033": {
      "op": "DUP5"
    },
    "3034": {
      "op": "DUP2"
    },
    "3035": {
      "op": "MSTORE"
    },
    "3036": {
      "fn": "ERC20._approve",
      "offset": [10454, 10486],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3069": {
      "fn": "ERC20._approve",
      "offset": [10454, 10486],
      "op": "SWAP2",
      "path": "2"
    },
    "3070": {
      "op": "ADD"
    },
    "3071": {
      "fn": "ERC20._approve",
      "offset": [10454, 10486],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3073": {
      "fn": "ERC20._approve",
      "offset": [10454, 10486],
      "op": "MLOAD",
      "path": "2"
    },
    "3074": {
      "fn": "ERC20._approve",
      "offset": [10454, 10486],
      "op": "DUP1",
      "path": "2"
    },
    "3075": {
      "fn": "ERC20._approve",
      "offset": [10454, 10486],
      "op": "SWAP2",
      "path": "2"
    },
    "3076": {
      "fn": "ERC20._approve",
      "offset": [10454, 10486],
      "op": "SUB",
      "path": "2"
    },
    "3077": {
      "fn": "ERC20._approve",
      "offset": [10454, 10486],
      "op": "SWAP1",
      "path": "2"
    },
    "3078": {
      "fn": "ERC20._approve",
      "offset": [10454, 10486],
      "op": "LOG3",
      "path": "2"
    },
    "3079": {
      "fn": "ERC20._approve",
      "offset": [10123, 10493],
      "op": "POP",
      "path": "2"
    },
    "3080": {
      "fn": "ERC20._approve",
      "offset": [10123, 10493],
      "op": "POP",
      "path": "2"
    },
    "3081": {
      "fn": "ERC20._approve",
      "offset": [10123, 10493],
      "op": "POP",
      "path": "2"
    },
    "3082": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [10123, 10493],
      "op": "JUMP",
      "path": "2"
    },
    "3083": {
      "fn": "ERC20._spendAllowance",
      "offset": [10770, 11211],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3090": {
      "op": "SHL"
    },
    "3091": {
      "op": "SUB"
    },
    "3092": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "DUP4",
      "path": "2"
    },
    "3093": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "DUP2",
      "path": "2"
    },
    "3094": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "AND",
      "path": "2"
    },
    "3095": {
      "fn": "ERC20._spendAllowance",
      "offset": [10900, 10924],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3097": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "SWAP1",
      "path": "2"
    },
    "3098": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "DUP2",
      "path": "2"
    },
    "3099": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "MSTORE",
      "path": "2"
    },
    "3100": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4102],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3102": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3104": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "SWAP1",
      "path": "2"
    },
    "3105": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "DUP2",
      "path": "2"
    },
    "3106": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "MSTORE",
      "path": "2"
    },
    "3107": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3109": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "DUP1",
      "path": "2"
    },
    "3110": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "DUP4",
      "path": "2"
    },
    "3111": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4109],
      "op": "KECCAK256",
      "path": "2"
    },
    "3112": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "SWAP4",
      "path": "2"
    },
    "3113": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "DUP7",
      "path": "2"
    },
    "3114": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "AND",
      "path": "2"
    },
    "3115": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "DUP4",
      "path": "2"
    },
    "3116": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "MSTORE",
      "path": "2"
    },
    "3117": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "SWAP3",
      "path": "2"
    },
    "3118": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "SWAP1",
      "path": "2"
    },
    "3119": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "MSTORE",
      "path": "2"
    },
    "3120": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "KECCAK256",
      "path": "2"
    },
    "3121": {
      "fn": "ERC20.allowance",
      "offset": [4091, 4118],
      "op": "SLOAD",
      "path": "2"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3124": {
      "op": "NOT"
    },
    "3125": {
      "fn": "ERC20._spendAllowance",
      "offset": [10966, 11003],
      "op": "DUP2",
      "path": "2"
    },
    "3126": {
      "branch": 77,
      "fn": "ERC20._spendAllowance",
      "offset": [10966, 11003],
      "op": "EQ",
      "path": "2"
    },
    "3127": {
      "fn": "ERC20._spendAllowance",
      "offset": [10962, 11205],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC97"
    },
    "3130": {
      "branch": 77,
      "fn": "ERC20._spendAllowance",
      "offset": [10962, 11205],
      "op": "JUMPI",
      "path": "2"
    },
    "3131": {
      "fn": "ERC20._spendAllowance",
      "offset": [11047, 11053],
      "op": "DUP2",
      "path": "2",
      "statement": 40
    },
    "3132": {
      "fn": "ERC20._spendAllowance",
      "offset": [11027, 11043],
      "op": "DUP2",
      "path": "2"
    },
    "3133": {
      "fn": "ERC20._spendAllowance",
      "offset": [11027, 11053],
      "op": "LT",
      "path": "2"
    },
    "3134": {
      "branch": 78,
      "fn": "ERC20._spendAllowance",
      "offset": [11027, 11053],
      "op": "ISZERO",
      "path": "2"
    },
    "3135": {
      "fn": "ERC20._spendAllowance",
      "offset": [11019, 11087],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC8A"
    },
    "3138": {
      "branch": 78,
      "fn": "ERC20._spendAllowance",
      "offset": [11019, 11087],
      "op": "JUMPI",
      "path": "2"
    },
    "3139": {
      "fn": "ERC20._spendAllowance",
      "offset": [11019, 11087],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3141": {
      "fn": "ERC20._spendAllowance",
      "offset": [11019, 11087],
      "op": "MLOAD",
      "path": "2"
    },
    "3142": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3148": {
      "op": "SHL"
    },
    "3149": {
      "fn": "ERC20._spendAllowance",
      "offset": [11019, 11087],
      "op": "DUP2",
      "path": "2"
    },
    "3150": {
      "fn": "ERC20._spendAllowance",
      "offset": [11019, 11087],
      "op": "MSTORE",
      "path": "2"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3153": {
      "fn": "ERC20._spendAllowance",
      "offset": [11019, 11087],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3155": {
      "fn": "ERC20._spendAllowance",
      "offset": [11019, 11087],
      "op": "DUP3",
      "path": "2"
    },
    "3156": {
      "fn": "ERC20._spendAllowance",
      "offset": [11019, 11087],
      "op": "ADD",
      "path": "2"
    },
    "3157": {
      "op": "MSTORE"
    },
    "3158": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3162": {
      "op": "DUP3"
    },
    "3163": {
      "op": "ADD"
    },
    "3164": {
      "op": "MSTORE"
    },
    "3165": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3200": {
      "op": "DUP3"
    },
    "3201": {
      "op": "ADD"
    },
    "3202": {
      "op": "MSTORE"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3205": {
      "op": "ADD"
    },
    "3206": {
      "fn": "ERC20._spendAllowance",
      "offset": [11019, 11087],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BD"
    },
    "3209": {
      "op": "JUMP"
    },
    "3210": {
      "fn": "ERC20._spendAllowance",
      "offset": [11019, 11087],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3211": {
      "fn": "ERC20._spendAllowance",
      "offset": [11129, 11180],
      "op": "PUSH2",
      "path": "2",
      "statement": 41,
      "value": "0xC97"
    },
    "3214": {
      "fn": "ERC20._spendAllowance",
      "offset": [11138, 11143],
      "op": "DUP5",
      "path": "2"
    },
    "3215": {
      "fn": "ERC20._spendAllowance",
      "offset": [11145, 11152],
      "op": "DUP5",
      "path": "2"
    },
    "3216": {
      "fn": "ERC20._spendAllowance",
      "offset": [11173, 11179],
      "op": "DUP5",
      "path": "2"
    },
    "3217": {
      "fn": "ERC20._spendAllowance",
      "offset": [11154, 11170],
      "op": "DUP5",
      "path": "2"
    },
    "3218": {
      "fn": "ERC20._spendAllowance",
      "offset": [11154, 11179],
      "op": "SUB",
      "path": "2"
    },
    "3219": {
      "fn": "ERC20._spendAllowance",
      "offset": [11129, 11137],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAE7"
    },
    "3222": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [11129, 11180],
      "op": "JUMP",
      "path": "2"
    },
    "3223": {
      "fn": "ERC20._spendAllowance",
      "offset": [11129, 11180],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3224": {
      "fn": "ERC20._spendAllowance",
      "offset": [10770, 11211],
      "op": "POP",
      "path": "2"
    },
    "3225": {
      "fn": "ERC20._spendAllowance",
      "offset": [10770, 11211],
      "op": "POP",
      "path": "2"
    },
    "3226": {
      "fn": "ERC20._spendAllowance",
      "offset": [10770, 11211],
      "op": "POP",
      "path": "2"
    },
    "3227": {
      "fn": "ERC20._spendAllowance",
      "offset": [10770, 11211],
      "op": "POP",
      "path": "2"
    },
    "3228": {
      "fn": "ERC20._spendAllowance",
      "jump": "o",
      "offset": [10770, 11211],
      "op": "JUMP",
      "path": "2"
    },
    "3229": {
      "fn": "ERC20._transfer",
      "offset": [7488, 8139],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3236": {
      "op": "SHL"
    },
    "3237": {
      "op": "SUB"
    },
    "3238": {
      "fn": "ERC20._transfer",
      "offset": [7614, 7632],
      "op": "DUP4",
      "path": "2",
      "statement": 42
    },
    "3239": {
      "branch": 79,
      "fn": "ERC20._transfer",
      "offset": [7614, 7632],
      "op": "AND",
      "path": "2"
    },
    "3240": {
      "fn": "ERC20._transfer",
      "offset": [7606, 7674],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD01"
    },
    "3243": {
      "branch": 79,
      "fn": "ERC20._transfer",
      "offset": [7606, 7674],
      "op": "JUMPI",
      "path": "2"
    },
    "3244": {
      "fn": "ERC20._transfer",
      "offset": [7606, 7674],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3246": {
      "fn": "ERC20._transfer",
      "offset": [7606, 7674],
      "op": "MLOAD",
      "path": "2"
    },
    "3247": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3253": {
      "op": "SHL"
    },
    "3254": {
      "fn": "ERC20._transfer",
      "offset": [7606, 7674],
      "op": "DUP2",
      "path": "2"
    },
    "3255": {
      "fn": "ERC20._transfer",
      "offset": [7606, 7674],
      "op": "MSTORE",
      "path": "2"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3258": {
      "fn": "ERC20._transfer",
      "offset": [7606, 7674],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3260": {
      "fn": "ERC20._transfer",
      "offset": [7606, 7674],
      "op": "DUP3",
      "path": "2"
    },
    "3261": {
      "fn": "ERC20._transfer",
      "offset": [7606, 7674],
      "op": "ADD",
      "path": "2"
    },
    "3262": {
      "op": "MSTORE"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3267": {
      "op": "DUP3"
    },
    "3268": {
      "op": "ADD"
    },
    "3269": {
      "op": "MSTORE"
    },
    "3270": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3305": {
      "op": "DUP3"
    },
    "3306": {
      "op": "ADD"
    },
    "3307": {
      "op": "MSTORE"
    },
    "3308": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3316": {
      "op": "SHL"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3319": {
      "op": "DUP3"
    },
    "3320": {
      "op": "ADD"
    },
    "3321": {
      "op": "MSTORE"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3324": {
      "op": "ADD"
    },
    "3325": {
      "fn": "ERC20._transfer",
      "offset": [7606, 7674],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BD"
    },
    "3328": {
      "op": "JUMP"
    },
    "3329": {
      "fn": "ERC20._transfer",
      "offset": [7606, 7674],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3336": {
      "op": "SHL"
    },
    "3337": {
      "op": "SUB"
    },
    "3338": {
      "fn": "ERC20._transfer",
      "offset": [7692, 7708],
      "op": "DUP3",
      "path": "2",
      "statement": 43
    },
    "3339": {
      "branch": 80,
      "fn": "ERC20._transfer",
      "offset": [7692, 7708],
      "op": "AND",
      "path": "2"
    },
    "3340": {
      "fn": "ERC20._transfer",
      "offset": [7684, 7748],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD63"
    },
    "3343": {
      "branch": 80,
      "fn": "ERC20._transfer",
      "offset": [7684, 7748],
      "op": "JUMPI",
      "path": "2"
    },
    "3344": {
      "fn": "ERC20._transfer",
      "offset": [7684, 7748],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3346": {
      "fn": "ERC20._transfer",
      "offset": [7684, 7748],
      "op": "MLOAD",
      "path": "2"
    },
    "3347": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3353": {
      "op": "SHL"
    },
    "3354": {
      "fn": "ERC20._transfer",
      "offset": [7684, 7748],
      "op": "DUP2",
      "path": "2"
    },
    "3355": {
      "fn": "ERC20._transfer",
      "offset": [7684, 7748],
      "op": "MSTORE",
      "path": "2"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3358": {
      "fn": "ERC20._transfer",
      "offset": [7684, 7748],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3360": {
      "fn": "ERC20._transfer",
      "offset": [7684, 7748],
      "op": "DUP3",
      "path": "2"
    },
    "3361": {
      "fn": "ERC20._transfer",
      "offset": [7684, 7748],
      "op": "ADD",
      "path": "2"
    },
    "3362": {
      "op": "MSTORE"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3367": {
      "op": "DUP3"
    },
    "3368": {
      "op": "ADD"
    },
    "3369": {
      "op": "MSTORE"
    },
    "3370": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3405": {
      "op": "DUP3"
    },
    "3406": {
      "op": "ADD"
    },
    "3407": {
      "op": "MSTORE"
    },
    "3408": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "3414": {
      "op": "SHL"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3417": {
      "op": "DUP3"
    },
    "3418": {
      "op": "ADD"
    },
    "3419": {
      "op": "MSTORE"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3422": {
      "op": "ADD"
    },
    "3423": {
      "fn": "ERC20._transfer",
      "offset": [7684, 7748],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BD"
    },
    "3426": {
      "op": "JUMP"
    },
    "3427": {
      "fn": "ERC20._transfer",
      "offset": [7684, 7748],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3434": {
      "op": "SHL"
    },
    "3435": {
      "op": "SUB"
    },
    "3436": {
      "fn": "ERC20._transfer",
      "offset": [7830, 7845],
      "op": "DUP4",
      "path": "2"
    },
    "3437": {
      "fn": "ERC20._transfer",
      "offset": [7830, 7845],
      "op": "AND",
      "path": "2"
    },
    "3438": {
      "fn": "ERC20._transfer",
      "offset": [7808, 7827],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3440": {
      "fn": "ERC20._transfer",
      "offset": [7830, 7845],
      "op": "SWAP1",
      "path": "2"
    },
    "3441": {
      "fn": "ERC20._transfer",
      "offset": [7830, 7845],
      "op": "DUP2",
      "path": "2"
    },
    "3442": {
      "fn": "ERC20._transfer",
      "offset": [7830, 7845],
      "op": "MSTORE",
      "path": "2"
    },
    "3443": {
      "fn": "ERC20._transfer",
      "offset": [7830, 7839],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3445": {
      "fn": "ERC20._transfer",
      "offset": [7830, 7845],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3447": {
      "fn": "ERC20._transfer",
      "offset": [7830, 7845],
      "op": "MSTORE",
      "path": "2"
    },
    "3448": {
      "fn": "ERC20._transfer",
      "offset": [7830, 7845],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3450": {
      "fn": "ERC20._transfer",
      "offset": [7830, 7845],
      "op": "SWAP1",
      "path": "2"
    },
    "3451": {
      "fn": "ERC20._transfer",
      "offset": [7830, 7845],
      "op": "KECCAK256",
      "path": "2"
    },
    "3452": {
      "fn": "ERC20._transfer",
      "offset": [7830, 7845],
      "op": "SLOAD",
      "path": "2"
    },
    "3453": {
      "fn": "ERC20._transfer",
      "offset": [7863, 7884],
      "op": "DUP2",
      "path": "2",
      "statement": 44
    },
    "3454": {
      "fn": "ERC20._transfer",
      "offset": [7863, 7884],
      "op": "DUP2",
      "path": "2"
    },
    "3455": {
      "fn": "ERC20._transfer",
      "offset": [7863, 7884],
      "op": "LT",
      "path": "2"
    },
    "3456": {
      "branch": 81,
      "fn": "ERC20._transfer",
      "offset": [7863, 7884],
      "op": "ISZERO",
      "path": "2"
    },
    "3457": {
      "fn": "ERC20._transfer",
      "offset": [7855, 7927],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDDB"
    },
    "3460": {
      "branch": 81,
      "fn": "ERC20._transfer",
      "offset": [7855, 7927],
      "op": "JUMPI",
      "path": "2"
    },
    "3461": {
      "fn": "ERC20._transfer",
      "offset": [7855, 7927],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3463": {
      "fn": "ERC20._transfer",
      "offset": [7855, 7927],
      "op": "MLOAD",
      "path": "2"
    },
    "3464": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3470": {
      "op": "SHL"
    },
    "3471": {
      "fn": "ERC20._transfer",
      "offset": [7855, 7927],
      "op": "DUP2",
      "path": "2"
    },
    "3472": {
      "fn": "ERC20._transfer",
      "offset": [7855, 7927],
      "op": "MSTORE",
      "path": "2"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3475": {
      "fn": "ERC20._transfer",
      "offset": [7855, 7927],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3477": {
      "fn": "ERC20._transfer",
      "offset": [7855, 7927],
      "op": "DUP3",
      "path": "2"
    },
    "3478": {
      "fn": "ERC20._transfer",
      "offset": [7855, 7927],
      "op": "ADD",
      "path": "2"
    },
    "3479": {
      "op": "MSTORE"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3484": {
      "op": "DUP3"
    },
    "3485": {
      "op": "ADD"
    },
    "3486": {
      "op": "MSTORE"
    },
    "3487": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3522": {
      "op": "DUP3"
    },
    "3523": {
      "op": "ADD"
    },
    "3524": {
      "op": "MSTORE"
    },
    "3525": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3534": {
      "op": "SHL"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3537": {
      "op": "DUP3"
    },
    "3538": {
      "op": "ADD"
    },
    "3539": {
      "op": "MSTORE"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3542": {
      "op": "ADD"
    },
    "3543": {
      "fn": "ERC20._transfer",
      "offset": [7855, 7927],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BD"
    },
    "3546": {
      "op": "JUMP"
    },
    "3547": {
      "fn": "ERC20._transfer",
      "offset": [7855, 7927],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3554": {
      "op": "SHL"
    },
    "3555": {
      "op": "SUB"
    },
    "3556": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7976],
      "op": "DUP1",
      "path": "2",
      "statement": 45
    },
    "3557": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7976],
      "op": "DUP6",
      "path": "2"
    },
    "3558": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7976],
      "op": "AND",
      "path": "2"
    },
    "3559": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7976],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3561": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7976],
      "op": "SWAP1",
      "path": "2"
    },
    "3562": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7976],
      "op": "DUP2",
      "path": "2"
    },
    "3563": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7976],
      "op": "MSTORE",
      "path": "2"
    },
    "3564": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7970],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3566": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7976],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3568": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7976],
      "op": "MSTORE",
      "path": "2"
    },
    "3569": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7976],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3571": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7976],
      "op": "DUP1",
      "path": "2"
    },
    "3572": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7976],
      "op": "DUP3",
      "path": "2"
    },
    "3573": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7976],
      "op": "KECCAK256",
      "path": "2"
    },
    "3574": {
      "fn": "ERC20._transfer",
      "offset": [7979, 7999],
      "op": "DUP6",
      "path": "2"
    },
    "3575": {
      "fn": "ERC20._transfer",
      "offset": [7979, 7999],
      "op": "DUP6",
      "path": "2"
    },
    "3576": {
      "fn": "ERC20._transfer",
      "offset": [7979, 7999],
      "op": "SUB",
      "path": "2"
    },
    "3577": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7999],
      "op": "SWAP1",
      "path": "2"
    },
    "3578": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7999],
      "op": "SSTORE",
      "path": "2"
    },
    "3579": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8032],
      "op": "SWAP2",
      "path": "2",
      "statement": 46
    },
    "3580": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8032],
      "op": "DUP6",
      "path": "2"
    },
    "3581": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8032],
      "op": "AND",
      "path": "2"
    },
    "3582": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8032],
      "op": "DUP2",
      "path": "2"
    },
    "3583": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8032],
      "op": "MSTORE",
      "path": "2"
    },
    "3584": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8032],
      "op": "SWAP1",
      "path": "2"
    },
    "3585": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8032],
      "op": "DUP2",
      "path": "2"
    },
    "3586": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8032],
      "op": "KECCAK256",
      "path": "2"
    },
    "3587": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8042],
      "op": "DUP1",
      "path": "2"
    },
    "3588": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8042],
      "op": "SLOAD",
      "path": "2"
    },
    "3589": {
      "fn": "ERC20._transfer",
      "offset": [7993, 7999],
      "op": "DUP5",
      "path": "2"
    },
    "3590": {
      "fn": "ERC20._transfer",
      "offset": [7993, 7999],
      "op": "SWAP3",
      "path": "2"
    },
    "3591": {
      "fn": "ERC20._transfer",
      "offset": [7961, 7976],
      "op": "SWAP1",
      "path": "2"
    },
    "3592": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8042],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE12"
    },
    "3595": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8042],
      "op": "SWAP1",
      "path": "2"
    },
    "3596": {
      "fn": "ERC20._transfer",
      "offset": [7993, 7999],
      "op": "DUP5",
      "path": "2"
    },
    "3597": {
      "fn": "ERC20._transfer",
      "offset": [7993, 7999],
      "op": "SWAP1",
      "path": "2"
    },
    "3598": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8042],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1453"
    },
    "3601": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [8019, 8042],
      "op": "JUMP",
      "path": "2"
    },
    "3602": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8042],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3603": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8042],
      "op": "SWAP3",
      "path": "2"
    },
    "3604": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8042],
      "op": "POP",
      "path": "2"
    },
    "3605": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8042],
      "op": "POP",
      "path": "2"
    },
    "3606": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8042],
      "op": "DUP2",
      "path": "2"
    },
    "3607": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8042],
      "op": "SWAP1",
      "path": "2"
    },
    "3608": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8042],
      "op": "SSTORE",
      "path": "2"
    },
    "3609": {
      "fn": "ERC20._transfer",
      "offset": [8019, 8042],
      "op": "POP",
      "path": "2"
    },
    "3610": {
      "fn": "ERC20._transfer",
      "offset": [8073, 8075],
      "op": "DUP3",
      "path": "2",
      "statement": 47
    },
    "3611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3617": {
      "op": "SHL"
    },
    "3618": {
      "op": "SUB"
    },
    "3619": {
      "fn": "ERC20._transfer",
      "offset": [8058, 8084],
      "op": "AND",
      "path": "2"
    },
    "3620": {
      "fn": "ERC20._transfer",
      "offset": [8067, 8071],
      "op": "DUP5",
      "path": "2"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3627": {
      "op": "SHL"
    },
    "3628": {
      "op": "SUB"
    },
    "3629": {
      "fn": "ERC20._transfer",
      "offset": [8058, 8084],
      "op": "AND",
      "path": "2"
    },
    "3630": {
      "fn": "ERC20._transfer",
      "offset": [8058, 8084],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3663": {
      "fn": "ERC20._transfer",
      "offset": [8077, 8083],
      "op": "DUP5",
      "path": "2"
    },
    "3664": {
      "fn": "ERC20._transfer",
      "offset": [8058, 8084],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3666": {
      "fn": "ERC20._transfer",
      "offset": [8058, 8084],
      "op": "MLOAD",
      "path": "2"
    },
    "3667": {
      "fn": "ERC20._transfer",
      "offset": [8058, 8084],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE5E"
    },
    "3670": {
      "fn": "ERC20._transfer",
      "offset": [8058, 8084],
      "op": "SWAP2",
      "path": "2"
    },
    "3671": {
      "op": "DUP2"
    },
    "3672": {
      "op": "MSTORE"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3675": {
      "op": "ADD"
    },
    "3676": {
      "op": "SWAP1"
    },
    "3677": {
      "op": "JUMP"
    },
    "3678": {
      "fn": "ERC20._transfer",
      "offset": [8058, 8084],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3679": {
      "fn": "ERC20._transfer",
      "offset": [8058, 8084],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3681": {
      "fn": "ERC20._transfer",
      "offset": [8058, 8084],
      "op": "MLOAD",
      "path": "2"
    },
    "3682": {
      "fn": "ERC20._transfer",
      "offset": [8058, 8084],
      "op": "DUP1",
      "path": "2"
    },
    "3683": {
      "fn": "ERC20._transfer",
      "offset": [8058, 8084],
      "op": "SWAP2",
      "path": "2"
    },
    "3684": {
      "fn": "ERC20._transfer",
      "offset": [8058, 8084],
      "op": "SUB",
      "path": "2"
    },
    "3685": {
      "fn": "ERC20._transfer",
      "offset": [8058, 8084],
      "op": "SWAP1",
      "path": "2"
    },
    "3686": {
      "fn": "ERC20._transfer",
      "offset": [8058, 8084],
      "op": "LOG3",
      "path": "2"
    },
    "3687": {
      "fn": "ERC20._transfer",
      "offset": [8095, 8132],
      "op": "PUSH2",
      "path": "2",
      "statement": 48,
      "value": "0xC97"
    },
    "3690": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [701, 906],
      "op": "JUMP",
      "path": "5"
    },
    "3691": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [701, 906],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3692": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "PUSH1",
      "path": "5",
      "statement": 49,
      "value": "0x40"
    },
    "3694": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "MLOAD",
      "path": "5"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3701": {
      "op": "SHL"
    },
    "3702": {
      "op": "SUB"
    },
    "3703": {
      "op": "DUP4"
    },
    "3704": {
      "op": "AND"
    },
    "3705": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "3707": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "DUP3",
      "path": "5"
    },
    "3708": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "ADD",
      "path": "5"
    },
    "3709": {
      "op": "MSTORE"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3712": {
      "op": "DUP2"
    },
    "3713": {
      "op": "ADD"
    },
    "3714": {
      "op": "DUP3"
    },
    "3715": {
      "op": "SWAP1"
    },
    "3716": {
      "op": "MSTORE"
    },
    "3717": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 899],
      "op": "PUSH2",
      "path": "5",
      "value": "0xECE"
    },
    "3720": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 899],
      "op": "SWAP1",
      "path": "5"
    },
    "3721": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [833, 838],
      "op": "DUP5",
      "path": "5"
    },
    "3722": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [833, 838],
      "op": "SWAP1",
      "path": "5"
    },
    "3723": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3730": {
      "op": "SHL"
    },
    "3731": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [863, 886],
      "op": "SWAP1",
      "path": "5"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3734": {
      "op": "ADD"
    },
    "3735": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3736": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3738": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "DUP1",
      "path": "5"
    },
    "3739": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "MLOAD",
      "path": "5"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3742": {
      "op": "NOT"
    },
    "3743": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "DUP2",
      "path": "5"
    },
    "3744": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "DUP5",
      "path": "5"
    },
    "3745": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SUB",
      "path": "5"
    },
    "3746": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "ADD",
      "path": "5"
    },
    "3747": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "DUP2",
      "path": "5"
    },
    "3748": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "MSTORE",
      "path": "5"
    },
    "3749": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP2",
      "path": "5"
    },
    "3750": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP1",
      "path": "5"
    },
    "3751": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "MSTORE",
      "path": "5"
    },
    "3752": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3754": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "DUP2",
      "path": "5"
    },
    "3755": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "ADD",
      "path": "5"
    },
    "3756": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "DUP1",
      "path": "5"
    },
    "3757": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "MLOAD",
      "path": "5"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3762": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3764": {
      "op": "SHL"
    },
    "3765": {
      "op": "SUB"
    },
    "3766": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "AND",
      "path": "5"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3773": {
      "op": "SHL"
    },
    "3774": {
      "op": "SUB"
    },
    "3775": {
      "op": "NOT"
    },
    "3776": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP1",
      "path": "5"
    },
    "3777": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP4",
      "path": "5"
    },
    "3778": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "AND",
      "path": "5"
    },
    "3779": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP3",
      "path": "5"
    },
    "3780": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP1",
      "path": "5"
    },
    "3781": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP3",
      "path": "5"
    },
    "3782": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "OR",
      "path": "5"
    },
    "3783": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP1",
      "path": "5"
    },
    "3784": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP2",
      "path": "5"
    },
    "3785": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "MSTORE",
      "path": "5"
    },
    "3786": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 832],
      "op": "PUSH2",
      "path": "5",
      "value": "0x103A"
    },
    "3789": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [813, 899],
      "op": "JUMP",
      "path": "5"
    },
    "3790": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 899],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3791": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [701, 906],
      "op": "POP",
      "path": "5"
    },
    "3792": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [701, 906],
      "op": "POP",
      "path": "5"
    },
    "3793": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [701, 906],
      "op": "POP",
      "path": "5"
    },
    "3794": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [701, 906],
      "op": "JUMP",
      "path": "5"
    },
    "3795": {
      "fn": "Ownable._transferOwnership",
      "offset": [2270, 2457],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3796": {
      "fn": "Ownable._transferOwnership",
      "offset": [2343, 2359],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3798": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "DUP1",
      "path": "1"
    },
    "3799": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SLOAD",
      "path": "1"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3806": {
      "op": "SHL"
    },
    "3807": {
      "op": "SUB"
    },
    "3808": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP4",
      "path": "1",
      "statement": 50
    },
    "3809": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP2",
      "path": "1"
    },
    "3810": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "AND",
      "path": "1"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3817": {
      "op": "SHL"
    },
    "3818": {
      "op": "SUB"
    },
    "3819": {
      "op": "NOT"
    },
    "3820": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP4",
      "path": "1"
    },
    "3821": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "AND",
      "path": "1"
    },
    "3822": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP2",
      "path": "1"
    },
    "3823": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "OR",
      "path": "1"
    },
    "3824": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP5",
      "path": "1"
    },
    "3825": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "SSTORE",
      "path": "1"
    },
    "3826": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "PUSH1",
      "path": "1",
      "statement": 51,
      "value": "0x40"
    },
    "3828": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "MLOAD",
      "path": "1"
    },
    "3829": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP2",
      "path": "1"
    },
    "3830": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP1",
      "path": "1"
    },
    "3831": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP3",
      "path": "1"
    },
    "3832": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "AND",
      "path": "1"
    },
    "3833": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP3",
      "path": "1"
    },
    "3834": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "DUP4",
      "path": "1"
    },
    "3835": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP2",
      "path": "1"
    },
    "3836": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3869": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "SWAP2",
      "path": "1"
    },
    "3870": {
      "fn": "Ownable._transferOwnership",
      "offset": [2343, 2359],
      "op": "SWAP1",
      "path": "1"
    },
    "3871": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "LOG3",
      "path": "1"
    },
    "3872": {
      "fn": "Ownable._transferOwnership",
      "offset": [2270, 2457],
      "op": "POP",
      "path": "1"
    },
    "3873": {
      "fn": "Ownable._transferOwnership",
      "offset": [2270, 2457],
      "op": "POP",
      "path": "1"
    },
    "3874": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [2270, 2457],
      "op": "JUMP",
      "path": "1"
    },
    "3875": {
      "fn": "ERC20._mint",
      "offset": [8415, 8804],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3882": {
      "op": "SHL"
    },
    "3883": {
      "op": "SUB"
    },
    "3884": {
      "fn": "ERC20._mint",
      "offset": [8498, 8519],
      "op": "DUP3",
      "path": "2",
      "statement": 52
    },
    "3885": {
      "branch": 82,
      "fn": "ERC20._mint",
      "offset": [8498, 8519],
      "op": "AND",
      "path": "2"
    },
    "3886": {
      "fn": "ERC20._mint",
      "offset": [8490, 8555],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF79"
    },
    "3889": {
      "branch": 82,
      "fn": "ERC20._mint",
      "offset": [8490, 8555],
      "op": "JUMPI",
      "path": "2"
    },
    "3890": {
      "fn": "ERC20._mint",
      "offset": [8490, 8555],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3892": {
      "fn": "ERC20._mint",
      "offset": [8490, 8555],
      "op": "MLOAD",
      "path": "2"
    },
    "3893": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3899": {
      "op": "SHL"
    },
    "3900": {
      "fn": "ERC20._mint",
      "offset": [8490, 8555],
      "op": "DUP2",
      "path": "2"
    },
    "3901": {
      "fn": "ERC20._mint",
      "offset": [8490, 8555],
      "op": "MSTORE",
      "path": "2"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3904": {
      "fn": "ERC20._mint",
      "offset": [8490, 8555],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3906": {
      "fn": "ERC20._mint",
      "offset": [8490, 8555],
      "op": "DUP3",
      "path": "2"
    },
    "3907": {
      "fn": "ERC20._mint",
      "offset": [8490, 8555],
      "op": "ADD",
      "path": "2"
    },
    "3908": {
      "op": "MSTORE"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3913": {
      "op": "DUP3"
    },
    "3914": {
      "op": "ADD"
    },
    "3915": {
      "op": "MSTORE"
    },
    "3916": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3951": {
      "op": "DUP3"
    },
    "3952": {
      "op": "ADD"
    },
    "3953": {
      "op": "MSTORE"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3956": {
      "op": "ADD"
    },
    "3957": {
      "fn": "ERC20._mint",
      "offset": [8490, 8555],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BD"
    },
    "3960": {
      "op": "JUMP"
    },
    "3961": {
      "fn": "ERC20._mint",
      "offset": [8490, 8555],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3962": {
      "fn": "ERC20._mint",
      "offset": [8642, 8648],
      "op": "DUP1",
      "path": "2",
      "statement": 53
    },
    "3963": {
      "fn": "ERC20._mint",
      "offset": [8626, 8638],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3965": {
      "fn": "ERC20._mint",
      "offset": [8626, 8638],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3967": {
      "fn": "ERC20._mint",
      "offset": [8626, 8648],
      "op": "DUP3",
      "path": "2"
    },
    "3968": {
      "fn": "ERC20._mint",
      "offset": [8626, 8648],
      "op": "DUP3",
      "path": "2"
    },
    "3969": {
      "fn": "ERC20._mint",
      "offset": [8626, 8648],
      "op": "SLOAD",
      "path": "2"
    },
    "3970": {
      "fn": "ERC20._mint",
      "offset": [8626, 8648],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF8B"
    },
    "3973": {
      "fn": "ERC20._mint",
      "offset": [8626, 8648],
      "op": "SWAP2",
      "path": "2"
    },
    "3974": {
      "fn": "ERC20._mint",
      "offset": [8626, 8648],
      "op": "SWAP1",
      "path": "2"
    },
    "3975": {
      "fn": "ERC20._mint",
      "offset": [8626, 8648],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1453"
    },
    "3978": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [8626, 8648],
      "op": "JUMP",
      "path": "2"
    },
    "3979": {
      "fn": "ERC20._mint",
      "offset": [8626, 8648],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3980": {
      "fn": "ERC20._mint",
      "offset": [8626, 8648],
      "op": "SWAP1",
      "path": "2"
    },
    "3981": {
      "fn": "ERC20._mint",
      "offset": [8626, 8648],
      "op": "SWAP2",
      "path": "2"
    },
    "3982": {
      "fn": "ERC20._mint",
      "offset": [8626, 8648],
      "op": "SSTORE",
      "path": "2"
    },
    "3983": {
      "op": "POP"
    },
    "3984": {
      "op": "POP"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3991": {
      "op": "SHL"
    },
    "3992": {
      "op": "SUB"
    },
    "3993": {
      "fn": "ERC20._mint",
      "offset": [8658, 8676],
      "op": "DUP3",
      "path": "2",
      "statement": 54
    },
    "3994": {
      "fn": "ERC20._mint",
      "offset": [8658, 8676],
      "op": "AND",
      "path": "2"
    },
    "3995": {
      "fn": "ERC20._mint",
      "offset": [8658, 8676],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3997": {
      "fn": "ERC20._mint",
      "offset": [8658, 8676],
      "op": "SWAP1",
      "path": "2"
    },
    "3998": {
      "fn": "ERC20._mint",
      "offset": [8658, 8676],
      "op": "DUP2",
      "path": "2"
    },
    "3999": {
      "fn": "ERC20._mint",
      "offset": [8658, 8676],
      "op": "MSTORE",
      "path": "2"
    },
    "4000": {
      "fn": "ERC20._mint",
      "offset": [8658, 8667],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4002": {
      "fn": "ERC20._mint",
      "offset": [8658, 8676],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4004": {
      "fn": "ERC20._mint",
      "offset": [8658, 8676],
      "op": "MSTORE",
      "path": "2"
    },
    "4005": {
      "fn": "ERC20._mint",
      "offset": [8658, 8676],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4007": {
      "fn": "ERC20._mint",
      "offset": [8658, 8676],
      "op": "DUP2",
      "path": "2"
    },
    "4008": {
      "fn": "ERC20._mint",
      "offset": [8658, 8676],
      "op": "KECCAK256",
      "path": "2"
    },
    "4009": {
      "fn": "ERC20._mint",
      "offset": [8658, 8686],
      "op": "DUP1",
      "path": "2"
    },
    "4010": {
      "fn": "ERC20._mint",
      "offset": [8658, 8686],
      "op": "SLOAD",
      "path": "2"
    },
    "4011": {
      "fn": "ERC20._mint",
      "offset": [8680, 8686],
      "op": "DUP4",
      "path": "2"
    },
    "4012": {
      "fn": "ERC20._mint",
      "offset": [8680, 8686],
      "op": "SWAP3",
      "path": "2"
    },
    "4013": {
      "fn": "ERC20._mint",
      "offset": [8658, 8676],
      "op": "SWAP1",
      "path": "2"
    },
    "4014": {
      "fn": "ERC20._mint",
      "offset": [8658, 8686],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFB8"
    },
    "4017": {
      "fn": "ERC20._mint",
      "offset": [8658, 8686],
      "op": "SWAP1",
      "path": "2"
    },
    "4018": {
      "fn": "ERC20._mint",
      "offset": [8680, 8686],
      "op": "DUP5",
      "path": "2"
    },
    "4019": {
      "fn": "ERC20._mint",
      "offset": [8680, 8686],
      "op": "SWAP1",
      "path": "2"
    },
    "4020": {
      "fn": "ERC20._mint",
      "offset": [8658, 8686],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1453"
    },
    "4023": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [8658, 8686],
      "op": "JUMP",
      "path": "2"
    },
    "4024": {
      "fn": "ERC20._mint",
      "offset": [8658, 8686],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4025": {
      "fn": "ERC20._mint",
      "offset": [8658, 8686],
      "op": "SWAP1",
      "path": "2"
    },
    "4026": {
      "fn": "ERC20._mint",
      "offset": [8658, 8686],
      "op": "SWAP2",
      "path": "2"
    },
    "4027": {
      "fn": "ERC20._mint",
      "offset": [8658, 8686],
      "op": "SSTORE",
      "path": "2"
    },
    "4028": {
      "op": "POP"
    },
    "4029": {
      "op": "POP"
    },
    "4030": {
      "fn": "ERC20._mint",
      "offset": [8701, 8738],
      "op": "PUSH1",
      "path": "2",
      "statement": 55,
      "value": "0x40"
    },
    "4032": {
      "fn": "ERC20._mint",
      "offset": [8701, 8738],
      "op": "MLOAD",
      "path": "2"
    },
    "4033": {
      "op": "DUP2"
    },
    "4034": {
      "op": "DUP2"
    },
    "4035": {
      "op": "MSTORE"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4042": {
      "op": "SHL"
    },
    "4043": {
      "op": "SUB"
    },
    "4044": {
      "fn": "ERC20._mint",
      "offset": [8701, 8738],
      "op": "DUP4",
      "path": "2"
    },
    "4045": {
      "fn": "ERC20._mint",
      "offset": [8701, 8738],
      "op": "AND",
      "path": "2"
    },
    "4046": {
      "fn": "ERC20._mint",
      "offset": [8701, 8738],
      "op": "SWAP1",
      "path": "2"
    },
    "4047": {
      "fn": "ERC20._mint",
      "offset": [8718, 8719],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4049": {
      "fn": "ERC20._mint",
      "offset": [8718, 8719],
      "op": "SWAP1",
      "path": "2"
    },
    "4050": {
      "fn": "ERC20._mint",
      "offset": [8701, 8738],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4083": {
      "fn": "ERC20._mint",
      "offset": [8701, 8738],
      "op": "SWAP1",
      "path": "2"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4086": {
      "op": "ADD"
    },
    "4087": {
      "fn": "ERC20._mint",
      "offset": [8701, 8738],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4089": {
      "fn": "ERC20._mint",
      "offset": [8701, 8738],
      "op": "MLOAD",
      "path": "2"
    },
    "4090": {
      "fn": "ERC20._mint",
      "offset": [8701, 8738],
      "op": "DUP1",
      "path": "2"
    },
    "4091": {
      "fn": "ERC20._mint",
      "offset": [8701, 8738],
      "op": "SWAP2",
      "path": "2"
    },
    "4092": {
      "fn": "ERC20._mint",
      "offset": [8701, 8738],
      "op": "SUB",
      "path": "2"
    },
    "4093": {
      "fn": "ERC20._mint",
      "offset": [8701, 8738],
      "op": "SWAP1",
      "path": "2"
    },
    "4094": {
      "fn": "ERC20._mint",
      "offset": [8701, 8738],
      "op": "LOG3",
      "path": "2"
    },
    "4095": {
      "fn": "ERC20._mint",
      "offset": [8415, 8804],
      "op": "POP",
      "path": "2"
    },
    "4096": {
      "fn": "ERC20._mint",
      "offset": [8415, 8804],
      "op": "POP",
      "path": "2"
    },
    "4097": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [8415, 8804],
      "op": "JUMP",
      "path": "2"
    },
    "4098": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [912, 1153],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4099": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "PUSH1",
      "path": "5",
      "statement": 56,
      "value": "0x40"
    },
    "4101": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "MLOAD",
      "path": "5"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4108": {
      "op": "SHL"
    },
    "4109": {
      "op": "SUB"
    },
    "4110": {
      "op": "DUP1"
    },
    "4111": {
      "op": "DUP6"
    },
    "4112": {
      "op": "AND"
    },
    "4113": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "4115": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "DUP4",
      "path": "5"
    },
    "4116": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "ADD",
      "path": "5"
    },
    "4117": {
      "op": "MSTORE"
    },
    "4118": {
      "op": "DUP4"
    },
    "4119": {
      "op": "AND"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4122": {
      "op": "DUP3"
    },
    "4123": {
      "op": "ADD"
    },
    "4124": {
      "op": "MSTORE"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4127": {
      "op": "DUP2"
    },
    "4128": {
      "op": "ADD"
    },
    "4129": {
      "op": "DUP3"
    },
    "4130": {
      "op": "SWAP1"
    },
    "4131": {
      "op": "MSTORE"
    },
    "4132": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1050, 1146],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC97"
    },
    "4135": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1050, 1146],
      "op": "SWAP1",
      "path": "5"
    },
    "4136": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1070, 1075],
      "op": "DUP6",
      "path": "5"
    },
    "4137": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1070, 1075],
      "op": "SWAP1",
      "path": "5"
    },
    "4138": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4145": {
      "op": "SHL"
    },
    "4146": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1100, 1127],
      "op": "SWAP1",
      "path": "5"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4149": {
      "op": "ADD"
    },
    "4150": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE97"
    },
    "4153": {
      "op": "JUMP"
    },
    "4154": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3207, 3913],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4155": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3626, 3649],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4157": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH2",
      "path": "5",
      "value": "0x108F"
    },
    "4160": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3680, 3684],
      "op": "DUP3",
      "path": "5"
    },
    "4161": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4163": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "MLOAD",
      "path": "5"
    },
    "4164": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "DUP1",
      "path": "5"
    },
    "4165": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4167": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "ADD",
      "path": "5"
    },
    "4168": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4170": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "MSTORE",
      "path": "5"
    },
    "4171": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "DUP1",
      "path": "5"
    },
    "4172": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4174": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "DUP2",
      "path": "5"
    },
    "4175": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "MSTORE",
      "path": "5"
    },
    "4176": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4178": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "ADD",
      "path": "5"
    },
    "4179": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH32",
      "path": "5",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "4212": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "DUP2",
      "path": "5"
    },
    "4213": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "MSTORE",
      "path": "5"
    },
    "4214": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "POP",
      "path": "5"
    },
    "4215": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3660, 3665],
      "op": "DUP6",
      "path": "5"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4222": {
      "op": "SHL"
    },
    "4223": {
      "op": "SUB"
    },
    "4224": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3679],
      "op": "AND",
      "path": "5"
    },
    "4225": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3679],
      "op": "PUSH2",
      "path": "5",
      "value": "0x110C"
    },
    "4228": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3679],
      "op": "SWAP1",
      "path": "5"
    },
    "4229": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "SWAP3",
      "path": "5"
    },
    "4230": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "SWAP2",
      "path": "5"
    },
    "4231": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "SWAP1",
      "path": "5"
    },
    "4232": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "4237": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "AND",
      "path": "5"
    },
    "4238": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [3652, 3721],
      "op": "JUMP",
      "path": "5"
    },
    "4239": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4240": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3735, 3752],
      "op": "DUP1",
      "path": "5"
    },
    "4241": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3735, 3752],
      "op": "MLOAD",
      "path": "5"
    },
    "4242": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3626, 3721],
      "op": "SWAP1",
      "path": "5"
    },
    "4243": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3626, 3721],
      "op": "SWAP2",
      "path": "5"
    },
    "4244": {
      "op": "POP"
    },
    "4245": {
      "branch": 84,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3735, 3756],
      "op": "ISZERO",
      "path": "5"
    },
    "4246": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3731, 3907],
      "op": "PUSH2",
      "path": "5",
      "value": "0xECE"
    },
    "4249": {
      "branch": 84,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3731, 3907],
      "op": "JUMPI",
      "path": "5"
    },
    "4250": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3830, 3840],
      "op": "DUP1",
      "path": "5",
      "statement": 57
    },
    "4251": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "DUP1",
      "path": "5"
    },
    "4252": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4254": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "ADD",
      "path": "5"
    },
    "4255": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "SWAP1",
      "path": "5"
    },
    "4256": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "MLOAD",
      "path": "5"
    },
    "4257": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "DUP2",
      "path": "5"
    },
    "4258": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "ADD",
      "path": "5"
    },
    "4259": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "SWAP1",
      "path": "5"
    },
    "4260": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AD"
    },
    "4263": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "SWAP2",
      "path": "5"
    },
    "4264": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "SWAP1",
      "path": "5"
    },
    "4265": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1354"
    },
    "4268": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [3819, 3849],
      "op": "JUMP",
      "path": "5"
    },
    "4269": {
      "branch": 85,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4270": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "PUSH2",
      "path": "5",
      "value": "0xECE"
    },
    "4273": {
      "branch": 85,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "JUMPI",
      "path": "5"
    },
    "4274": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4276": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "MLOAD",
      "path": "5"
    },
    "4277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4283": {
      "op": "SHL"
    },
    "4284": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "DUP2",
      "path": "5"
    },
    "4285": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "MSTORE",
      "path": "5"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4288": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4290": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "DUP3",
      "path": "5"
    },
    "4291": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "ADD",
      "path": "5"
    },
    "4292": {
      "op": "MSTORE"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4297": {
      "op": "DUP3"
    },
    "4298": {
      "op": "ADD"
    },
    "4299": {
      "op": "MSTORE"
    },
    "4300": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4335": {
      "op": "DUP3"
    },
    "4336": {
      "op": "ADD"
    },
    "4337": {
      "op": "MSTORE"
    },
    "4338": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "4351": {
      "op": "SHL"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4354": {
      "op": "DUP3"
    },
    "4355": {
      "op": "ADD"
    },
    "4356": {
      "op": "MSTORE"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4359": {
      "op": "ADD"
    },
    "4360": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4BD"
    },
    "4363": {
      "op": "JUMP"
    },
    "4364": {
      "fn": "Address.functionCall",
      "offset": [3861, 4084],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4365": {
      "fn": "Address.functionCall",
      "offset": [3994, 4006],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "4367": {
      "fn": "Address.functionCall",
      "offset": [4025, 4077],
      "op": "PUSH2",
      "path": "6",
      "statement": 58,
      "value": "0x111B"
    },
    "4370": {
      "fn": "Address.functionCall",
      "offset": [4047, 4053],
      "op": "DUP5",
      "path": "6"
    },
    "4371": {
      "fn": "Address.functionCall",
      "offset": [4055, 4059],
      "op": "DUP5",
      "path": "6"
    },
    "4372": {
      "fn": "Address.functionCall",
      "offset": [4061, 4062],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4374": {
      "fn": "Address.functionCall",
      "offset": [4064, 4076],
      "op": "DUP6",
      "path": "6"
    },
    "4375": {
      "fn": "Address.functionCall",
      "offset": [4025, 4046],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1123"
    },
    "4378": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [4025, 4077],
      "op": "JUMP",
      "path": "6"
    },
    "4379": {
      "fn": "Address.functionCall",
      "offset": [4025, 4077],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4380": {
      "fn": "Address.functionCall",
      "offset": [4018, 4077],
      "op": "SWAP5",
      "path": "6"
    },
    "4381": {
      "fn": "Address.functionCall",
      "offset": [3861, 4084],
      "op": "SWAP4",
      "path": "6"
    },
    "4382": {
      "op": "POP"
    },
    "4383": {
      "op": "POP"
    },
    "4384": {
      "op": "POP"
    },
    "4385": {
      "op": "POP"
    },
    "4386": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [3861, 4084],
      "op": "JUMP",
      "path": "6"
    },
    "4387": {
      "fn": "Address.functionCallWithValue",
      "offset": [4948, 5447],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4388": {
      "fn": "Address.functionCallWithValue",
      "offset": [5113, 5125],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "4390": {
      "fn": "Address.functionCallWithValue",
      "offset": [5170, 5175],
      "op": "DUP3",
      "path": "6",
      "statement": 59
    },
    "4391": {
      "fn": "Address.functionCallWithValue",
      "offset": [5145, 5166],
      "op": "SELFBALANCE",
      "path": "6"
    },
    "4392": {
      "fn": "Address.functionCallWithValue",
      "offset": [5145, 5175],
      "op": "LT",
      "path": "6"
    },
    "4393": {
      "branch": 71,
      "fn": "Address.functionCallWithValue",
      "offset": [5145, 5175],
      "op": "ISZERO",
      "path": "6"
    },
    "4394": {
      "fn": "Address.functionCallWithValue",
      "offset": [5137, 5218],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1184"
    },
    "4397": {
      "branch": 71,
      "fn": "Address.functionCallWithValue",
      "offset": [5137, 5218],
      "op": "JUMPI",
      "path": "6"
    },
    "4398": {
      "fn": "Address.functionCallWithValue",
      "offset": [5137, 5218],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4400": {
      "fn": "Address.functionCallWithValue",
      "offset": [5137, 5218],
      "op": "MLOAD",
      "path": "6"
    },
    "4401": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4407": {
      "op": "SHL"
    },
    "4408": {
      "fn": "Address.functionCallWithValue",
      "offset": [5137, 5218],
      "op": "DUP2",
      "path": "6"
    },
    "4409": {
      "fn": "Address.functionCallWithValue",
      "offset": [5137, 5218],
      "op": "MSTORE",
      "path": "6"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4412": {
      "fn": "Address.functionCallWithValue",
      "offset": [5137, 5218],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4414": {
      "fn": "Address.functionCallWithValue",
      "offset": [5137, 5218],
      "op": "DUP3",
      "path": "6"
    },
    "4415": {
      "fn": "Address.functionCallWithValue",
      "offset": [5137, 5218],
      "op": "ADD",
      "path": "6"
    },
    "4416": {
      "op": "MSTORE"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4421": {
      "op": "DUP3"
    },
    "4422": {
      "op": "ADD"
    },
    "4423": {
      "op": "MSTORE"
    },
    "4424": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4459": {
      "op": "DUP3"
    },
    "4460": {
      "op": "ADD"
    },
    "4461": {
      "op": "MSTORE"
    },
    "4462": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "4471": {
      "op": "SHL"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4474": {
      "op": "DUP3"
    },
    "4475": {
      "op": "ADD"
    },
    "4476": {
      "op": "MSTORE"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4479": {
      "op": "ADD"
    },
    "4480": {
      "fn": "Address.functionCallWithValue",
      "offset": [5137, 5218],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4BD"
    },
    "4483": {
      "op": "JUMP"
    },
    "4484": {
      "fn": "Address.functionCallWithValue",
      "offset": [5137, 5218],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4491": {
      "op": "SHL"
    },
    "4492": {
      "op": "SUB"
    },
    "4493": {
      "fn": "Address.isContract",
      "offset": [1465, 1484],
      "op": "DUP6",
      "path": "6",
      "statement": 60
    },
    "4494": {
      "fn": "Address.isContract",
      "offset": [1465, 1484],
      "op": "AND",
      "path": "6"
    },
    "4495": {
      "fn": "Address.isContract",
      "offset": [1465, 1484],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "4496": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "PUSH2",
      "path": "6",
      "statement": 61,
      "value": "0x11DB"
    },
    "4499": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "JUMPI",
      "path": "6"
    },
    "4500": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4502": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "MLOAD",
      "path": "6"
    },
    "4503": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4509": {
      "op": "SHL"
    },
    "4510": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "DUP2",
      "path": "6"
    },
    "4511": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "MSTORE",
      "path": "6"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4514": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4516": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "DUP3",
      "path": "6"
    },
    "4517": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "ADD",
      "path": "6"
    },
    "4518": {
      "op": "MSTORE"
    },
    "4519": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4523": {
      "op": "DUP3"
    },
    "4524": {
      "op": "ADD"
    },
    "4525": {
      "op": "MSTORE"
    },
    "4526": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4561": {
      "op": "DUP3"
    },
    "4562": {
      "op": "ADD"
    },
    "4563": {
      "op": "MSTORE"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4566": {
      "op": "ADD"
    },
    "4567": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4BD"
    },
    "4570": {
      "op": "JUMP"
    },
    "4571": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4572": {
      "fn": "Address.functionCallWithValue",
      "offset": [5300, 5312],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4574": {
      "fn": "Address.functionCallWithValue",
      "offset": [5314, 5337],
      "op": "DUP1",
      "path": "6"
    },
    "4575": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5347],
      "op": "DUP7",
      "path": "6"
    },
    "4576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4582": {
      "op": "SHL"
    },
    "4583": {
      "op": "SUB"
    },
    "4584": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5352],
      "op": "AND",
      "path": "6"
    },
    "4585": {
      "fn": "Address.functionCallWithValue",
      "offset": [5360, 5365],
      "op": "DUP6",
      "path": "6"
    },
    "4586": {
      "fn": "Address.functionCallWithValue",
      "offset": [5367, 5371],
      "op": "DUP8",
      "path": "6"
    },
    "4587": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4589": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "MLOAD",
      "path": "6"
    },
    "4590": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11F7"
    },
    "4593": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "SWAP2",
      "path": "6"
    },
    "4594": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "SWAP1",
      "path": "6"
    },
    "4595": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13CF"
    },
    "4598": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [5341, 5372],
      "op": "JUMP",
      "path": "6"
    },
    "4599": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4600": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4602": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4604": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "MLOAD",
      "path": "6"
    },
    "4605": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP1",
      "path": "6"
    },
    "4606": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP4",
      "path": "6"
    },
    "4607": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "SUB",
      "path": "6"
    },
    "4608": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP2",
      "path": "6"
    },
    "4609": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP6",
      "path": "6"
    },
    "4610": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP8",
      "path": "6"
    },
    "4611": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "GAS",
      "path": "6"
    },
    "4612": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "CALL",
      "path": "6"
    },
    "4613": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "SWAP3",
      "path": "6"
    },
    "4614": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "POP",
      "path": "6"
    },
    "4615": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "POP",
      "path": "6"
    },
    "4616": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "POP",
      "path": "6"
    },
    "4617": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4618": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP1",
      "path": "6"
    },
    "4619": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4621": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP2",
      "path": "6"
    },
    "4622": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "EQ",
      "path": "6"
    },
    "4623": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1234"
    },
    "4626": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "JUMPI",
      "path": "6"
    },
    "4627": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4629": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "MLOAD",
      "path": "6"
    },
    "4630": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "SWAP2",
      "path": "6"
    },
    "4631": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "POP",
      "path": "6"
    },
    "4632": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4634": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "NOT",
      "path": "6"
    },
    "4635": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3F"
    },
    "4637": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4638": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "ADD",
      "path": "6"
    },
    "4639": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "AND",
      "path": "6"
    },
    "4640": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP3",
      "path": "6"
    },
    "4641": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "ADD",
      "path": "6"
    },
    "4642": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4644": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "MSTORE",
      "path": "6"
    },
    "4645": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4646": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP3",
      "path": "6"
    },
    "4647": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "MSTORE",
      "path": "6"
    },
    "4648": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4649": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4651": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4653": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP5",
      "path": "6"
    },
    "4654": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "ADD",
      "path": "6"
    },
    "4655": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "4656": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1239"
    },
    "4659": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "JUMP",
      "path": "6"
    },
    "4660": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4661": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "4663": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "SWAP2",
      "path": "6"
    },
    "4664": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "POP",
      "path": "6"
    },
    "4665": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4666": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "POP",
      "path": "6"
    },
    "4667": {
      "fn": "Address.functionCallWithValue",
      "offset": [5299, 5372],
      "op": "SWAP2",
      "path": "6"
    },
    "4668": {
      "fn": "Address.functionCallWithValue",
      "offset": [5299, 5372],
      "op": "POP",
      "path": "6"
    },
    "4669": {
      "fn": "Address.functionCallWithValue",
      "offset": [5299, 5372],
      "op": "SWAP2",
      "path": "6"
    },
    "4670": {
      "fn": "Address.functionCallWithValue",
      "offset": [5299, 5372],
      "op": "POP",
      "path": "6"
    },
    "4671": {
      "fn": "Address.functionCallWithValue",
      "offset": [5389, 5440],
      "op": "PUSH2",
      "path": "6",
      "statement": 62,
      "value": "0x1249"
    },
    "4674": {
      "fn": "Address.functionCallWithValue",
      "offset": [5406, 5413],
      "op": "DUP3",
      "path": "6"
    },
    "4675": {
      "fn": "Address.functionCallWithValue",
      "offset": [5415, 5425],
      "op": "DUP3",
      "path": "6"
    },
    "4676": {
      "fn": "Address.functionCallWithValue",
      "offset": [5427, 5439],
      "op": "DUP7",
      "path": "6"
    },
    "4677": {
      "fn": "Address.functionCallWithValue",
      "offset": [5389, 5405],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1254"
    },
    "4680": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [5389, 5440],
      "op": "JUMP",
      "path": "6"
    },
    "4681": {
      "fn": "Address.functionCallWithValue",
      "offset": [5389, 5440],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4682": {
      "fn": "Address.functionCallWithValue",
      "offset": [5382, 5440],
      "op": "SWAP8",
      "path": "6"
    },
    "4683": {
      "fn": "Address.functionCallWithValue",
      "offset": [4948, 5447],
      "op": "SWAP7",
      "path": "6"
    },
    "4684": {
      "op": "POP"
    },
    "4685": {
      "op": "POP"
    },
    "4686": {
      "op": "POP"
    },
    "4687": {
      "op": "POP"
    },
    "4688": {
      "op": "POP"
    },
    "4689": {
      "op": "POP"
    },
    "4690": {
      "op": "POP"
    },
    "4691": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [4948, 5447],
      "op": "JUMP",
      "path": "6"
    },
    "4692": {
      "fn": "Address.verifyCallResult",
      "offset": [7561, 8253],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4693": {
      "fn": "Address.verifyCallResult",
      "offset": [7707, 7719],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "4695": {
      "branch": 72,
      "fn": "Address.verifyCallResult",
      "offset": [7735, 7742],
      "op": "DUP4",
      "path": "6"
    },
    "4696": {
      "fn": "Address.verifyCallResult",
      "offset": [7731, 8247],
      "op": "ISZERO",
      "path": "6"
    },
    "4697": {
      "fn": "Address.verifyCallResult",
      "offset": [7731, 8247],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1263"
    },
    "4700": {
      "branch": 72,
      "fn": "Address.verifyCallResult",
      "offset": [7731, 8247],
      "op": "JUMPI",
      "path": "6"
    },
    "4701": {
      "op": "POP"
    },
    "4702": {
      "fn": "Address.verifyCallResult",
      "offset": [7765, 7775],
      "op": "DUP2",
      "path": "6",
      "statement": 63
    },
    "4703": {
      "fn": "Address.verifyCallResult",
      "offset": [7758, 7775],
      "op": "PUSH2",
      "path": "6",
      "value": "0x425"
    },
    "4706": {
      "fn": "Address.verifyCallResult",
      "offset": [7758, 7775],
      "op": "JUMP",
      "path": "6"
    },
    "4707": {
      "fn": "Address.verifyCallResult",
      "offset": [7731, 8247],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4708": {
      "fn": "Address.verifyCallResult",
      "offset": [7876, 7893],
      "op": "DUP3",
      "path": "6"
    },
    "4709": {
      "fn": "Address.verifyCallResult",
      "offset": [7876, 7893],
      "op": "MLOAD",
      "path": "6"
    },
    "4710": {
      "branch": 73,
      "fn": "Address.verifyCallResult",
      "offset": [7876, 7897],
      "op": "ISZERO",
      "path": "6"
    },
    "4711": {
      "fn": "Address.verifyCallResult",
      "offset": [7872, 8237],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1273"
    },
    "4714": {
      "branch": 73,
      "fn": "Address.verifyCallResult",
      "offset": [7872, 8237],
      "op": "JUMPI",
      "path": "6"
    },
    "4715": {
      "fn": "Address.verifyCallResult",
      "offset": [8070, 8080],
      "op": "DUP3",
      "path": "6"
    },
    "4716": {
      "fn": "Address.verifyCallResult",
      "offset": [8064, 8081],
      "op": "MLOAD",
      "path": "6"
    },
    "4717": {
      "fn": "Address.verifyCallResult",
      "offset": [8130, 8145],
      "op": "DUP1",
      "path": "6"
    },
    "4718": {
      "fn": "Address.verifyCallResult",
      "offset": [8117, 8127],
      "op": "DUP5",
      "path": "6"
    },
    "4719": {
      "fn": "Address.verifyCallResult",
      "offset": [8113, 8115],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4721": {
      "fn": "Address.verifyCallResult",
      "offset": [8109, 8128],
      "op": "ADD",
      "path": "6"
    },
    "4722": {
      "fn": "Address.verifyCallResult",
      "offset": [8102, 8146],
      "op": "REVERT",
      "path": "6"
    },
    "4723": {
      "fn": "Address.verifyCallResult",
      "offset": [8019, 8164],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4724": {
      "fn": "Address.verifyCallResult",
      "offset": [8209, 8221],
      "op": "DUP2",
      "path": "6",
      "statement": 64
    },
    "4725": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4727": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "MLOAD",
      "path": "6"
    },
    "4728": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4734": {
      "op": "SHL"
    },
    "4735": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "DUP2",
      "path": "6"
    },
    "4736": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "MSTORE",
      "path": "6"
    },
    "4737": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4739": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "ADD",
      "path": "6"
    },
    "4740": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4BD"
    },
    "4743": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "SWAP2",
      "path": "6"
    },
    "4744": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "SWAP1",
      "path": "6"
    },
    "4745": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13EB"
    },
    "4748": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [8202, 8222],
      "op": "JUMP",
      "path": "6"
    },
    "4749": {
      "op": "JUMPDEST"
    },
    "4750": {
      "op": "DUP1"
    },
    "4751": {
      "op": "CALLDATALOAD"
    },
    "4752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4758": {
      "op": "SHL"
    },
    "4759": {
      "op": "SUB"
    },
    "4760": {
      "op": "DUP2"
    },
    "4761": {
      "op": "AND"
    },
    "4762": {
      "op": "DUP2"
    },
    "4763": {
      "op": "EQ"
    },
    "4764": {
      "op": "PUSH2",
      "value": "0x61F"
    },
    "4767": {
      "op": "JUMPI"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4770": {
      "op": "DUP1"
    },
    "4771": {
      "op": "REVERT"
    },
    "4772": {
      "op": "JUMPDEST"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4777": {
      "op": "DUP3"
    },
    "4778": {
      "op": "DUP5"
    },
    "4779": {
      "op": "SUB"
    },
    "4780": {
      "op": "SLT"
    },
    "4781": {
      "op": "ISZERO"
    },
    "4782": {
      "op": "PUSH2",
      "value": "0x12B5"
    },
    "4785": {
      "op": "JUMPI"
    },
    "4786": {
      "op": "DUP1"
    },
    "4787": {
      "op": "DUP2"
    },
    "4788": {
      "op": "REVERT"
    },
    "4789": {
      "op": "JUMPDEST"
    },
    "4790": {
      "op": "PUSH2",
      "value": "0x425"
    },
    "4793": {
      "op": "DUP3"
    },
    "4794": {
      "op": "PUSH2",
      "value": "0x128D"
    },
    "4797": {
      "jump": "i",
      "op": "JUMP"
    },
    "4798": {
      "op": "JUMPDEST"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4801": {
      "op": "DUP1"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4804": {
      "op": "DUP4"
    },
    "4805": {
      "op": "DUP6"
    },
    "4806": {
      "op": "SUB"
    },
    "4807": {
      "op": "SLT"
    },
    "4808": {
      "op": "ISZERO"
    },
    "4809": {
      "op": "PUSH2",
      "value": "0x12D0"
    },
    "4812": {
      "op": "JUMPI"
    },
    "4813": {
      "op": "DUP1"
    },
    "4814": {
      "op": "DUP2"
    },
    "4815": {
      "op": "REVERT"
    },
    "4816": {
      "op": "JUMPDEST"
    },
    "4817": {
      "op": "PUSH2",
      "value": "0x12D9"
    },
    "4820": {
      "op": "DUP4"
    },
    "4821": {
      "op": "PUSH2",
      "value": "0x128D"
    },
    "4824": {
      "jump": "i",
      "op": "JUMP"
    },
    "4825": {
      "op": "JUMPDEST"
    },
    "4826": {
      "op": "SWAP2"
    },
    "4827": {
      "op": "POP"
    },
    "4828": {
      "op": "PUSH2",
      "value": "0x12E7"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4833": {
      "op": "DUP5"
    },
    "4834": {
      "op": "ADD"
    },
    "4835": {
      "op": "PUSH2",
      "value": "0x128D"
    },
    "4838": {
      "jump": "i",
      "op": "JUMP"
    },
    "4839": {
      "op": "JUMPDEST"
    },
    "4840": {
      "op": "SWAP1"
    },
    "4841": {
      "op": "POP"
    },
    "4842": {
      "op": "SWAP3"
    },
    "4843": {
      "op": "POP"
    },
    "4844": {
      "op": "SWAP3"
    },
    "4845": {
      "op": "SWAP1"
    },
    "4846": {
      "op": "POP"
    },
    "4847": {
      "jump": "o",
      "op": "JUMP"
    },
    "4848": {
      "op": "JUMPDEST"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4851": {
      "op": "DUP1"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4856": {
      "op": "DUP5"
    },
    "4857": {
      "op": "DUP7"
    },
    "4858": {
      "op": "SUB"
    },
    "4859": {
      "op": "SLT"
    },
    "4860": {
      "op": "ISZERO"
    },
    "4861": {
      "op": "PUSH2",
      "value": "0x1304"
    },
    "4864": {
      "op": "JUMPI"
    },
    "4865": {
      "op": "DUP1"
    },
    "4866": {
      "op": "DUP2"
    },
    "4867": {
      "op": "REVERT"
    },
    "4868": {
      "op": "JUMPDEST"
    },
    "4869": {
      "op": "PUSH2",
      "value": "0x130D"
    },
    "4872": {
      "op": "DUP5"
    },
    "4873": {
      "op": "PUSH2",
      "value": "0x128D"
    },
    "4876": {
      "jump": "i",
      "op": "JUMP"
    },
    "4877": {
      "op": "JUMPDEST"
    },
    "4878": {
      "op": "SWAP3"
    },
    "4879": {
      "op": "POP"
    },
    "4880": {
      "op": "PUSH2",
      "value": "0x131B"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4885": {
      "op": "DUP6"
    },
    "4886": {
      "op": "ADD"
    },
    "4887": {
      "op": "PUSH2",
      "value": "0x128D"
    },
    "4890": {
      "jump": "i",
      "op": "JUMP"
    },
    "4891": {
      "op": "JUMPDEST"
    },
    "4892": {
      "op": "SWAP2"
    },
    "4893": {
      "op": "POP"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4896": {
      "op": "DUP5"
    },
    "4897": {
      "op": "ADD"
    },
    "4898": {
      "op": "CALLDATALOAD"
    },
    "4899": {
      "op": "SWAP1"
    },
    "4900": {
      "op": "POP"
    },
    "4901": {
      "op": "SWAP3"
    },
    "4902": {
      "op": "POP"
    },
    "4903": {
      "op": "SWAP3"
    },
    "4904": {
      "op": "POP"
    },
    "4905": {
      "op": "SWAP3"
    },
    "4906": {
      "jump": "o",
      "op": "JUMP"
    },
    "4907": {
      "op": "JUMPDEST"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4910": {
      "op": "DUP1"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4913": {
      "op": "DUP4"
    },
    "4914": {
      "op": "DUP6"
    },
    "4915": {
      "op": "SUB"
    },
    "4916": {
      "op": "SLT"
    },
    "4917": {
      "op": "ISZERO"
    },
    "4918": {
      "op": "PUSH2",
      "value": "0x133D"
    },
    "4921": {
      "op": "JUMPI"
    },
    "4922": {
      "op": "DUP2"
    },
    "4923": {
      "op": "DUP3"
    },
    "4924": {
      "op": "REVERT"
    },
    "4925": {
      "op": "JUMPDEST"
    },
    "4926": {
      "op": "PUSH2",
      "value": "0x1346"
    },
    "4929": {
      "op": "DUP4"
    },
    "4930": {
      "op": "PUSH2",
      "value": "0x128D"
    },
    "4933": {
      "jump": "i",
      "op": "JUMP"
    },
    "4934": {
      "op": "JUMPDEST"
    },
    "4935": {
      "op": "SWAP5"
    },
    "4936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4938": {
      "op": "SWAP4"
    },
    "4939": {
      "op": "SWAP1"
    },
    "4940": {
      "op": "SWAP4"
    },
    "4941": {
      "op": "ADD"
    },
    "4942": {
      "op": "CALLDATALOAD"
    },
    "4943": {
      "op": "SWAP4"
    },
    "4944": {
      "op": "POP"
    },
    "4945": {
      "op": "POP"
    },
    "4946": {
      "op": "POP"
    },
    "4947": {
      "jump": "o",
      "op": "JUMP"
    },
    "4948": {
      "op": "JUMPDEST"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4953": {
      "op": "DUP3"
    },
    "4954": {
      "op": "DUP5"
    },
    "4955": {
      "op": "SUB"
    },
    "4956": {
      "op": "SLT"
    },
    "4957": {
      "op": "ISZERO"
    },
    "4958": {
      "op": "PUSH2",
      "value": "0x1365"
    },
    "4961": {
      "op": "JUMPI"
    },
    "4962": {
      "op": "DUP1"
    },
    "4963": {
      "op": "DUP2"
    },
    "4964": {
      "op": "REVERT"
    },
    "4965": {
      "op": "JUMPDEST"
    },
    "4966": {
      "op": "DUP2"
    },
    "4967": {
      "op": "MLOAD"
    },
    "4968": {
      "op": "DUP1"
    },
    "4969": {
      "op": "ISZERO"
    },
    "4970": {
      "op": "ISZERO"
    },
    "4971": {
      "op": "DUP2"
    },
    "4972": {
      "op": "EQ"
    },
    "4973": {
      "op": "PUSH2",
      "value": "0x425"
    },
    "4976": {
      "op": "JUMPI"
    },
    "4977": {
      "op": "DUP2"
    },
    "4978": {
      "op": "DUP3"
    },
    "4979": {
      "op": "REVERT"
    },
    "4980": {
      "op": "JUMPDEST"
    },
    "4981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4985": {
      "op": "DUP3"
    },
    "4986": {
      "op": "DUP5"
    },
    "4987": {
      "op": "SUB"
    },
    "4988": {
      "op": "SLT"
    },
    "4989": {
      "op": "ISZERO"
    },
    "4990": {
      "op": "PUSH2",
      "value": "0x1385"
    },
    "4993": {
      "op": "JUMPI"
    },
    "4994": {
      "op": "DUP1"
    },
    "4995": {
      "op": "DUP2"
    },
    "4996": {
      "op": "REVERT"
    },
    "4997": {
      "op": "JUMPDEST"
    },
    "4998": {
      "op": "POP"
    },
    "4999": {
      "op": "CALLDATALOAD"
    },
    "5000": {
      "op": "SWAP2"
    },
    "5001": {
      "op": "SWAP1"
    },
    "5002": {
      "op": "POP"
    },
    "5003": {
      "jump": "o",
      "op": "JUMP"
    },
    "5004": {
      "op": "JUMPDEST"
    },
    "5005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5007": {
      "op": "DUP1"
    },
    "5008": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5010": {
      "op": "DUP4"
    },
    "5011": {
      "op": "DUP6"
    },
    "5012": {
      "op": "SUB"
    },
    "5013": {
      "op": "SLT"
    },
    "5014": {
      "op": "ISZERO"
    },
    "5015": {
      "op": "PUSH2",
      "value": "0x139E"
    },
    "5018": {
      "op": "JUMPI"
    },
    "5019": {
      "op": "DUP2"
    },
    "5020": {
      "op": "DUP3"
    },
    "5021": {
      "op": "REVERT"
    },
    "5022": {
      "op": "JUMPDEST"
    },
    "5023": {
      "op": "DUP3"
    },
    "5024": {
      "op": "CALLDATALOAD"
    },
    "5025": {
      "op": "SWAP2"
    },
    "5026": {
      "op": "POP"
    },
    "5027": {
      "op": "PUSH2",
      "value": "0x12E7"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5032": {
      "op": "DUP5"
    },
    "5033": {
      "op": "ADD"
    },
    "5034": {
      "op": "PUSH2",
      "value": "0x128D"
    },
    "5037": {
      "jump": "i",
      "op": "JUMP"
    },
    "5038": {
      "op": "JUMPDEST"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5041": {
      "op": "DUP1"
    },
    "5042": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5044": {
      "op": "DUP4"
    },
    "5045": {
      "op": "DUP6"
    },
    "5046": {
      "op": "SUB"
    },
    "5047": {
      "op": "SLT"
    },
    "5048": {
      "op": "ISZERO"
    },
    "5049": {
      "op": "PUSH2",
      "value": "0x13C0"
    },
    "5052": {
      "op": "JUMPI"
    },
    "5053": {
      "op": "DUP2"
    },
    "5054": {
      "op": "DUP3"
    },
    "5055": {
      "op": "REVERT"
    },
    "5056": {
      "op": "JUMPDEST"
    },
    "5057": {
      "op": "POP"
    },
    "5058": {
      "op": "POP"
    },
    "5059": {
      "op": "DUP1"
    },
    "5060": {
      "op": "CALLDATALOAD"
    },
    "5061": {
      "op": "SWAP3"
    },
    "5062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5064": {
      "op": "SWAP1"
    },
    "5065": {
      "op": "SWAP2"
    },
    "5066": {
      "op": "ADD"
    },
    "5067": {
      "op": "CALLDATALOAD"
    },
    "5068": {
      "op": "SWAP2"
    },
    "5069": {
      "op": "POP"
    },
    "5070": {
      "jump": "o",
      "op": "JUMP"
    },
    "5071": {
      "op": "JUMPDEST"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5074": {
      "op": "DUP3"
    },
    "5075": {
      "op": "MLOAD"
    },
    "5076": {
      "op": "PUSH2",
      "value": "0x13E1"
    },
    "5079": {
      "op": "DUP2"
    },
    "5080": {
      "op": "DUP5"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5083": {
      "op": "DUP8"
    },
    "5084": {
      "op": "ADD"
    },
    "5085": {
      "op": "PUSH2",
      "value": "0x15D5"
    },
    "5088": {
      "jump": "i",
      "op": "JUMP"
    },
    "5089": {
      "op": "JUMPDEST"
    },
    "5090": {
      "op": "SWAP2"
    },
    "5091": {
      "op": "SWAP1"
    },
    "5092": {
      "op": "SWAP2"
    },
    "5093": {
      "op": "ADD"
    },
    "5094": {
      "op": "SWAP3"
    },
    "5095": {
      "op": "SWAP2"
    },
    "5096": {
      "op": "POP"
    },
    "5097": {
      "op": "POP"
    },
    "5098": {
      "jump": "o",
      "op": "JUMP"
    },
    "5099": {
      "op": "JUMPDEST"
    },
    "5100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5104": {
      "op": "DUP3"
    },
    "5105": {
      "op": "MSTORE"
    },
    "5106": {
      "op": "DUP3"
    },
    "5107": {
      "op": "MLOAD"
    },
    "5108": {
      "op": "DUP1"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5111": {
      "op": "DUP5"
    },
    "5112": {
      "op": "ADD"
    },
    "5113": {
      "op": "MSTORE"
    },
    "5114": {
      "op": "PUSH2",
      "value": "0x140A"
    },
    "5117": {
      "op": "DUP2"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5120": {
      "op": "DUP6"
    },
    "5121": {
      "op": "ADD"
    },
    "5122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5124": {
      "op": "DUP8"
    },
    "5125": {
      "op": "ADD"
    },
    "5126": {
      "op": "PUSH2",
      "value": "0x15D5"
    },
    "5129": {
      "jump": "i",
      "op": "JUMP"
    },
    "5130": {
      "op": "JUMPDEST"
    },
    "5131": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5133": {
      "op": "ADD"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5136": {
      "op": "NOT"
    },
    "5137": {
      "op": "AND"
    },
    "5138": {
      "op": "SWAP2"
    },
    "5139": {
      "op": "SWAP1"
    },
    "5140": {
      "op": "SWAP2"
    },
    "5141": {
      "op": "ADD"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5144": {
      "op": "ADD"
    },
    "5145": {
      "op": "SWAP3"
    },
    "5146": {
      "op": "SWAP2"
    },
    "5147": {
      "op": "POP"
    },
    "5148": {
      "op": "POP"
    },
    "5149": {
      "jump": "o",
      "op": "JUMP"
    },
    "5150": {
      "op": "JUMPDEST"
    },
    "5151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5153": {
      "op": "DUP1"
    },
    "5154": {
      "op": "DUP3"
    },
    "5155": {
      "op": "MSTORE"
    },
    "5156": {
      "op": "DUP2"
    },
    "5157": {
      "op": "DUP2"
    },
    "5158": {
      "op": "ADD"
    },
    "5159": {
      "op": "MSTORE"
    },
    "5160": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5195": {
      "op": "DUP3"
    },
    "5196": {
      "op": "ADD"
    },
    "5197": {
      "op": "MSTORE"
    },
    "5198": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5200": {
      "op": "ADD"
    },
    "5201": {
      "op": "SWAP1"
    },
    "5202": {
      "jump": "o",
      "op": "JUMP"
    },
    "5203": {
      "op": "JUMPDEST"
    },
    "5204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5206": {
      "op": "DUP3"
    },
    "5207": {
      "op": "NOT"
    },
    "5208": {
      "op": "DUP3"
    },
    "5209": {
      "op": "GT"
    },
    "5210": {
      "op": "ISZERO"
    },
    "5211": {
      "op": "PUSH2",
      "value": "0x1466"
    },
    "5214": {
      "op": "JUMPI"
    },
    "5215": {
      "op": "PUSH2",
      "value": "0x1466"
    },
    "5218": {
      "op": "PUSH2",
      "value": "0x163C"
    },
    "5221": {
      "jump": "i",
      "op": "JUMP"
    },
    "5222": {
      "op": "JUMPDEST"
    },
    "5223": {
      "op": "POP"
    },
    "5224": {
      "op": "ADD"
    },
    "5225": {
      "op": "SWAP1"
    },
    "5226": {
      "jump": "o",
      "op": "JUMP"
    },
    "5227": {
      "op": "JUMPDEST"
    },
    "5228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5230": {
      "op": "DUP3"
    },
    "5231": {
      "op": "PUSH2",
      "value": "0x1486"
    },
    "5234": {
      "op": "JUMPI"
    },
    "5235": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5240": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5242": {
      "op": "SHL"
    },
    "5243": {
      "op": "DUP2"
    },
    "5244": {
      "op": "MSTORE"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5249": {
      "op": "MSTORE"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5252": {
      "op": "DUP2"
    },
    "5253": {
      "op": "REVERT"
    },
    "5254": {
      "op": "JUMPDEST"
    },
    "5255": {
      "op": "POP"
    },
    "5256": {
      "op": "DIV"
    },
    "5257": {
      "op": "SWAP1"
    },
    "5258": {
      "jump": "o",
      "op": "JUMP"
    },
    "5259": {
      "op": "JUMPDEST"
    },
    "5260": {
      "op": "DUP1"
    },
    "5261": {
      "op": "DUP3"
    },
    "5262": {
      "op": "JUMPDEST"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5265": {
      "op": "DUP1"
    },
    "5266": {
      "op": "DUP7"
    },
    "5267": {
      "op": "GT"
    },
    "5268": {
      "op": "PUSH2",
      "value": "0x149D"
    },
    "5271": {
      "op": "JUMPI"
    },
    "5272": {
      "op": "POP"
    },
    "5273": {
      "op": "PUSH2",
      "value": "0x14C8"
    },
    "5276": {
      "op": "JUMP"
    },
    "5277": {
      "op": "JUMPDEST"
    },
    "5278": {
      "op": "DUP2"
    },
    "5279": {
      "op": "DUP8"
    },
    "5280": {
      "op": "DIV"
    },
    "5281": {
      "op": "DUP3"
    },
    "5282": {
      "op": "GT"
    },
    "5283": {
      "op": "ISZERO"
    },
    "5284": {
      "op": "PUSH2",
      "value": "0x14AF"
    },
    "5287": {
      "op": "JUMPI"
    },
    "5288": {
      "op": "PUSH2",
      "value": "0x14AF"
    },
    "5291": {
      "op": "PUSH2",
      "value": "0x163C"
    },
    "5294": {
      "jump": "i",
      "op": "JUMP"
    },
    "5295": {
      "op": "JUMPDEST"
    },
    "5296": {
      "op": "DUP1"
    },
    "5297": {
      "op": "DUP7"
    },
    "5298": {
      "op": "AND"
    },
    "5299": {
      "op": "ISZERO"
    },
    "5300": {
      "op": "PUSH2",
      "value": "0x14BC"
    },
    "5303": {
      "op": "JUMPI"
    },
    "5304": {
      "op": "SWAP2"
    },
    "5305": {
      "op": "DUP2"
    },
    "5306": {
      "op": "MUL"
    },
    "5307": {
      "op": "SWAP2"
    },
    "5308": {
      "op": "JUMPDEST"
    },
    "5309": {
      "op": "SWAP5"
    },
    "5310": {
      "op": "SWAP1"
    },
    "5311": {
      "op": "SWAP5"
    },
    "5312": {
      "op": "SHR"
    },
    "5313": {
      "op": "SWAP4"
    },
    "5314": {
      "op": "DUP1"
    },
    "5315": {
      "op": "MUL"
    },
    "5316": {
      "op": "PUSH2",
      "value": "0x148E"
    },
    "5319": {
      "op": "JUMP"
    },
    "5320": {
      "op": "JUMPDEST"
    },
    "5321": {
      "op": "SWAP5"
    },
    "5322": {
      "op": "POP"
    },
    "5323": {
      "op": "SWAP5"
    },
    "5324": {
      "op": "SWAP3"
    },
    "5325": {
      "op": "POP"
    },
    "5326": {
      "op": "POP"
    },
    "5327": {
      "op": "POP"
    },
    "5328": {
      "jump": "o",
      "op": "JUMP"
    },
    "5329": {
      "op": "JUMPDEST"
    },
    "5330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5332": {
      "op": "PUSH2",
      "value": "0x425"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5337": {
      "op": "NOT"
    },
    "5338": {
      "op": "DUP5"
    },
    "5339": {
      "op": "DUP5"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5342": {
      "op": "DUP3"
    },
    "5343": {
      "op": "PUSH2",
      "value": "0x14EA"
    },
    "5346": {
      "op": "JUMPI"
    },
    "5347": {
      "op": "POP"
    },
    "5348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5350": {
      "op": "PUSH2",
      "value": "0x425"
    },
    "5353": {
      "op": "JUMP"
    },
    "5354": {
      "op": "JUMPDEST"
    },
    "5355": {
      "op": "DUP2"
    },
    "5356": {
      "op": "PUSH2",
      "value": "0x14F7"
    },
    "5359": {
      "op": "JUMPI"
    },
    "5360": {
      "op": "POP"
    },
    "5361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5363": {
      "op": "PUSH2",
      "value": "0x425"
    },
    "5366": {
      "op": "JUMP"
    },
    "5367": {
      "op": "JUMPDEST"
    },
    "5368": {
      "op": "DUP2"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5371": {
      "op": "DUP2"
    },
    "5372": {
      "op": "EQ"
    },
    "5373": {
      "op": "PUSH2",
      "value": "0x150D"
    },
    "5376": {
      "op": "JUMPI"
    },
    "5377": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5379": {
      "op": "DUP2"
    },
    "5380": {
      "op": "EQ"
    },
    "5381": {
      "op": "PUSH2",
      "value": "0x1517"
    },
    "5384": {
      "op": "JUMPI"
    },
    "5385": {
      "op": "PUSH2",
      "value": "0x1544"
    },
    "5388": {
      "op": "JUMP"
    },
    "5389": {
      "op": "JUMPDEST"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5392": {
      "op": "SWAP2"
    },
    "5393": {
      "op": "POP"
    },
    "5394": {
      "op": "POP"
    },
    "5395": {
      "op": "PUSH2",
      "value": "0x425"
    },
    "5398": {
      "op": "JUMP"
    },
    "5399": {
      "op": "JUMPDEST"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5402": {
      "op": "DUP5"
    },
    "5403": {
      "op": "GT"
    },
    "5404": {
      "op": "ISZERO"
    },
    "5405": {
      "op": "PUSH2",
      "value": "0x1528"
    },
    "5408": {
      "op": "JUMPI"
    },
    "5409": {
      "op": "PUSH2",
      "value": "0x1528"
    },
    "5412": {
      "op": "PUSH2",
      "value": "0x163C"
    },
    "5415": {
      "jump": "i",
      "op": "JUMP"
    },
    "5416": {
      "op": "JUMPDEST"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5419": {
      "op": "DUP5"
    },
    "5420": {
      "op": "SHL"
    },
    "5421": {
      "op": "SWAP2"
    },
    "5422": {
      "op": "POP"
    },
    "5423": {
      "op": "DUP5"
    },
    "5424": {
      "op": "DUP3"
    },
    "5425": {
      "op": "GT"
    },
    "5426": {
      "op": "ISZERO"
    },
    "5427": {
      "op": "PUSH2",
      "value": "0x153E"
    },
    "5430": {
      "op": "JUMPI"
    },
    "5431": {
      "op": "PUSH2",
      "value": "0x153E"
    },
    "5434": {
      "op": "PUSH2",
      "value": "0x163C"
    },
    "5437": {
      "jump": "i",
      "op": "JUMP"
    },
    "5438": {
      "op": "JUMPDEST"
    },
    "5439": {
      "op": "POP"
    },
    "5440": {
      "op": "PUSH2",
      "value": "0x425"
    },
    "5443": {
      "op": "JUMP"
    },
    "5444": {
      "op": "JUMPDEST"
    },
    "5445": {
      "op": "POP"
    },
    "5446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5448": {
      "op": "DUP4"
    },
    "5449": {
      "op": "LT"
    },
    "5450": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "5453": {
      "op": "DUP4"
    },
    "5454": {
      "op": "LT"
    },
    "5455": {
      "op": "AND"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "5458": {
      "op": "DUP5"
    },
    "5459": {
      "op": "LT"
    },
    "5460": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "5462": {
      "op": "DUP5"
    },
    "5463": {
      "op": "LT"
    },
    "5464": {
      "op": "AND"
    },
    "5465": {
      "op": "OR"
    },
    "5466": {
      "op": "ISZERO"
    },
    "5467": {
      "op": "PUSH2",
      "value": "0x1577"
    },
    "5470": {
      "op": "JUMPI"
    },
    "5471": {
      "op": "POP"
    },
    "5472": {
      "op": "DUP2"
    },
    "5473": {
      "op": "DUP2"
    },
    "5474": {
      "op": "EXP"
    },
    "5475": {
      "op": "DUP4"
    },
    "5476": {
      "op": "DUP2"
    },
    "5477": {
      "op": "GT"
    },
    "5478": {
      "op": "ISZERO"
    },
    "5479": {
      "op": "PUSH2",
      "value": "0x1572"
    },
    "5482": {
      "op": "JUMPI"
    },
    "5483": {
      "op": "PUSH2",
      "value": "0x1572"
    },
    "5486": {
      "op": "PUSH2",
      "value": "0x163C"
    },
    "5489": {
      "jump": "i",
      "op": "JUMP"
    },
    "5490": {
      "op": "JUMPDEST"
    },
    "5491": {
      "op": "PUSH2",
      "value": "0x425"
    },
    "5494": {
      "op": "JUMP"
    },
    "5495": {
      "op": "JUMPDEST"
    },
    "5496": {
      "op": "PUSH2",
      "value": "0x1584"
    },
    "5499": {
      "op": "DUP5"
    },
    "5500": {
      "op": "DUP5"
    },
    "5501": {
      "op": "DUP5"
    },
    "5502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5504": {
      "op": "PUSH2",
      "value": "0x148B"
    },
    "5507": {
      "jump": "i",
      "op": "JUMP"
    },
    "5508": {
      "op": "JUMPDEST"
    },
    "5509": {
      "op": "DUP1"
    },
    "5510": {
      "op": "DUP7"
    },
    "5511": {
      "op": "DIV"
    },
    "5512": {
      "op": "DUP3"
    },
    "5513": {
      "op": "GT"
    },
    "5514": {
      "op": "ISZERO"
    },
    "5515": {
      "op": "PUSH2",
      "value": "0x1596"
    },
    "5518": {
      "op": "JUMPI"
    },
    "5519": {
      "op": "PUSH2",
      "value": "0x1596"
    },
    "5522": {
      "op": "PUSH2",
      "value": "0x163C"
    },
    "5525": {
      "jump": "i",
      "op": "JUMP"
    },
    "5526": {
      "op": "JUMPDEST"
    },
    "5527": {
      "op": "MUL"
    },
    "5528": {
      "op": "SWAP5"
    },
    "5529": {
      "op": "SWAP4"
    },
    "5530": {
      "op": "POP"
    },
    "5531": {
      "op": "POP"
    },
    "5532": {
      "op": "POP"
    },
    "5533": {
      "op": "POP"
    },
    "5534": {
      "jump": "o",
      "op": "JUMP"
    },
    "5535": {
      "op": "JUMPDEST"
    },
    "5536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5538": {
      "op": "DUP2"
    },
    "5539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5541": {
      "op": "NOT"
    },
    "5542": {
      "op": "DIV"
    },
    "5543": {
      "op": "DUP4"
    },
    "5544": {
      "op": "GT"
    },
    "5545": {
      "op": "DUP3"
    },
    "5546": {
      "op": "ISZERO"
    },
    "5547": {
      "op": "ISZERO"
    },
    "5548": {
      "op": "AND"
    },
    "5549": {
      "op": "ISZERO"
    },
    "5550": {
      "op": "PUSH2",
      "value": "0x15B9"
    },
    "5553": {
      "op": "JUMPI"
    },
    "5554": {
      "op": "PUSH2",
      "value": "0x15B9"
    },
    "5557": {
      "op": "PUSH2",
      "value": "0x163C"
    },
    "5560": {
      "jump": "i",
      "op": "JUMP"
    },
    "5561": {
      "op": "JUMPDEST"
    },
    "5562": {
      "op": "POP"
    },
    "5563": {
      "op": "MUL"
    },
    "5564": {
      "op": "SWAP1"
    },
    "5565": {
      "jump": "o",
      "op": "JUMP"
    },
    "5566": {
      "op": "JUMPDEST"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5569": {
      "op": "DUP3"
    },
    "5570": {
      "op": "DUP3"
    },
    "5571": {
      "op": "LT"
    },
    "5572": {
      "op": "ISZERO"
    },
    "5573": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "5576": {
      "op": "JUMPI"
    },
    "5577": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "5580": {
      "op": "PUSH2",
      "value": "0x163C"
    },
    "5583": {
      "jump": "i",
      "op": "JUMP"
    },
    "5584": {
      "op": "JUMPDEST"
    },
    "5585": {
      "op": "POP"
    },
    "5586": {
      "op": "SUB"
    },
    "5587": {
      "op": "SWAP1"
    },
    "5588": {
      "jump": "o",
      "op": "JUMP"
    },
    "5589": {
      "op": "JUMPDEST"
    },
    "5590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5592": {
      "op": "JUMPDEST"
    },
    "5593": {
      "op": "DUP4"
    },
    "5594": {
      "op": "DUP2"
    },
    "5595": {
      "op": "LT"
    },
    "5596": {
      "op": "ISZERO"
    },
    "5597": {
      "op": "PUSH2",
      "value": "0x15F0"
    },
    "5600": {
      "op": "JUMPI"
    },
    "5601": {
      "op": "DUP2"
    },
    "5602": {
      "op": "DUP2"
    },
    "5603": {
      "op": "ADD"
    },
    "5604": {
      "op": "MLOAD"
    },
    "5605": {
      "op": "DUP4"
    },
    "5606": {
      "op": "DUP3"
    },
    "5607": {
      "op": "ADD"
    },
    "5608": {
      "op": "MSTORE"
    },
    "5609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5611": {
      "op": "ADD"
    },
    "5612": {
      "op": "PUSH2",
      "value": "0x15D8"
    },
    "5615": {
      "op": "JUMP"
    },
    "5616": {
      "op": "JUMPDEST"
    },
    "5617": {
      "op": "DUP4"
    },
    "5618": {
      "op": "DUP2"
    },
    "5619": {
      "op": "GT"
    },
    "5620": {
      "op": "ISZERO"
    },
    "5621": {
      "op": "PUSH2",
      "value": "0xC97"
    },
    "5624": {
      "op": "JUMPI"
    },
    "5625": {
      "op": "POP"
    },
    "5626": {
      "op": "POP"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5629": {
      "op": "SWAP2"
    },
    "5630": {
      "op": "ADD"
    },
    "5631": {
      "op": "MSTORE"
    },
    "5632": {
      "jump": "o",
      "op": "JUMP"
    },
    "5633": {
      "op": "JUMPDEST"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5636": {
      "op": "DUP2"
    },
    "5637": {
      "op": "DUP2"
    },
    "5638": {
      "op": "SHR"
    },
    "5639": {
      "op": "SWAP1"
    },
    "5640": {
      "op": "DUP3"
    },
    "5641": {
      "op": "AND"
    },
    "5642": {
      "op": "DUP1"
    },
    "5643": {
      "op": "PUSH2",
      "value": "0x1615"
    },
    "5646": {
      "op": "JUMPI"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5649": {
      "op": "DUP3"
    },
    "5650": {
      "op": "AND"
    },
    "5651": {
      "op": "SWAP2"
    },
    "5652": {
      "op": "POP"
    },
    "5653": {
      "op": "JUMPDEST"
    },
    "5654": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5656": {
      "op": "DUP3"
    },
    "5657": {
      "op": "LT"
    },
    "5658": {
      "op": "DUP2"
    },
    "5659": {
      "op": "EQ"
    },
    "5660": {
      "op": "ISZERO"
    },
    "5661": {
      "op": "PUSH2",
      "value": "0x1636"
    },
    "5664": {
      "op": "JUMPI"
    },
    "5665": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5670": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5672": {
      "op": "SHL"
    },
    "5673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5675": {
      "op": "MSTORE"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5678": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5680": {
      "op": "MSTORE"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5685": {
      "op": "REVERT"
    },
    "5686": {
      "op": "JUMPDEST"
    },
    "5687": {
      "op": "POP"
    },
    "5688": {
      "op": "SWAP2"
    },
    "5689": {
      "op": "SWAP1"
    },
    "5690": {
      "op": "POP"
    },
    "5691": {
      "jump": "o",
      "op": "JUMP"
    },
    "5692": {
      "op": "JUMPDEST"
    },
    "5693": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5698": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5700": {
      "op": "SHL"
    },
    "5701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5703": {
      "op": "MSTORE"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5708": {
      "op": "MSTORE"
    },
    "5709": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5713": {
      "op": "REVERT"
    }
  },
  "sha1": "4374bdf27d7ca9f715c8b81e00c18ccff660df32",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.3; \n\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\n\ncontract QD is Ownable, ERC20 {\n    using SafeERC20 for ERC20;\n    \n    // NEAR NEP-141s have this precision...\n    uint constant internal _QD_DECIMALS = 24;\n    uint constant internal _USDT_DECIMALS = 6;\n\n    uint constant public MINT_QD_PER_DAY_MAX = 500_000; // half a mil\n    uint constant public SALE_LENGTH = 54 days; // '54 - '15, RIP\n    \n    uint constant public start_price = 22; // in cents\n    uint constant public final_price = 96; // 9x6 = 54\n    uint private_price; uint private_mint;\n\n    // Set in constructor and never changed\n    uint  immutable public sale_start;\n    ERC20 immutable public usdt;\n\n    event Mint (address indexed reciever, uint cost_in_usd, uint qd_amt);\n    event Withdrawal (address indexed owner, uint amount);\n\n    constructor(ERC20 _usdt) ERC20(\"QuiD\", \"QD\") {\n        require(\n            keccak256(abi.encodePacked(_usdt.symbol()))\n            == keccak256(abi.encodePacked(\"USDT\"))\n        , \"QD: CONSTRUCTOR_R1\");\n        private_price = 2;\n        sale_start = block.timestamp;\n        usdt = _usdt;\n    }\n\n    function mint(uint qd_amt, address beneficiary) external returns (uint cost_in_usdt) { \n        require(qd_amt >= 100_000_000_000_000_000_000_000_000, \"QD: MINT_R1\"); // $100 minimum\n        require(block.timestamp < sale_start + SALE_LENGTH, \"QD: MINT_R2\"); // April 20, 2022\n        \n        if (_msgSender() == owner()) {\n            require(private_price < start_price, \"Can't allocate any more\");\n            uint minting = 2_700_000_000_000_000_000_000_000_000_000; // from 2 cents to 20 (incl) \n            // we can mint 2.7M ten times to mirror the total that can be minted (500k * 54 days)\n            cost_in_usdt = minting * 10 ** _USDT_DECIMALS * private_price / 10 ** _QD_DECIMALS / 100; \n            private_mint += minting;\n            private_price += 2;\n        } \n        else {\n            // Calculate cost in USDT based on current price\n            cost_in_usdt = qd_amt_to_usdt_amt(qd_amt, block.timestamp);\n        }\n        // Optimistically mint\n        _mint(beneficiary, qd_amt);\n\n        // Cap minting\n        require(totalSupply() - private_mint <= get_total_supply_cap(), \"QD: MINT_R3\");\n\n        // Will revert on failure (namely insufficient allowance)\n        usdt.safeTransferFrom(_msgSender(), address(this), cost_in_usdt);\n\n        emit Mint(_msgSender(), cost_in_usdt, qd_amt);\n    }\n\n    function withdraw(uint amount) external onlyOwner {\n        require(block.timestamp > sale_start + SALE_LENGTH, \"QD: MINT_R2\");\n        usdt.safeTransfer(owner(), amount);\n        emit Withdrawal(owner(), amount);\n    }\n\n    function decimals() public view override(ERC20) returns (uint8) {\n        return uint8(_QD_DECIMALS);\n    }\n\n    function get_total_supply_cap() public view returns (uint total_supply_cap) {\n        uint time_elapsed = block.timestamp - sale_start;\n        total_supply_cap = MINT_QD_PER_DAY_MAX * 10 ** _QD_DECIMALS * time_elapsed / 1 days;\n    }\n\n    function qd_amt_to_usdt_amt(\n        uint qd_amt,\n        uint block_timestamp\n    ) public view returns (uint usdt_amount) \n    {\n        uint time_elapsed = block_timestamp - sale_start;\n\n        // price = ((now - sale_start) // SALE_LENGTH) * (final_price - start_price) + start_price\n        uint price = (final_price - start_price) * time_elapsed / SALE_LENGTH + start_price;\n\n        // cost = amount / qd_multiplier * usdt_multipler * price / 100\n        usdt_amount = qd_amt * 10 ** _USDT_DECIMALS * price / 10 ** _QD_DECIMALS / 100;\n    }\n}",
  "sourceMap": "234:3514:0:-:0;;;990:296;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1978:113:2;;;;;;;;;;;;;-1:-1:-1;;;1978:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:2;;;921:32:1;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;2044:13:2;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;1135:24:0::1;::::0;-1:-1:-1;;;1135:24:0::1;::::0;::::1;1755:19:8::0;1790:11;;;-1:-1:-1;1135:24:0::1;;;;;;;;;;;;1125:35;;;;;;1093:5;-1:-1:-1::0;;;;;1093:12:0::1;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1093:14:0::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1076:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;1066:43;;;;;;:94;1045:147;;;::::0;-1:-1:-1;;;1045:147:0;;2014:2:8;1045:147:0::1;::::0;::::1;1996:21:8::0;2053:2;2033:18;;;2026:30;-1:-1:-1;;;2072:18:8;;;2065:48;2130:18;;1045:147:0::1;;;;;;;;1218:1;1202:13;:17:::0;1242:15:::1;1229:28;::::0;1267:12:::1;::::0;-1:-1:-1;;;;;;1267:12:0;::::1;::::0;234:3514;;640:96:7;719:10;640:96;:::o;2270:187:1:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;234:3514:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;234:3514:0;;;-1:-1:-1;234:3514:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:324:8;;151:2;139:9;130:7;126:23;122:32;119:2;;;172:6;164;157:22;119:2;203:16;;-1:-1:-1;;;;;248:31:8;;238:42;;228:2;;299:6;291;284:22;228:2;327:5;109:229;-1:-1:-1;;;109:229:8:o;343:924::-;;476:2;464:9;455:7;451:23;447:32;444:2;;;497:6;489;482:22;444:2;529:16;;-1:-1:-1;;;;;594:14:8;;;591:2;;;626:6;618;611:22;591:2;669:6;658:9;654:22;644:32;;714:7;707:4;703:2;699:13;695:27;685:2;;741:6;733;726:22;685:2;775;769:9;797:2;793;790:10;787:2;;;803:18;;:::i;:::-;878:2;872:9;846:2;932:13;;-1:-1:-1;;928:22:8;;;952:2;924:31;920:40;908:53;;;976:18;;;996:22;;;973:46;970:2;;;1022:18;;:::i;:::-;1062:10;1058:2;1051:22;1097:2;1089:6;1082:18;1137:7;1132:2;1127;1123;1119:11;1115:20;1112:33;1109:2;;;1163:6;1155;1148:22;1109:2;1181:55;1233:2;1228;1220:6;1216:15;1211:2;1207;1203:11;1181:55;:::i;:::-;1255:6;434:833;-1:-1:-1;;;;;;;434:833:8:o;1272:276::-;;1441:6;1435:13;1457:53;1503:6;1498:3;1491:4;1483:6;1479:17;1457:53;:::i;:::-;1526:16;;;;;1411:137;-1:-1:-1;;1411:137:8:o;2159:258::-;2231:1;2241:113;2255:6;2252:1;2249:13;2241:113;;;2331:11;;;2325:18;2312:11;;;2305:39;2277:2;2270:10;2241:113;;;2372:6;2369:1;2366:13;2363:2;;;2407:1;2398:6;2393:3;2389:16;2382:27;2363:2;;2212:205;;;:::o;2422:380::-;2501:1;2497:12;;;;2544;;;2565:2;;2619:4;2611:6;2607:17;2597:27;;2565:2;2672;2664:6;2661:14;2641:18;2638:38;2635:2;;;2718:10;2713:3;2709:20;2706:1;2699:31;2753:4;2750:1;2743:15;2781:4;2778:1;2771:15;2635:2;;2477:325;;;:::o;2807:127::-;2868:10;2863:3;2859:20;2856:1;2849:31;2899:4;2896:1;2889:15;2923:4;2920:1;2913:15;2839:95;234:3514:0;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/QD.sol",
  "type": "contract"
}
