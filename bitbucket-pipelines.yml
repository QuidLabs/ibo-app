image: node:16

options:
  size: 2x

definitions:
  services:
    docker:
      memory: 7128
  caches:
    docker-cache: docker-cache

  steps:
    - step: &set-environment
        name: Set Environment
        artifacts:
          - environment.sh

    - step: &build-test
        name: Build and test
        caches:
          - node
        script:
          - yarn install
          - yarn test || true
          - yarn lint . || true
          - yarn build

    - step: &build-deploy
        name: Helm - Build and Deploy
        services:
          - docker
        caches:
          - docker-cache
        image: alpine/helm:3.6.3
        script:
          - |
            source environment.sh
            export APP_NAME=ui
            if [[ -f "docker-cache/cache.tar" ]]; then
              docker load < docker-cache/cache.tar;
            fi
          - &docker-build >-
            docker build
            --build-arg API_URL=$API_URL
            --build-arg USDT_CONTRACT_ID=$USDT_CONTRACT_ID
            --build-arg CONTRACT_ID=$CONTRACT_ID
            --build-arg INFURA_KEY=$INFURA_KEY
            --build-arg NETWOKR=$NETWOKR
            -t quid-${APP_NAME}:latest
            -t quid-${APP_NAME}:develop-latest
            -t quid-${APP_NAME}:$DOCKER_ENV_TAG
            .
          - >-
            docker save $(docker images -qa) > docker-cache/cache.tar;
          - &docker-push
            pipe: atlassian/aws-ecr-push-image:1.4.2
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
              IMAGE_NAME: quid-${APP_NAME}
              TAGS: >-
                latest
                develop-latest
                $DOCKER_ENV_TAG
          - export APP_NAME=ui
          - |
            echo "environment:" > env-values.yaml
            env | sed -e 's/=/: /' -e 's/^/  /' >> env-values.yaml

            if [ ! -d manifests ]
            then
              mkdir -p manifests
            fi

            export CHART_FOLDER=deployment/${APP_NAME}
            helm lint $CHART_FOLDER
            helm template $APP_NAME $CHART_FOLDER \
              --set image.tag=$DOCKER_ENV_TAG \
              --set ingress.host=$K8S_INGRESS_HOST \
              -f deployment/ui/values-$BITBUCKET_DEPLOYMENT_ENVIRONMENT.yaml \
              -f env-values.yaml \
              > manifests/$APP_NAME.yml

          - <<: &helm-deploy
              pipe: atlassian/aws-eks-kubectl-run:2.2.0
              variables:
                AWS_ACCESS_KEY_ID: '$AWS_ACCESS_KEY_ID'
                AWS_SECRET_ACCESS_KEY: '$AWS_SECRET_ACCESS_KEY'
                AWS_DEFAULT_REGION: '$AWS_DEFAULT_REGION'
                CLUSTER_NAME: '$CLUSTER_NAME'
                ROLE_ARN: '$ROLE_ARN'
                KUBECTL_COMMAND: 'apply'
                RESOURCE_PATH: 'manifests'
                KUBECTL_ARGS:
                  - '--namespace=quid-$BITBUCKET_DEPLOYMENT_ENVIRONMENT'
        artifacts:
          - manifests/**
          - environment.sh

pipelines:
  pull-requests:
    '**':
      - step: *build-test

  branches:
    develop:
      - step:
          <<: *set-environment
          script:
            - >-
              echo export DOCKER_ENV_TAG=develop-$BITBUCKET_COMMIT >> environment.sh
      - step:
          <<: *build-deploy
          deployment: development

  custom:

  tags:
    '*':
      - step:
          <<: *set-environment
          script:
            - >-
              echo export DOCKER_ENV_TAG=$BITBUCKET_TAG >> environment.sh

      - step:
          <<: *build-deploy
          deployment: production
